/*
We are using the OpenCV implementation and adding:
() Adaptive non max suppression of features described
   in paper:  Multi-Image Matching using Multi-Scale Oriented Patches
() Using fast score instead of harris score mainly because it gives better distribution
    for the adaptive non max supression.

Added methods : SubimageToImageCoordinates
*/

/*********************************************************************
* Software License Agreement (BSD License)
*
*  Copyright (c) 2009, Willow Garage, Inc.
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions
*  are met:
*
*   * Redistributions of source code must retain the above copyright
*     notice, this list of conditions and the following disclaimer.
*   * Redistributions in binary form must reproduce the above
*     copyright notice, this list of conditions and the following
*     disclaimer in the documentation and/or other materials provided
*     with the distribution.
*   * Neither the name of the Willow Garage nor the names of its
*     contributors may be used to endorse or promote products derived
*     from this software without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*********************************************************************/

/** Authors: Ethan Rublee, Vincent Rabaud, Gary Bradski */

#if _DEBUG
#define VERIFY_SIMD true
#endif

#include "OpenCVModified.h"
#include "Utils/Logging.h"
#include <arcana/math.h>

#include <opencv2/core/core.hpp>
#include <opencv2/features2d/features2d.hpp>
#include <opencv2/imgproc/imgproc.hpp>

using namespace cv;

namespace
{
    const size_t DESCRIPTOR_SIZE = 32;
    const size_t ROTATION_INCREMENT_DEGREES = 12;
    const size_t ROTATION_INCREMENT_COUNT = 30;

    const size_t PREROTATED_PATTERN_SIZE = 256 * 4 * ROTATION_INCREMENT_COUNT;

    // This pattern was generated from the pattern above using Tools/PatternCalculator, which rotates the array once per 12 degree increment.
    // 12 degrees is tunable, though it requires re-running the tool and copy/pasting the result here.  12 came from "ORB: an efficient alternative 
    // to SIFT or SURF" (Rublee et all) section 4.1.

    signed char bit_pattern_31_rotated[PREROTATED_PATTERN_SIZE] = {
        8,-3, 9,5, 4,2, 7,-12, -11,9, -8,2, 7,-12, 12,-13, 2,-13, 2,12, 1,-7, 1,6, -2,-10, -2,-4, -13,-13, -11,-8, -13,-3, -12,-9, 10,4, 11,9, -13,-8, -8,-9, -11,7, -9,12, 7,7, 12,6, -4,-5, -3,0, -13,2, -12,-3, -9,0, -7,5, 12,-6, 12,-1, -3,6, -2,12, -6,-13, -4,-8, 11,-13, 12,-8, 4,7, 5,1, 5,-3, 10,-3, 3,-7, 6,12, -8,-7, -6,-2, -2,11, -1,-10, -13,12, -8,10, -7,3, -5,-3, -4,2, -3,7, -10,-12, -6,11, 5,-12, 6,-7, 5,-6, 7,-1, 1,0, 4,-5, 9,11, 11,-13, 4,7, 4,12, 2,-1, 4,4, -4,-12, -2,7, -8,-5, -7,-10, 4,11, 9,12, 0,-8, 1,-13, -13,-2, -8,2, -3,-2, -2,3, -6,9, -4,-9, 8,12, 10,7, 0,9, 1,3, 7,-5, 11,-10, -13,-6, -11,0, 10,7, 12,1, -6,-3, -6,12, 10,-9, 12,-4, -13,8, -8,-12, -13,0, -8,-4, 3,3, 7,8, 5,7, 10,-7, -1,7, 1,-12, 3,-10, 5,6, 2,-4, 3,-10, -13,0, -13,5, -13,-7, -12,12, -13,3, -11,8, -7,12, -4,7, 6,-10, 12,8, -9,-1, -7,-6, -2,-5, 0,12, -12,5, -7,5, 3,-10, 8,-13, -7,-7, -4,5, -3,-2, -1,-7, 2,9, 5,-11, -11,-13, -5,-13, -1,6, 0,-1, 5,-3, 5,2, -4,-13, -4,12, -9,-6, -9,6, -12,-10, -8,-4, 10,2, 12,-3, 7,12, 12,12, -7,-13, -6,5, -4,9, -3,4, 7,-1, 12,2, -7,6, -5,1, -13,11, -12,5, -3,7, -2,-6, 7,-8, 12,-7, -13,-7, -11,-12, 1,-3, 12,12, 2,-6, 3,0, -4,3, -2,-13, -1,-13, 1,9, 7,1, 8,-6, 1,-1, 3,12, 9,1, 12,6, -1,-9, -1,3, -13,-13, -10,5, 7,7, 10,12, 12,-5, 12,9, 6,3, 7,11, 5,-13, 6,10, 2,-12, 2,3, 3,8, 4,-6, 2,6, 12,-13, 9,-12, 10,3, -8,4, -7,9, -11,12, -4,-6, 1,12, 2,-8, 6,-9, 7,-4, 2,3, 3,-2, 6,3, 11,0, 3,-3, 8,-8, 7,8, 9,3, -11,-5, -6,-4, -10,11, -5,10, -5,-8, -3,12, -10,5, -9,0, 8,-1, 12,-6, 4,-6, 6,-11, -10,12, -8,7, 4,-2, 6,7, -2,0, -2,12, -5,-8, -5,2, 7,-6, 10,12, -9,-13, -8,-8, -5,-13, -5,-2, 8,-8, 9,-13, -9,-11, -9,0, 1,-8, 1,-2, 7,-4, 9,1, -2,1, -1,-4, 11,-6, 12,-11, -12,-9, -6,4, 3,7, 7,12, 5,5, 10,8, 0,-4, 2,8, -9,12, -5,-13, 0,7, 2,12, -1,2, 1,7, 5,11, 7,-9, 3,5, 6,-8, -13,-4, -8,9, -5,9, -3,-3, -4,-7, -3,-12, 6,5, 8,0, -7,6, -6,12, -13,6, -5,-2, 1,-10, 3,10, 4,1, 8,-4, -2,-2, 2,-13, 2,-12, 12,12, -2,-13, 0,-6, 4,1, 9,3, -6,-10, -3,-5, -3,-13, -1,1, 7,5, 12,-11, 4,-2, 5,-7, -13,9, -9,-5, 7,1, 8,6, 7,-8, 7,6, -7,-4, -7,1, -8,11, -7,-8, -13,6, -12,-8, 2,4, 3,9, 10,-5, 12,3, -6,-5, -6,7, 8,-3, 9,-8, 2,-12, 2,8, -11,-2, -10,3, -12,-13, -7,-9, -11,0, -10,-5, 5,-3, 11,8, -2,-13, -1,12, -1,-8, 0,9, -13,-11, -12,-5, -10,-2, -10,11, -3,9, -2,-13, 2,-3, 3,2, -9,-13, -4,0, -4,6, -3,-10, -4,12, -2,-7, -6,-11, -4,9, 6,-3, 6,11, -13,11, -5,5, 11,11, 12,6, 7,-5, 12,-2, -1,12, 0,7, -4,-8, -3,-2, -7,1, -6,7, -13,-12, -8,-13, -7,-2, -6,-8, -8,5, -6,-9, -5,-1, -4,5, -13,7, -8,10, 1,5, 5,-13, 1,0, 10,-13, 9,12, 10,-1, 5,-8, 10,-9, -1,11, 1,-13, -9,-3, -6,2, -1,-10, 1,12, -13,1, -8,-10, 8,-11, 10,-6, 2,-13, 3,-6, 7,-13, 12,-9, -10,-10, -5,-7, -10,-8, -8,-13, 4,-6, 8,5, 3,12, 8,-13, -4,2, -3,-3, 5,-13, 10,-12, 4,-13, 5,-1, -9,9, -4,3, 0,3, 3,-9, -12,1, -6,1, 3,2, 4,-8, -10,-10, -10,9, 8,-13, 12,12, -8,-12, -6,-5, 2,2, 3,7, 10,6, 11,-8, 6,8, 8,-12, -7,10, -6,5, -3,-9, -3,9, -1,-13, -1,5, -3,-7, -3,4, -8,-2, -8,3, 4,2, 12,12, 2,-5, 3,11, 6,-9, 11,-13, 3,-1, 7,12, 11,-1, 12,4, -3,0, -3,6, 4,-11, 4,12, 2,-4, 2,1, -10,-6, -8,1, -13,7, -11,1, -13,12, -11,-13, 6,0, 11,-13, 0,-1, 1,4, -13,3, -9,-2, -9,8, -6,-3, -13,-6, -8,-2, 5,-9, 8,10, 2,7, 3,-9, -1,-6, -1,-1, 9,5, 11,-2, 11,-3, 12,-8, 3,0, 3,5, -1,4, 0,10, 3,-6, 4,5, -13,0, -10,5, 5,8, 12,11, 8,9, 9,-6, 7,-4, 8,-12, -10,4, -10,9, 7,3, 12,4, 9,-7, 10,-2, 7,0, 12,-2, -1,-6, 0,-11,
        8,-1, 8,7, 3,3, 9,-10, -13,7, -8,0, 9,-10, 14,-10, 5,-12, -1,12, 2,-7, 0,6, 0,-10, -1,-4, -10,-15, -9,-10, -12,-6, -10,-11, 9,6, 9,11, -11,-11, -6,-10, -12,5, -11,10, 5,8, 10,8, -3,-6, -3,-1, -13,-1, -11,-5, -9,-2, -8,3, 13,-3, 12,2, -4,5, -4,11, -3,-14, -2,-9, 13,-10, 13,-5, 2,8, 5,2, 6,-2, 10,-1, 4,-6, 3,13, -6,-9, -5,-3, -4,10, 1,-10, -15,9, -10,8, -7,1, -4,-4, -4,1, -4,6, -7,-14, -8,10, 7,-11, 7,-6, 6,-5, 7,0, 1,0, 5,-4, 7,13, 13,-10, 2,8, 1,13, 2,-1, 3,5, -1,-13, -3,6, -7,-7, -5,-11, 2,12, 6,14, 2,-8, 4,-13, -12,-5, -8,0, -3,-3, -3,3, -8,8, -2,-10, 5,13, 8,9, -2,9, 0,3, 8,-3, 13,-7, -11,-9, -11,-2, 8,9, 12,3, -5,-4, -8,10, 12,-7, 13,-1, -14,5, -5,-13, -13,-3, -7,-6, 2,4, 5,9, 3,8, 11,-5, -2,7, 3,-12, 5,-9, 4,7, 3,-3, 5,-9, -13,-3, -14,2, -11,-10, -14,9, -13,0, -12,6, -9,10, -5,6, 8,-9, 10,10, -9,-3, -6,-7, -1,-5, -2,12, -13,2, -8,3, 5,-9, 11,-11, -5,-8, -5,4, -3,-3, 0,-7, 0,9, 7,-10, -8,-15, -2,-14, -2,6, 0,-1, 6,-2, 4,3, -1,-14, -6,11, -8,-8, -10,4, -10,-12, -7,-6, 9,4, 12,0, 4,13, 9,14, -4,-14, -7,4, -6,8, -4,3, 7,0, 11,4, -8,4, -5,0, -15,8, -13,2, -4,6, -1,-6, 9,-6, 13,-4, -11,-10, -8,-14, 2,-3, 9,14, 3,-5, 3,1, -5,2, 1,-13, 2,-13, -1,9, 7,2, 9,-4, 1,-1, 0,12, 9,3, 10,8, 1,-9, -2,3, -10,-15, -11,3, 5,8, 7,14, 13,-2, 10,11, 5,4, 5,12, 8,-12, 4,11, 4,-11, 1,3, 1,8, 5,-5, 1,6, 14,-10, 11,-10, 9,5, -9,2, -9,7, -13,9, -3,-7, -2,12, 4,-7, 8,-8, 8,-2, 1,3, 3,-1, 5,4, 11,2, 4,-2, 9,-6, 5,9, 8,5, -10,-7, -5,-5, -12,9, -7,9, -3,-9, -5,11, -11,3, -9,-2, 8,1, 13,-3, 5,-5, 8,-10, -12,10, -9,5, 4,-1, 4,8, -2,0, -4,11, -3,-9, -5,1, 8,-4, 7,14, -6,-15, -6,-9, -2,-14, -4,-3, 9,-6, 12,-11, -7,-13, -9,-2, 3,-8, 1,-2, 8,-2, 9,3, -2,1, 0,-4, 12,-4, 14,-8, -10,-11, -7,3, 1,7, 4,13, 4,6, 8,10, 1,-4, 0,8, -11,10, -2,-14, -1,7, -1,12, -1,2, 0,7, 3,12, 9,-7, 2,6, 8,-7, -12,-7, -10,7, -7,8, -2,-4, -2,-8, 0,-12, 5,6, 8,2, -8,4, -8,10, -14,3, -4,-3, 3,-10, 1,10, 4,2, 9,-2, -2,-2, 5,-12, 4,-11, 9,14, 1,-13, 1,-6, 4,2, 8,5, -4,-11, -2,-6, 0,-13, -1,1, 6,6, 14,-8, 4,-1, 6,-6, -15,6, -8,-7, 7,2, 7,8, 9,-6, 6,7, -6,-5, -7,0, -10,9, -5,-9, -14,3, -10,-10, 1,4, 1,9, 11,-3, 11,5, -5,-6, -7,6, 8,-1, 10,-6, 4,-11, 0,8, -10,-4, -10,1, -9,-15, -5,-10, -11,-2, -9,-7, 6,-2, 9,10, 1,-13, -3,12, 1,-8, -2,9, -10,-13, -11,-7, -9,-4, -12,9, -5,8, 1,-13, 3,-3, 3,3, -6,-15, -4,-1, -5,5, -1,-10, -6,11, -1,-7, -4,-12, -6,8, 6,-2, 4,12, -15,8, -6,4, 8,13, 10,8, 8,-3, 12,1, -3,12, -1,7, -2,-9, -3,-3, -7,0, -7,6, -10,-14, -5,-14, -6,-3, -4,-9, -9,3, -4,-10, -5,-2, -5,4, -14,4, -10,8, 0,5, 8,-12, 1,0, 12,-11, 6,14, 10,1, 7,-7, 12,-7, -3,11, 4,-13, -8,-5, -6,1, 1,-10, -2,12, -13,-2, -6,-11, 10,-9, 11,-4, 5,-12, 4,-5, 10,-11, 14,-6, -8,-12, -3,-8, -8,-10, -5,-14, 5,-5, 7,7, 0,12, 11,-11, -4,1, -2,-4, 8,-12, 12,-10, 7,-12, 5,0, -11,7, -5,2, -1,3, 5,-8, -12,-2, -6,0, 3,3, 6,-7, -8,-12, -12,7, 11,-11, 9,14, -5,-13, -5,-6, 2,2, 1,7, 9,8, 12,-6, 4,9, 10,-10, -9,8, -7,4, -1,-9, -5,8, 2,-13, -2,5, -1,-7, -4,3, -7,-4, -8,1, 3,3, 9,14, 3,-4, 1,11, 8,-8, 13,-10, 3,0, 4,13, 11,1, 11,6, -3,-1, -4,5, 6,-10, 1,13, 3,-3, 2,1, -9,-8, -8,-1, -14,4, -11,-1, -15,9, -8,-15, 6,1, 13,-10, 0,-1, 0,4, -13,0, -8,-4, -10,6, -5,-4, -11,-9, -7,-4, 7,-8, 6,11, 1,7, 5,-8, 0,-6, -1,-1, 8,7, 11,0, 11,-1, 13,-5, 3,1, 2,6, -2,4, -2,10, 4,-5, 3,6, -13,-3, -11,3, 3,9, 9,13, 6,10, 10,-4, 8,-2, 10,-10, -11,2, -12,7, 6,4, 11,6, 10,-5, 10,0, 7,1, 12,1, 0,-6, 2,-11,
        9,1, 6,8, 3,3, 11,-8, -14,4, -8,-1, 11,-8, 16,-7, 7,-11, -3,12, 4,-6, -2,6, 2,-10, 0,-4, -7,-17, -7,-12, -11,-8, -7,-13, 8,8, 6,13, -9,-13, -4,-11, -13,2, -13,7, 4,9, 9,10, -2,-6, -3,-1, -13,-3, -10,-8, -8,-4, -8,2, 13,-1, 11,4, -5,4, -7,10, 0,-14, 0,-9, 15,-7, 14,-2, 1,8, 4,3, 6,-1, 10,1, 6,-5, 1,13, -4,-10, -5,-4, -6,9, 3,-10, -17,6, -11,6, -8,0, -3,-5, -4,0, -6,5, -4,-15, -10,8, 9,-9, 8,-4, 7,-3, 7,2, 1,0, 6,-3, 4,14, 15,-7, 1,8, -1,13, 2,0, 2,5, 1,-13, -5,6, -5,-8, -2,-12, -1,12, 3,15, 3,-7, 6,-11, -11,-7, -8,-1, -2,-3, -3,2, -9,6, 0,-10, 2,14, 6,10, -4,8, 0,3, 8,-2, 14,-5, -9,-11, -10,-4, 6,10, 11,6, -4,-5, -10,9, 13,-4, 13,1, -15,2, -2,-14, -12,-5, -6,-7, 2,4, 3,10, 2,8, 12,-2, -4,6, 6,-11, 7,-8, 2,8, 3,-3, 7,-8, -12,-5, -14,-1, -9,-12, -16,6, -13,-3, -13,3, -11,8, -7,5, 10,-7, 8,12, -8,-5, -4,-8, 0,-5, -5,11, -13,0, -8,2, 7,-8, 13,-9, -4,-9, -6,3, -2,-3, 2,-7, -2,9, 9,-8, -5,-16, 1,-14, -3,5, 0,-1, 6,-1, 4,4, 2,-14, -9,9, -6,-9, -11,2, -7,-14, -6,-7, 8,6, 12,2, 2,14, 6,16, -1,-15, -8,2, -7,7, -4,2, 7,2, 10,7, -9,3, -5,-1, -16,5, -13,0, -6,5, 1,-6, 10,-4, 14,-2, -9,-12, -5,-15, 2,-2, 6,16, 4,-5, 3,1, -5,1, 3,-13, 4,-12, -3,9, 6,4, 10,-2, 1,-1, -2,12, 8,5, 9,10, 3,-9, -2,2, -7,-17, -11,1, 4,9, 4,15, 13,0, 7,13, 4,5, 2,13, 10,-10, 1,12, 7,-10, 1,4, -1,9, 6,-4, -1,6, 16,-7, 13,-7, 8,7, -9,0, -10,5, -15,6, -1,-7, -4,11, 5,-6, 9,-6, 8,-1, 1,4, 4,-1, 4,5, 10,4, 4,-2, 11,-4, 3,10, 7,6, -8,-9, -4,-6, -14,6, -9,7, -1,-9, -8,10, -11,1, -8,-4, 8,2, 13,-1, 6,-4, 10,-8, -14,7, -10,3, 4,0, 3,9, -2,-1, -7,10, -1,-9, -5,0, 9,-3, 4,15, -3,-16, -4,-11, 1,-14, -4,-4, 11,-4, 14,-8, -4,-14, -8,-4, 4,-7, 2,-1, 8,-1, 8,5, -2,0, 1,-4, 12,-1, 15,-5, -7,-13, -7,1, 0,8, 2,14, 3,7, 6,11, 2,-4, -1,8, -13,7, 1,-14, -3,6, -3,12, -2,1, -2,7, 0,12, 10,-5, 1,6, 9,-5, -10,-9, -11,5, -8,6, -2,-4, -1,-8, 2,-12, 3,7, 7,3, -9,3, -10,9, -14,0, -4,-4, 5,-9, -1,10, 3,3, 9,0, -1,-3, 7,-11, 7,-10, 6,16, 3,-13, 2,-5, 3,3, 7,6, -1,-12, -1,-6, 3,-13, -1,1, 4,7, 15,-5, 4,0, 7,-4, -16,3, -6,-8, 6,4, 5,9, 10,-4, 4,8, -5,-7, -7,-2, -12,7, -3,-10, -14,0, -8,-12, 0,4, -1,9, 11,-1, 10,8, -3,-7, -8,4, 9,1, 11,-4, 7,-10, -1,8, -9,-6, -10,-1, -6,-17, -3,-11, -10,-4, -7,-9, 6,-1, 7,12, 3,-13, -6,11, 2,-8, -4,8, -7,-15, -9,-9, -8,-6, -14,6, -6,7, 3,-13, 3,-2, 2,3, -3,-16, -4,-2, -6,4, 1,-10, -9,9, 1,-7, -1,-12, -7,7, 7,0, 1,12, -16,5, -7,3, 6,15, 9,10, 8,-2, 12,3, -6,11, -3,6, 0,-9, -2,-3, -7,-2, -8,4, -7,-16, -2,-15, -6,-5, -2,-10, -9,1, -2,-11, -4,-3, -6,3, -15,1, -11,6, -1,5, 10,-10, 1,0, 14,-8, 3,15, 10,3, 8,-5, 13,-4, -5,10, 6,-11, -7,-6, -6,-1, 3,-10, -4,11, -12,-4, -3,-12, 12,-7, 12,-1, 7,-11, 5,-4, 12,-9, 15,-3, -5,-13, -2,-8, -6,-11, -2,-15, 6,-4, 5,8, -2,12, 13,-9, -4,0, -2,-4, 10,-10, 14,-7, 9,-10, 5,1, -12,5, -5,1, -1,3, 6,-7, -11,-4, -6,-2, 2,3, 7,-6, -5,-13, -13,4, 13,-9, 6,16, -2,-14, -3,-7, 1,3, 0,8, 7,10, 13,-3, 2,10, 12,-8, -10,6, -8,2, 1,-9, -6,7, 4,-12, -3,4, 0,-8, -4,2, -6,-5, -9,-1, 3,3, 6,16, 4,-4, -2,11, 9,-6, 15,-7, 3,0, 2,14, 10,4, 9,9, -3,-1, -5,4, 8,-8, -1,13, 3,-3, 1,2, -7,-10, -8,-2, -15,1, -10,-4, -17,6, -5,-16, 5,2, 15,-7, 0,-1, -1,4, -13,-3, -7,-5, -11,4, -4,-5, -9,-11, -6,-5, 8,-6, 3,12, -1,7, 6,-7, 2,-6, -1,-1, 6,8, 11,3, 11,2, 14,-2, 3,1, 1,6, -3,3, -4,9, 5,-4, 2,6, -12,-5, -11,1, 1,9, 6,15, 4,11, 11,-2, 8,-1, 12,-8, -11,0, -13,4, 5,6, 9,9, 11,-3, 10,2, 6,3, 12,3, 2,-6, 4,-10,
        8,2, 4,9, 2,4, 13,-6, -14,1, -8,-3, 13,-6, 17,-3, 9,-9, -5,11, 5,-5, -3,5, 4,-9, 1,-4, -3,-18, -4,-13, -9,-10, -4,-14, 6,9, 4,14, -6,-14, -1,-12, -13,-1, -14,4, 2,10, 6,12, 0,-6, -2,-2, -12,-6, -8,-9, -7,-5, -9,0, 13,2, 10,6, -6,3, -9,9, 3,-14, 1,-9, 17,-4, 14,1, -1,8, 3,4, 6,1, 10,3, 7,-4, -2,13, -2,-10, -4,-5, -8,8, 5,-9, -18,2, -12,3, -7,-2, -2,-5, -4,-1, -7,4, -1,-16, -11,5, 11,-7, 9,-2, 8,-2, 6,3, 1,1, 6,-2, 1,14, 17,-4, -1,8, -4,12, 2,0, 1,6, 4,-12, -6,4, -4,-9, 0,-12, -3,11, 0,15, 5,-6, 8,-10, -9,-9, -8,-3, -1,-3, -3,1, -10,4, 2,-10, -1,14, 4,12, -5,7, -1,3, 9,0, 15,-2, -7,-12, -9,-6, 4,12, 9,8, -3,-6, -12,6, 13,-1, 12,4, -15,-1, 1,-14, -11,-8, -4,-8, 1,4, 1,11, 0,9, 12,0, -5,5, 8,-9, 8,-6, 1,8, 4,-2, 8,-6, -11,-8, -13,-4, -6,-13, -17,3, -12,-5, -14,0, -13,6, -7,3, 11,-5, 5,14, -7,-6, -2,-9, 1,-5, -7,10, -13,-3, -9,0, 8,-6, 14,-6, -2,-10, -6,2, -1,-3, 3,-6, -4,8, 11,-6, -1,-17, 4,-13, -4,4, 1,-1, 6,1, 3,5, 4,-13, -10,7, -4,-10, -11,0, -4,-15, -4,-8, 7,7, 11,5, -1,14, 3,17, 2,-15, -8,1, -9,5, -5,1, 6,3, 9,9, -9,1, -5,-2, -17,1, -13,-3, -7,4, 2,-6, 10,-2, 14,1, -6,-13, -2,-16, 3,-2, 3,17, 5,-4, 2,2, -5,0, 6,-12, 7,-11, -4,8, 5,5, 10,0, 1,0, -5,11, 7,6, 6,12, 4,-8, -3,2, -3,-18, -11,-2, 2,10, 1,16, 13,3, 4,14, 3,6, -1,13, 12,-8, -1,12, 9,-9, 0,4, -2,8, 7,-3, -2,6, 17,-3, 14,-4, 6,8, -9,-1, -11,3, -16,3, 0,-7, -6,10, 6,-5, 10,-4, 8,1, 0,4, 4,0, 3,6, 9,6, 4,-1, 11,-2, 1,11, 6,8, -6,-11, -3,-7, -15,3, -10,5, 1,-9, -9,8, -11,-2, -7,-5, 7,4, 13,2, 7,-3, 11,-5, -15,4, -11,1, 4,1, 1,9, -2,-1, -9,9, 1,-9, -5,-1, 9,-1, 1,16, 0,-16, -2,-11, 4,-13, -3,-5, 11,-2, 15,-5, -1,-14, -7,-5, 6,-6, 2,-1, 8,1, 7,6, -2,0, 2,-4, 12,2, 16,-2, -4,-14, -7,0, -2,7, -1,14, 1,7, 3,12, 2,-3, -3,8, -14,4, 4,-13, -4,6, -5,11, -2,1, -3,6, -2,12, 11,-3, -1,6, 10,-3, -8,-11, -12,3, -9,4, -1,-4, 1,-8, 5,-11, 2,8, 6,5, -9,1, -12,6, -14,-3, -3,-5, 7,-8, -3,10, 3,3, 9,1, 0,-3, 9,-9, 9,-9, 3,17, 6,-12, 4,-5, 3,3, 6,8, 1,-12, 1,-6, 5,-12, -1,0, 3,8, 16,-2, 4,1, 8,-3, -16,0, -4,-9, 5,5, 3,10, 10,-2, 2,9, -3,-7, -6,-3, -13,4, -1,-11, -14,-3, -5,-14, -1,4, -3,9, 11,2, 8,9, -2,-8, -9,2, 8,2, 12,-1, 9,-9, -3,8, -8,-8, -10,-3, -2,-18, 0,-11, -9,-6, -5,-10, 6,1, 4,13, 6,-12, -8,9, 4,-7, -5,7, -4,-17, -7,-11, -7,-7, -15,3, -8,6, 6,-12, 3,-1, 1,3, 0,-16, -3,-2, -7,3, 3,-10, -10,7, 2,-7, 2,-12, -9,5, 7,1, -2,12, -17,1, -7,1, 2,15, 6,12, 9,0, 11,5, -8,9, -4,6, 1,-9, -1,-3, -6,-3, -9,2, -3,-17, 1,-15, -4,-6, 0,-10, -9,-1, 0,-11, -3,-4, -6,2, -15,-2, -12,3, -2,5, 12,-8, 1,1, 16,-5, 0,15, 9,5, 9,-4, 13,-1, -7,8, 8,-10, -6,-8, -6,-2, 5,-9, -6,10, -11,-7, -1,-13, 13,-4, 12,1, 9,-9, 6,-3, 13,-6, 15,0, -2,-14, 0,-9, -3,-12, 1,-15, 7,-3, 4,9, -5,11, 14,-6, -4,-1, -1,-4, 12,-8, 15,-4, 11,-8, 5,2, -13,2, -5,0, -2,2, 8,-6, -10,-6, -5,-3, 1,3, 8,-4, -2,-14, -13,1, 14,-6, 3,17, 1,-14, -2,-8, 0,3, -2,7, 5,11, 14,0, 0,10, 14,-5, -12,4, -8,1, 3,-9, -8,6, 7,-11, -4,3, 2,-7, -5,1, -5,-6, -8,-2, 2,4, 3,17, 5,-3, -4,11, 10,-4, 17,-4, 3,1, -1,14, 9,6, 7,10, -2,-2, -6,3, 10,-7, -4,12, 4,-2, 1,2, -5,-11, -7,-4, -15,-2, -9,-6, -18,2, -1,-17, 5,4, 17,-4, 1,-1, -2,4, -12,-5, -6,-7, -12,1, -3,-6, -7,-12, -5,-6, 9,-4, 1,13, -2,7, 8,-6, 3,-5, 0,-1, 4,9, 10,5, 11,4, 14,1, 2,2, -1,6, -3,3, -6,8, 6,-3, 0,6, -11,-8, -11,-2, -1,9, 3,16, 1,12, 11,0, 8,1, 14,-5, -10,-3, -13,1, 4,7, 7,10, 11,0, 9,4, 6,4, 11,5, 3,-5, 6,-9,
        8,4, 2,10, 1,4, 14,-3, -14,-2, -7,-5, 14,-3, 18,0, 11,-7, -8,10, 6,-4, -4,5, 6,-8, 2,-4, 1,-18, -1,-14, -6,-12, -1,-15, 4,10, 1,14, -3,-15, 1,-12, -13,-3, -15,1, -1,10, 4,13, 1,-6, -2,-2, -10,-8, -6,-11, -6,-7, -8,-2, 12,5, 9,8, -6,2, -10,7, 6,-13, 3,-8, 17,-1, 14,4, -3,8, 3,4, 6,2, 9,5, 7,-2, -5,12, 0,-11, -3,-6, -10,6, 7,-7, -18,-2, -13,1, -7,-3, -1,-6, -4,-2, -7,2, 2,-15, -12,3, 12,-4, 9,0, 8,0, 5,5, 1,1, 6,0, -2,14, 17,-1, -3,8, -6,11, 2,1, 0,6, 6,-11, -7,3, -2,-9, 3,-12, -5,10, -3,15, 6,-5, 10,-8, -7,-11, -7,-5, -1,-4, -4,1, -11,2, 4,-9, -4,14, 1,12, -7,6, -2,3, 8,2, 15,1, -4,-14, -7,-8, 1,12, 7,10, -2,-6, -13,4, 13,1, 11,6, -15,-4, 4,-14, -9,-10, -2,-9, 0,4, -1,11, -2,8, 12,3, -6,4, 10,-7, 9,-4, -1,8, 4,-1, 9,-4, -9,-10, -12,-6, -3,-14, -17,-1, -11,-8, -13,-3, -14,3, -8,2, 11,-2, 2,14, -5,-7, 0,-9, 2,-5, -9,8, -12,-6, -8,-2, 9,-4, 15,-3, 1,-10, -6,0, -1,-4, 5,-5, -5,8, 12,-4, 2,-17, 6,-12, -5,3, 1,-1, 6,2, 2,5, 7,-12, -12,5, -2,-11, -10,-3, -1,-16, -2,-9, 5,9, 10,7, -4,13, -1,17, 5,-14, -8,-1, -9,3, -5,0, 5,5, 7,10, -9,-1, -4,-3, -17,-2, -12,-6, -7,2, 3,-6, 11,0, 13,4, -3,-14, 2,-16, 3,-1, -1,17, 6,-3, 2,2, -5,-1, 8,-10, 9,-9, -6,7, 4,6, 10,2, 1,0, -7,10, 5,7, 4,13, 6,-7, -3,1, 1,-18, -10,-4, -1,10, -2,15, 12,6, 1,15, 2,6, -3,13, 13,-5, -3,11, 10,-7, -1,3, -4,8, 7,-1, -3,6, 18,0, 15,-1, 4,9, -8,-3, -11,1, -16,0, 2,-7, -8,9, 7,-4, 11,-2, 8,3, -1,3, 3,1, 2,6, 7,8, 4,0, 11,1, -1,11, 4,9, -4,-12, -1,-7, -15,0, -11,3, 3,-9, -11,6, -10,-4, -6,-7, 6,5, 12,5, 7,-1, 12,-3, -16,1, -11,-1, 4,2, -1,9, -1,-1, -10,7, 3,-9, -5,-2, 9,1, -2,15, 4,-15, 1,-11, 6,-12, -2,-5, 11,1, 16,-2, 2,-14, -6,-7, 7,-5, 2,-1, 8,3, 5,7, -2,-1, 2,-3, 12,4, 16,2, -1,-15, -7,-2, -3,7, -4,13, 0,7, 1,13, 3,-3, -5,7, -15,1, 6,-12, -5,5, -8,10, -2,1, -5,5, -5,11, 11,-1, -2,6, 10,-1, -6,-12, -12,0, -10,2, 0,-4, 3,-8, 7,-10, 0,8, 5,6, -9,-1, -13,4, -13,-6, -2,-5, 8,-6, -5,9, 2,4, 8,3, 0,-3, 11,-7, 10,-7, -1,17, 8,-10, 4,-4, 2,4, 4,9, 3,-11, 2,-6, 8,-11, -1,0, 1,9, 16,2, 4,2, 9,-1, -15,-4, -2,-10, 4,6, 1,10, 11,0, 0,9, -2,-8, -5,-5, -14,1, 1,-11, -13,-6, -2,-14, -2,4, -5,8, 10,4, 6,11, 0,-8, -9,0, 8,4, 12,1, 10,-7, -5,7, -6,-10, -9,-5, 2,-18, 2,-11, -7,-8, -3,-11, 6,2, 1,14, 8,-10, -10,7, 5,-6, -7,6, -1,-17, -4,-12, -5,-9, -15,0, -9,4, 8,-10, 4,-1, 1,4, 4,-15, -3,-3, -7,1, 5,-9, -12,5, 4,-6, 4,-12, -9,3, 6,2, -4,12, -17,-2, -7,0, -1,16, 4,13, 8,2, 10,8, -10,7, -5,5, 3,-8, -1,-4, -5,-5, -9,0, 0,-18, 4,-15, -3,-7, 2,-10, -9,-3, 3,-10, -3,-4, -6,0, -14,-5, -13,1, -3,4, 13,-5, 1,1, 16,-1, -3,15, 7,7, 9,-2, 13,1, -9,7, 10,-8, -4,-9, -6,-3, 7,-7, -8,9, -9,-9, 2,-13, 14,-1, 11,3, 11,-7, 6,-2, 14,-3, 15,3, 1,-14, 2,-8, -1,-13, 4,-15, 7,-1, 2,9, -7,10, 15,-3, -4,-2, 0,-4, 13,-5, 16,-1, 12,-6, 4,3, -13,-1, -5,-1, -2,2, 9,-4, -9,-8, -5,-4, 1,4, 9,-2, 1,-14, -13,-1, 15,-3, -1,17, 4,-14, 0,-8, 0,3, -3,7, 2,11, 13,3, -2,10, 14,-2, -12,1, -8,-1, 5,-8, -9,4, 9,-9, -4,3, 3,-7, -5,0, -4,-7, -8,-4, 1,4, -1,17, 5,-2, -6,10, 11,-2, 17,-1, 3,2, -4,13, 8,8, 5,12, -2,-2, -6,2, 11,-4, -6,11, 4,-1, 1,2, -2,-11, -6,-5, -14,-5, -8,-8, -18,-2, 2,-17, 4,4, 17,-1, 1,-1, -2,3, -11,-8, -5,-8, -12,-1, -2,-6, -4,-14, -4,-7, 10,-2, -2,13, -4,6, 9,-4, 4,-5, 0,-1, 2,10, 9,7, 10,6, 14,4, 2,2, -2,6, -4,2, -7,7, 6,-2, -1,6, -9,-10, -10,-4, -3,9, 0,16, -1,12, 10,3, 8,3, 14,-2, -10,-5, -13,-1, 2,7, 5,12, 11,2, 8,6, 5,5, 10,8, 4,-5, 8,-7,
        7,5, 0,10, 0,4, 14,0, -13,-5, -6,-6, 14,0, 17,4, 12,-5, -9,8, 7,-3, -5,4, 8,-7, 2,-4, 5,-18, 1,-14, -4,-13, 2,-15, 2,11, -2,14, 0,-15, 4,-11, -12,-6, -15,-2, -3,10, 1,13, 2,-6, -2,-3, -8,-10, -3,-12, -4,-8, -8,-4, 11,7, 7,10, -7,0, -11,4, 8,-12, 5,-7, 17,3, 13,6, -4,7, 2,5, 5,3, 8,7, 8,-1, -7,11, 2,-10, -1,-6, -11,4, 8,-6, -17,-5, -13,-2, -6,-5, 0,-6, -4,-2, -8,1, 5,-15, -13,0, 13,-2, 9,2, 8,1, 4,6, 0,1, 6,1, -5,13, 17,3, -4,7, -8,9, 2,1, -1,5, 8,-9, -7,2, 0,-9, 5,-11, -8,9, -6,14, 7,-4, 12,-6, -5,-12, -6,-6, 0,-4, -4,0, -11,-1, 6,-8, -6,13, -1,12, -8,4, -2,2, 8,4, 14,5, -1,-14, -6,-10, -1,12, 5,11, 0,-7, -13,1, 13,4, 9,8, -13,-7, 6,-13, -6,-11, -1,-9, -1,4, -3,10, -4,8, 11,5, -7,3, 11,-5, 10,-2, -3,7, 4,0, 10,-2, -6,-11, -11,-9, 0,-15, -16,-4, -9,-10, -12,-6, -14,0, -8,0, 12,0, -1,14, -4,-8, 2,-9, 3,-4, -10,6, -10,-8, -8,-4, 10,-2, 15,0, 3,-10, -6,-1, 0,-4, 6,-4, -7,6, 12,-1, 6,-16, 9,-11, -6,2, 1,0, 5,3, 1,5, 9,-10, -12,3, 1,-11, -10,-5, 3,-15, -1,-9, 3,10, 9,9, -7,12, -4,16, 8,-13, -7,-3, -10,1, -5,-1, 4,6, 4,11, -9,-3, -3,-4, -16,-6, -10,-8, -8,1, 4,-5, 10,2, 12,7, 0,-15, 5,-16, 3,-1, -4,16, 6,-1, 2,3, -5,-2, 10,-8, 11,-7, -7,5, 3,7, 9,4, 1,0, -9,9, 4,8, 1,13, 7,-5, -3,1, 5,-18, -9,-6, -3,10, -5,15, 10,8, -2,15, 0,7, -6,12, 14,-2, -6,10, 11,-4, -2,3, -5,7, 7,0, -4,5, 17,4, 15,2, 2,10, -7,-5, -11,-2, -16,-4, 3,-6, -10,7, 8,-2, 11,1, 7,4, -2,3, 3,2, 0,7, 6,10, 4,1, 11,3, -3,10, 2,9, -1,-12, 0,-7, -15,-3, -11,1, 4,-8, -12,3, -9,-6, -4,-8, 5,6, 11,7, 7,0, 13,0, -15,-3, -10,-3, 4,2, -3,9, -1,-2, -11,4, 4,-8, -4,-3, 9,3, -5,15, 7,-14, 3,-11, 9,-11, -1,-5, 11,3, 16,1, 5,-13, -4,-8, 7,-3, 2,0, 7,4, 4,8, -2,-1, 3,-3, 11,7, 16,5, 2,-15, -6,-3, -5,6, -7,12, -2,7, -2,13, 3,-2, -6,6, -15,-2, 9,-11, -6,4, -9,8, -2,0, -6,4, -7,10, 11,2, -3,5, 10,1, -3,-13, -12,-2, -10,0, 1,-4, 4,-7, 9,-9, -1,8, 4,7, -9,-3, -13,1, -12,-8, -1,-5, 9,-4, -7,8, 1,4, 7,5, 1,-3, 12,-5, 11,-4, -4,16, 10,-8, 5,-3, 1,4, 2,9, 6,-10, 3,-5, 10,-9, -1,0, -1,9, 16,5, 4,2, 9,1, -14,-7, 0,-10, 3,7, -1,10, 10,2, -2,9, 0,-8, -4,-6, -14,-1, 3,-10, -12,-8, 1,-14, -2,4, -6,7, 9,6, 3,12, 1,-8, -9,-2, 7,5, 11,4, 11,-4, -6,6, -4,-11, -8,-7, 5,-17, 4,-11, -6,-10, -1,-11, 5,3, -1,14, 10,-8, -11,5, 6,-5, -8,4, 3,-17, -2,-13, -3,-10, -15,-3, -9,2, 10,-8, 4,0, 0,4, 7,-14, -2,-3, -7,0, 7,-8, -12,3, 5,-5, 7,-11, -10,1, 6,4, -7,11, -16,-6, -7,-2, -4,15, 1,13, 8,4, 8,9, -11,5, -6,4, 5,-7, 0,-4, -4,-6, -9,-2, 4,-17, 7,-13, -2,-7, 4,-9, -8,-4, 5,-10, -2,-5, -6,-1, -13,-8, -13,-2, -4,3, 14,-2, 0,1, 16,2, -6,14, 6,8, 9,0, 13,4, -10,5, 12,-6, -2,-9, -5,-4, 8,-6, -10,7, -7,-11, 5,-12, 14,1, 10,6, 12,-5, 7,0, 15,0, 14,6, 4,-14, 4,-8, 2,-13, 7,-13, 7,0, 0,9, -9,9, 15,0, -4,-2, 1,-4, 14,-2, 15,3, 13,-3, 3,4, -12,-3, -5,-2, -3,2, 9,-2, -7,-10, -4,-5, 0,4, 9,-1, 4,-14, -13,-4, 15,0, -4,16, 6,-13, 1,-8, -1,3, -5,6, 0,12, 12,6, -4,9, 14,1, -12,-1, -7,-3, 6,-7, -9,2, 11,-7, -5,2, 5,-6, -5,-1, -2,-8, -7,-5, 0,4, -4,16, 5,-1, -8,8, 11,1, 17,3, 2,2, -7,12, 6,9, 3,12, -2,-3, -7,0, 12,-2, -8,9, 4,0, 0,2, 0,-12, -5,-6, -13,-8, -6,-9, -17,-5, 6,-16, 3,5, 17,3, 1,0, -3,3, -9,-10, -3,-9, -11,-4, 0,-7, -1,-14, -2,-8, 10,0, -5,12, -5,5, 9,-2, 5,-4, 0,-1, 0,10, 7,9, 8,8, 13,6, 2,3, -3,5, -4,1, -9,5, 7,0, -2,6, -6,-11, -9,-6, -4,8, -4,16, -4,11, 10,5, 7,4, 14,1, -8,-7, -13,-4, 1,8, 3,12, 11,4, 7,8, 4,6, 8,9, 5,-4, 10,-6,
        5,7, -2,10, -1,4, 14,3, -12,-8, -4,-7, 14,3, 16,7, 13,-2, -11,6, 7,-1, -5,3, 9,-5, 3,-3, 8,-16, 4,-13, -1,-13, 5,-14, -1,11, -5,13, 4,-15, 6,-10, -10,-8, -14,-5, -4,9, -2,13, 4,-5, -1,-3, -6,-12, -1,-12, -3,-9, -7,-5, 9,10, 5,11, -7,-1, -12,2, 11,-10, 6,-6, 16,6, 11,9, -5,6, 1,5, 4,4, 6,9, 8,1, -10,9, 4,-10, 0,-6, -11,1, 9,-4, -15,-9, -12,-5, -5,-6, 1,-6, -3,-3, -8,-1, 8,-13, -12,-2, 13,1, 9,4, 7,3, 3,6, 0,1, 6,2, -8,12, 16,6, -5,6, -10,8, 2,2, -3,5, 10,-8, -7,0, 2,-9, 7,-10, -9,7, -9,12, 8,-2, 13,-3, -2,-13, -4,-7, 1,-3, -3,-1, -10,-3, 7,-7, -9,11, -4,12, -9,3, -3,2, 7,5, 13,7, 2,-14, -3,-10, -4,12, 3,12, 1,-7, -13,-2, 12,7, 8,10, -12,-10, 9,-11, -4,-12, 1,-9, -2,4, -5,9, -5,7, 10,7, -7,1, 12,-3, 10,0, -4,7, 4,1, 10,0, -4,-12, -9,-11, 3,-15, -15,-8, -7,-11, -11,-8, -14,-3, -8,-2, 11,3, -4,14, -2,-9, 4,-9, 4,-3, -11,4, -8,-10, -7,-5, 10,0, 15,4, 4,-9, -6,-2, 1,-3, 6,-3, -8,5, 12,1, 9,-14, 11,-9, -6,1, 1,0, 4,4, 0,5, 11,-8, -13,0, 3,-10, -8,-7, 6,-15, 1,-9, 1,10, 7,10, -9,10, -8,15, 10,-11, -7,-4, -10,-1, -5,-2, 3,6, 2,12, -8,-5, -2,-4, -14,-9, -8,-10, -8,-1, 5,-4, 10,4, 10,9, 3,-15, 8,-14, 3,0, -8,15, 6,0, 1,3, -4,-3, 12,-6, 12,-5, -8,4, 1,7, 8,6, 1,1, -10,7, 2,9, -2,13, 8,-4, -3,0, 8,-16, -8,-8, -4,9, -8,13, 8,10, -5,14, -1,7, -8,10, 14,1, -8,9, 12,-2, -2,3, -7,5, 7,2, -5,4, 16,7, 14,5, 0,10, -6,-6, -11,-4, -15,-7, 4,-6, -11,5, 8,-1, 10,3, 6,5, -2,3, 3,2, -1,7, 3,10, 4,2, 10,5, -5,9, 0,9, 1,-12, 2,-7, -14,-6, -11,-2, 6,-7, -12,1, -8,-8, -3,-9, 3,7, 9,10, 7,2, 12,2, -15,-6, -9,-5, 3,3, -5,8, -1,-2, -12,2, 6,-7, -3,-4, 8,5, -8,13, 10,-13, 5,-10, 11,-9, 0,-5, 10,5, 15,5, 8,-12, -3,-9, 8,-2, 2,0, 6,5, 2,9, -2,-2, 3,-2, 9,9, 14,8, 5,-14, -6,-4, -6,5, -9,10, -3,6, -5,12, 4,-1, -7,4, -14,-5, 11,-9, -7,2, -11,6, -2,0, -6,3, -9,8, 11,4, -4,4, 9,3, 0,-14, -11,-5, -10,-2, 2,-4, 5,-6, 10,-7, -3,7, 2,8, -8,-5, -13,-2, -10,-11, 0,-5, 10,-2, -9,6, 0,4, 6,6, 1,-3, 13,-2, 12,-2, -8,15, 12,-6, 6,-2, 0,4, 0,9, 8,-9, 4,-4, 11,-7, -1,-1, -3,8, 14,8, 3,3, 8,3, -13,-10, 2,-10, 1,7, -3,9, 10,4, -4,9, 2,-8, -3,-6, -13,-4, 5,-9, -10,-11, 4,-14, -3,3, -8,6, 8,8, 1,12, 3,-7, -9,-4, 5,7, 10,6, 12,-2, -7,4, -1,-11, -6,-9, 9,-15, 6,-9, -3,-10, 2,-11, 4,4, -4,13, 12,-6, -12,3, 7,-3, -9,3, 6,-16, 1,-13, -1,-10, -14,-6, -9,0, 12,-6, 3,1, -1,3, 10,-13, -1,-4, -7,-2, 9,-6, -13,0, 6,-4, 9,-9, -10,-1, 5,5, -9,9, -14,-9, -6,-3, -7,14, -2,13, 7,5, 6,11, -12,3, -7,2, 6,-6, 1,-3, -3,-6, -9,-4, 7,-16, 10,-12, 0,-7, 6,-8, -7,-6, 7,-8, -1,-5, -6,-2, -11,-10, -12,-5, -4,2, 14,1, 0,1, 15,5, -9,12, 4,9, 9,2, 12,7, -11,2, 13,-3, 0,-9, -4,-5, 9,-4, -11,5, -5,-12, 7,-11, 13,4, 9,8, 13,-2, 7,1, 15,3, 12,9, 6,-13, 5,-7, 5,-12, 10,-12, 7,2, -2,9, -10,7, 15,4, -3,-3, 2,-4, 14,1, 15,6, 14,0, 2,4, -11,-6, -4,-3, -3,1, 9,0, -5,-11, -3,-5, -1,3, 9,1, 6,-13, -12,-7, 15,4, -8,15, 9,-11, 3,-7, -1,3, -6,5, -3,11, 11,8, -6,8, 14,4, -12,-4, -7,-4, 8,-6, -9,0, 12,-5, -5,1, 6,-5, -5,-2, -1,-8, -5,-7, -1,4, -8,15, 5,0, -10,6, 10,3, 16,6, 2,3, -9,10, 4,10, 0,13, -1,-3, -7,-1, 12,0, -10,8, 4,1, 0,2, 3,-11, -3,-7, -11,-10, -4,-10, -15,-9, 9,-14, 2,6, 16,6, 1,0, -3,2, -7,-11, -1,-9, -10,-6, 1,-7, 2,-14, -1,-8, 10,2, -7,11, -6,4, 9,0, 5,-3, 1,-1, -2,10, 5,10, 6,10, 11,9, 1,3, -4,4, -4,0, -10,3, 7,1, -4,5, -4,-12, -8,-8, -6,7, -7,15, -6,10, 8,7, 6,5, 14,4, -7,-8, -12,-7, -1,8, 0,13, 9,6, 5,9, 2,7, 6,11, 5,-3, 10,-3,
        4,8, -4,9, -2,4, 13,6, -10,-10, -3,-8, 13,6, 14,11, 13,1, -12,3, 7,0, -6,2, 10,-3, 4,-2, 12,-14, 7,-12, 2,-13, 8,-13, -3,10, -8,12, 7,-14, 8,-9, -8,-10, -13,-8, -6,8, -5,13, 5,-5, 0,-3, -3,-13, 2,-12, -1,-9, -6,-6, 7,11, 2,12, -6,-2, -12,-1, 12,-7, 8,-5, 14,10, 9,11, -7,5, 0,5, 4,5, 4,10, 7,2, -11,7, 6,-9, 1,-6, -11,-1, 10,-2, -13,-12, -11,-7, -4,-7, 2,-5, -2,-4, -7,-2, 11,-11, -12,-5, 12,4, 8,5, 6,4, 2,7, 0,1, 5,3, -10,10, 14,10, -7,5, -12,5, 1,2, -4,4, 12,-5, -7,-1, 4,-8, 9,-8, -11,5, -11,10, 8,-1, 13,0, 1,-13, -3,-8, 2,-3, -3,-2, -10,-5, 9,-5, -11,9, -6,11, -9,1, -3,1, 6,6, 11,10, 5,-14, -1,-11, -6,11, 0,12, 2,-6, -13,-5, 10,9, 5,12, -9,-12, 11,-9, -1,-13, 3,-8, -3,3, -7,8, -6,6, 8,9, -7,0, 12,0, 10,2, -5,6, 4,2, 10,2, -1,-13, -6,-12, 6,-14, -13,-11, -4,-13, -9,-10, -13,-6, -7,-3, 11,5, -7,13, 0,-9, 5,-8, 5,-3, -12,1, -6,-11, -6,-6, 10,2, 14,7, 6,-8, -5,-3, 2,-3, 7,-2, -9,3, 11,4, 12,-12, 12,-6, -6,0, 1,0, 4,5, -1,5, 13,-5, -12,-3, 5,-10, -7,-8, 9,-13, 3,-8, -1,10, 4,12, -11,8, -11,13, 12,-8, -6,-5, -9,-3, -4,-3, 2,7, -1,12, -7,-6, -2,-5, -12,-12, -6,-11, -7,-2, 6,-3, 9,6, 8,11, 6,-14, 11,-12, 3,1, -11,13, 6,1, 0,3, -3,-4, 13,-3, 13,-2, -9,2, 0,7, 7,7, 1,1, -12,4, 0,9, -5,13, 9,-2, -3,-1, 12,-14, -6,-9, -6,8, -11,11, 6,11, -8,13, -2,6, -10,8, 13,4, -9,7, 12,1, -3,2, -8,4, 6,3, -6,3, 14,11, 13,8, -2,10, -5,-8, -10,-6, -13,-10, 6,-5, -12,2, 8,1, 10,5, 5,7, -3,2, 2,3, -2,6, 1,11, 3,3, 9,7, -7,8, -2,9, 4,-11, 3,-6, -12,-9, -10,-4, 7,-6, -12,-2, -6,-9, -1,-9, 2,8, 7,11, 6,3, 12,5, -13,-9, -8,-7, 2,4, -6,7, 0,-2, -12,-1, 7,-6, -3,-5, 7,6, -11,11, 12,-10, 7,-9, 12,-6, 1,-5, 9,7, 14,8, 10,-10, -1,-9, 8,0, 2,1, 5,7, 0,9, -1,-2, 4,-1, 7,10, 12,11, 8,-13, -5,-6, -7,4, -11,8, -4,5, -7,11, 4,0, -8,3, -13,-8, 12,-6, -7,1, -12,3, -2,-1, -7,2, -10,6, 10,6, -5,4, 9,5, 3,-13, -10,-7, -9,-4, 3,-3, 7,-5, 12,-4, -4,6, 1,8, -7,-6, -13,-5, -7,-12, 1,-5, 10,0, -10,4, -1,4, 5,8, 2,-2, 13,1, 12,1, -11,13, 13,-3, 6,-1, -1,4, -2,9, 9,-7, 5,-4, 13,-4, -1,-1, -4,7, 12,11, 2,4, 7,4, -10,-12, 4,-9, 0,7, -5,9, 9,6, -5,8, 3,-7, -2,-7, -12,-7, 7,-8, -7,-12, 7,-13, -4,2, -9,4, 6,9, -2,12, 4,-6, -8,-5, 4,8, 9,8, 12,1, -8,3, 1,-11, -4,-10, 12,-13, 8,-8, -1,-11, 4,-10, 4,5, -7,12, 13,-3, -12,0, 8,-2, -9,1, 10,-14, 4,-12, 1,-10, -12,-9, -9,-2, 13,-3, 3,2, -2,3, 12,-10, 0,-4, -6,-3, 10,-4, -12,-3, 7,-3, 10,-7, -9,-3, 4,6, -10,7, -12,-12, -5,-4, -10,12, -5,13, 6,6, 3,12, -12,0, -7,1, 8,-5, 2,-3, -2,-7, -8,-5, 11,-14, 12,-9, 1,-7, 7,-7, -6,-7, 8,-7, 0,-5, -5,-3, -8,-12, -11,-7, -5,2, 13,4, 0,1, 14,9, -11,10, 2,10, 8,4, 10,9, -11,0, 13,0, 2,-9, -3,-6, 10,-2, -12,2, -2,-13, 9,-9, 12,7, 7,9, 13,1, 6,2, 14,6, 10,11, 9,-11, 6,-6, 7,-11, 12,-9, 6,3, -4,8, -12,4, 14,7, -2,-4, 3,-3, 13,4, 13,9, 13,3, 2,5, -10,-8, -3,-4, -3,0, 9,2, -2,-12, -2,-6, -2,3, 8,3, 9,-11, -10,-9, 14,7, -11,13, 11,-9, 4,-6, -2,2, -7,4, -5,11, 9,10, -7,7, 13,7, -11,-6, -6,-5, 9,-4, -9,-2, 13,-2, -5,0, 7,-4, -4,-3, 1,-8, -4,-8, -2,4, -11,13, 5,1, -11,4, 10,5, 14,10, 1,3, -11,8, 2,11, -3,12, 0,-3, -6,-2, 11,3, -12,5, 4,2, -1,2, 5,-11, -2,-8, -8,-12, -2,-11, -13,-12, 12,-12, 1,6, 14,10, 1,0, -4,1, -4,-13, 1,-9, -9,-8, 2,-6, 5,-14, 1,-8, 9,4, -9,9, -7,3, 9,2, 6,-2, 1,-1, -4,9, 3,11, 4,11, 9,11, 0,3, -5,4, -4,-1, -10,1, 6,2, -5,5, -1,-13, -6,-9, -7,6, -10,13, -8,9, 7,8, 5,7, 13,7, -5,-10, -10,-9, -2,7, -3,12, 8,8, 3,10, 1,7, 3,12, 6,-2, 11,-1,
        2,8, -6,8, -2,4, 11,8, -8,-12, -1,-8, 11,8, 12,13, 13,3, -12,1, 7,2, -6,0, 10,-1, 4,-2, 14,-12, 9,-10, 4,-13, 10,-11, -5,10, -10,10, 9,-12, 10,-7, -6,-12, -11,-10, -8,6, -7,11, 5,-3, 0,-3, -1,-13, 4,-12, 1,-9, -4,-7, 5,13, 0,12, -6,-4, -12,-3, 14,-5, 8,-3, 12,12, 7,13, -7,3, -2,5, 2,5, 2,10, 7,4, -13,5, 8,-7, 3,-6, -11,-3, 10,0, -11,-14, -9,-9, -2,-7, 4,-5, -2,-4, -7,-4, 13,-9, -10,-7, 11,6, 6,7, 5,6, 0,7, 0,1, 5,5, -12,8, 12,12, -7,3, -12,3, 1,2, -4,4, 12,-3, -7,-3, 6,-7, 11,-6, -11,3, -13,8, 8,1, 13,2, 3,-13, -1,-8, 2,-3, -3,-2, -8,-7, 9,-3, -13,7, -8,9, -9,-1, -3,1, 4,7, 9,12, 7,-12, 1,-11, -8,9, -2,12, 4,-6, -11,-7, 8,11, 3,12, -7,-14, 13,-7, 1,-13, 5,-8, -3,3, -9,6, -7,4, 6,11, -7,-2, 12,2, 10,4, -6,4, 4,2, 10,4, 1,-13, -4,-13, 8,-12, -11,-13, -2,-13, -7,-12, -11,-8, -7,-5, 9,7, -9,11, 2,-9, 7,-6, 5,-1, -12,-1, -4,-12, -4,-7, 10,4, 12,9, 8,-6, -5,-5, 2,-3, 7,0, -9,1, 10,6, 14,-10, 13,-4, -6,-2, 1,0, 2,5, -3,5, 13,-3, -12,-5, 7,-8, -5,-10, 11,-11, 5,-8, -3,10, 2,12, -13,6, -13,11, 14,-6, -4,-6, -9,-5, -4,-3, 0,7, -3,12, -5,-8, 0,-5, -10,-14, -4,-12, -7,-4, 6,-1, 7,8, 6,13, 8,-12, 13,-10, 3,1, -13,11, 6,3, 0,3, -3,-4, 13,-1, 13,0, -9,0, -2,7, 5,9, 1,1, -12,2, -2,9, -7,11, 9,0, -3,-1, 14,-12, -4,-10, -8,6, -13,9, 4,12, -10,11, -4,6, -12,6, 12,6, -11,5, 12,3, -3,2, -8,2, 6,5, -6,1, 12,13, 11,10, -4,10, -3,-8, -8,-8, -11,-12, 6,-3, -12,0, 8,3, 8,7, 3,7, -3,2, 2,3, -4,6, -1,11, 3,3, 7,9, -9,6, -4,9, 6,-10, 5,-6, -10,-11, -9,-6, 8,-4, -12,-4, -4,-10, 1,-9, 0,8, 5,13, 6,5, 10,7, -11,-11, -6,-9, 2,4, -8,5, 0,-2, -12,-3, 8,-4, -1,-5, 5,8, -13,9, 14,-8, 9,-7, 13,-4, 3,-5, 7,9, 12,10, 12,-8, 1,-9, 8,2, 2,1, 3,7, -2,9, -1,-2, 4,-1, 5,12, 10,13, 10,-11, -3,-6, -7,2, -13,6, -5,4, -9,9, 4,0, -8,1, -11,-10, 13,-4, -7,-1, -12,1, -2,-1, -7,0, -11,4, 8,8, -5,2, 7,7, 5,-13, -8,-9, -8,-6, 3,-3, 7,-3, 12,-2, -6,5, -1,8, -5,-8, -11,-7, -5,-14, 3,-5, 10,2, -10,2, -1,4, 3,8, 2,-2, 13,3, 12,3, -13,11, 13,-1, 6,1, -1,4, -4,9, 11,-5, 5,-2, 13,-2, -1,-1, -6,6, 10,13, 2,4, 6,6, -8,-14, 6,-8, -2,7, -7,7, 7,8, -7,6, 5,-7, 0,-7, -10,-9, 9,-6, -5,-14, 9,-11, -4,2, -9,2, 4,10, -4,12, 6,-5, -6,-7, 2,8, 7,10, 12,3, -8,1, 3,-11, -2,-10, 14,-11, 10,-6, 1,-11, 6,-9, 2,5, -9,10, 13,-1, -12,-2, 8,0, -9,-1, 12,-12, 6,-11, 3,-10, -10,-11, -9,-4, 13,-1, 3,2, -2,3, 14,-8, 0,-4, -6,-5, 10,-2, -12,-5, 7,-1, 12,-5, -9,-5, 2,6, -12,5, -10,-14, -4,-5, -12,10, -7,11, 4,7, 1,12, -12,-2, -7,-1, 8,-3, 2,-3, 0,-7, -6,-7, 13,-12, 14,-7, 3,-7, 9,-5, -4,-8, 10,-5, 2,-5, -5,-5, -6,-14, -9,-9, -5,0, 12,6, 0,1, 12,11, -13,8, 0,10, 7,6, 8,11, -11,-2, 13,2, 4,-9, -1,-6, 10,0, -12,0, 0,-13, 11,-7, 10,9, 5,11, 13,3, 6,4, 12,8, 8,13, 11,-9, 7,-4, 9,-9, 14,-7, 6,5, -6,7, -12,2, 12,9, -2,-4, 3,-3, 12,6, 11,11, 13,5, 0,5, -8,-10, -3,-4, -3,0, 9,4, 0,-12, 0,-6, -2,3, 8,5, 11,-9, -8,-11, 12,9, -13,11, 13,-7, 6,-5, -2,2, -7,2, -7,9, 7,12, -9,5, 11,9, -9,-8, -4,-6, 9,-2, -9,-4, 13,0, -5,-2, 7,-2, -4,-3, 3,-8, -2,-8, -2,4, -13,11, 5,3, -11,2, 8,7, 12,12, 1,3, -13,6, 0,11, -5,12, 0,-3, -6,-4, 11,5, -12,3, 4,2, -1,2, 7,-9, 0,-8, -6,-14, 0,-11, -11,-14, 14,-10, -1,6, 12,12, 1,0, -4,1, -2,-13, 3,-9, -7,-10, 4,-6, 7,-12, 3,-8, 8,6, -11,7, -7,1, 9,4, 6,0, 1,-1, -6,8, 1,11, 2,11, 7,13, 0,3, -5,2, -4,-1, -10,-1, 6,4, -5,3, 1,-13, -4,-10, -8,4, -12,11, -10,7, 5,10, 3,7, 11,9, -3,-10, -8,-11, -4,7, -5,12, 6,10, 1,10, -1,7, 1,12, 6,0, 11,1,
        0,9, -8,7, -3,3, 9,10, -5,-13, 1,-8, 9,10, 9,15, 12,6, -12,-2, 6,3, -6,-1, 10,1, 4,-1, 16,-8, 11,-8, 7,-11, 12,-9, -7,8, -12,8, 12,-10, 11,-5, -3,-13, -9,-12, -9,4, -9,10, 6,-2, 1,-3, 2,-13, 7,-10, 3,-9, -3,-8, 2,13, -3,12, -5,-5, -11,-6, 14,-2, 9,-1, 9,14, 4,14, -8,2, -2,4, 1,6, 0,10, 6,5, -13,2, 9,-5, 4,-5, -10,-5, 10,2, -7,-16, -7,-11, -1,-8, 4,-4, -1,-4, -6,-5, 15,-6, -9,-9, 10,8, 5,8, 4,7, -1,7, 0,1, 4,5, -13,5, 9,14, -8,2, -13,0, 0,2, -5,3, 13,0, -6,-4, 7,-6, 12,-4, -12,0, -14,5, 8,2, 12,5, 6,-12, 1,-8, 3,-2, -2,-3, -7,-8, 10,-1, -14,4, -10,7, -9,-3, -3,0, 3,8, 6,14, 10,-11, 3,-10, -10,7, -5,11, 5,-5, -10,-9, 5,12, 0,13, -4,-15, 14,-4, 4,-12, 6,-6, -4,2, -10,4, -8,3, 4,12, -6,-3, 11,5, 9,6, -7,3, 3,3, 9,6, 4,-12, -1,-14, 11,-10, -8,-15, 1,-13, -4,-13, -9,-10, -5,-6, 8,9, -11,9, 4,-8, 8,-5, 5,0, -11,-4, -1,-13, -3,-8, 9,6, 10,12, 9,-4, -4,-5, 3,-2, 7,1, -9,-1, 9,8, 16,-6, 14,-1, -5,-3, 1,0, 1,6, -3,4, 14,0, -10,-8, 8,-7, -3,-10, 13,-8, 6,-6, -5,9, -1,12, -14,3, -15,8, 15,-3, -3,-7, -7,-7, -3,-4, -1,7, -6,11, -4,-9, 1,-5, -6,-16, -1,-13, -6,-5, 6,0, 5,9, 3,14, 11,-10, 15,-7, 3,2, -15,8, 5,4, -1,3, -2,-5, 13,2, 13,3, -9,-2, -3,6, 3,9, 1,1, -12,-1, -4,8, -9,10, 9,2, -3,-2, 16,-8, -2,-11, -9,4, -15,6, 1,13, -12,9, -5,5, -13,3, 11,9, -11,3, 11,6, -3,1, -9,0, 4,6, -6,0, 9,15, 9,12, -6,9, -1,-9, -6,-9, -8,-14, 7,-2, -12,-3, 7,4, 7,8, 2,8, -3,1, 1,3, -5,5, -3,10, 2,4, 5,10, -10,4, -6,8, 8,-9, 6,-4, -7,-13, -8,-8, 9,-2, -10,-7, -2,-11, 3,-9, -2,8, 2,13, 4,6, 9,9, -8,-13, -4,-10, 1,4, -9,4, 1,-2, -11,-6, 9,-2, 0,-5, 4,9, -15,6, 15,-5, 10,-5, 14,-1, 3,-4, 5,10, 10,13, 13,-5, 3,-9, 7,3, 2,2, 2,8, -4,8, 0,-2, 4,0, 2,12, 7,15, 12,-9, -2,-7, -8,1, -14,3, -6,3, -11,7, 4,1, -8,-1, -9,-12, 14,-1, -7,-2, -12,-2, -2,-2, -7,-1, -12,1, 6,9, -6,1, 6,8, 8,-11, -6,-10, -7,-8, 4,-2, 8,-2, 12,1, -7,4, -2,8, -4,-9, -10,-9, -2,-14, 3,-4, 9,4, -10,0, -2,3, 1,9, 3,-1, 12,6, 11,6, -15,8, 13,2, 6,2, -2,3, -6,8, 11,-3, 6,-1, 13,1, -1,-1, -7,5, 7,15, 1,4, 5,7, -5,-15, 8,-7, -3,6, -8,6, 5,9, -8,5, 6,-5, 1,-7, -8,-11, 10,-4, -2,-14, 11,-9, -4,1, -9,0, 2,11, -7,10, 7,-4, -5,-8, 0,9, 5,11, 11,6, -8,-1, 5,-10, 0,-10, 16,-7, 11,-4, 3,-10, 8,-8, 1,6, -11,8, 13,2, -11,-5, 8,2, -9,-3, 14,-9, 8,-10, 5,-9, -7,-13, -8,-6, 13,2, 2,3, -3,2, 15,-5, 1,-4, -4,-6, 10,0, -10,-8, 7,0, 12,-2, -7,-7, 1,7, -12,2, -6,-16, -3,-6, -14,7, -9,10, 3,8, -2,12, -11,-5, -7,-2, 9,-1, 3,-2, 1,-7, -5,-8, 15,-9, 15,-4, 4,-6, 9,-3, -2,-9, 10,-3, 2,-4, -4,-5, -3,-15, -7,-11, -5,-1, 11,9, 0,1, 9,14, -14,5, -2,10, 6,7, 5,12, -10,-4, 12,5, 6,-8, 0,-6, 10,2, -12,-3, 3,-13, 12,-5, 8,11, 3,11, 12,6, 5,5, 10,11, 5,14, 13,-6, 8,-3, 11,-7, 15,-4, 4,6, -7,6, -12,-1, 10,12, -1,-4, 4,-2, 11,9, 8,13, 11,8, -1,5, -6,-11, -2,-5, -3,-1, 8,6, 3,-12, 1,-6, -3,2, 6,6, 13,-6, -5,-12, 10,12, -15,8, 14,-4, 7,-4, -3,1, -8,1, -9,8, 4,13, -9,3, 9,11, -7,-10, -3,-7, 9,0, -8,-6, 13,3, -4,-2, 8,-1, -3,-4, 4,-7, 0,-9, -3,3, -15,8, 4,3, -11,-1, 7,8, 9,14, 0,3, -14,3, -2,11, -8,10, 1,-3, -5,-5, 9,7, -13,0, 3,3, -2,2, 9,-8, 2,-8, -3,-15, 2,-11, -7,-16, 16,-6, -2,6, 9,14, 1,0, -4,0, 1,-13, 5,-8, -5,-11, 5,-5, 10,-11, 4,-7, 7,8, -12,5, -7,0, 8,6, 6,1, 1,-1, -8,7, -1,11, -1,11, 4,14, -1,3, -6,1, -3,-2, -10,-3, 5,5, -6,2, 4,-12, -2,-11, -9,2, -14,8, -11,5, 3,10, 2,8, 9,11, -1,-11, -5,-12, -5,6, -8,10, 4,11, -1,10, -2,7, -2,12, 6,1, 10,3,
        -1,8, -9,5, -4,2, 7,12, -2,-14, 2,-8, 7,12, 5,17, 10,8, -11,-4, 6,4, -6,-2, 10,3, 4,0, 18,-5, 12,-6, 9,-10, 14,-6, -8,7, -13,5, 13,-7, 12,-2, -1,-13, -6,-14, -10,3, -11,7, 6,-1, 2,-3, 5,-12, 9,-9, 4,-8, -1,-9, -1,13, -5,11, -4,-6, -9,-8, 14,1, 9,1, 6,16, 1,14, -8,0, -3,4, 0,6, -2,10, 5,6, -13,-1, 10,-3, 5,-4, -9,-7, 9,4, -4,-17, -5,-12, 1,-8, 5,-3, 0,-4, -5,-6, 15,-3, -7,-11, 8,10, 3,9, 3,7, -3,7, 0,1, 2,6, -14,2, 6,16, -8,0, -12,-3, 0,2, -5,1, 12,3, -5,-5, 8,-4, 12,-1, -12,-2, -15,2, 7,4, 11,7, 8,-10, 2,-8, 3,-2, -2,-3, -5,-10, 10,1, -14,1, -11,5, -8,-4, -3,-1, 1,9, 3,15, 12,-8, 6,-10, -11,5, -7,10, 6,-4, -7,-11, 3,13, -3,12, 0,-15, 14,-1, 6,-11, 7,-5, -4,1, -10,2, -9,1, 1,12, -6,-4, 10,7, 7,8, -8,1, 2,4, 7,8, 6,-11, 2,-14, 13,-8, -4,-16, 4,-13, -1,-14, -7,-12, -4,-7, 6,10, -13,6, 5,-7, 9,-3, 5,1, -10,-6, 2,-13, -1,-9, 7,8, 7,13, 10,-3, -2,-6, 3,-2, 7,3, -9,-3, 7,10, 17,-3, 14,2, -5,-4, 1,0, 0,6, -4,3, 13,3, -8,-9, 10,-5, -1,-11, 15,-5, 7,-5, -7,8, -3,12, -14,0, -16,4, 15,0, -1,-8, -6,-8, -2,-5, -3,7, -8,9, -2,-9, 2,-5, -3,-17, 2,-13, -5,-6, 6,1, 3,10, 0,14, 13,-8, 16,-4, 2,2, -16,4, 4,5, -2,3, -1,-5, 12,5, 12,6, -8,-4, -4,6, 1,10, 0,1, -12,-3, -5,7, -11,7, 8,4, -2,-2, 18,-5, 1,-11, -10,3, -15,3, -2,13, -14,6, -6,4, -13,1, 9,11, -12,0, 9,8, -4,0, -8,-1, 3,6, -6,-1, 5,17, 6,14, -8,7, 1,-9, -4,-11, -5,-16, 7,0, -11,-5, 6,6, 5,10, 0,8, -4,0, 0,4, -6,4, -6,10, 1,4, 3,11, -10,2, -7,6, 10,-7, 6,-3, -5,-14, -6,-9, 9,0, -9,-9, 1,-11, 4,-8, -3,7, -1,13, 3,6, 7,11, -5,-15, -2,-10, 0,4, -9,2, 1,-2, -9,-8, 9,0, 1,-5, 2,9, -15,3, 16,-1, 11,-3, 14,2, 4,-3, 3,11, 7,14, 14,-2, 4,-8, 6,5, 1,2, 0,8, -5,7, 0,-2, 4,1, 0,13, 4,16, 14,-6, 0,-7, -8,-1, -14,0, -7,2, -12,5, 3,2, -8,-2, -6,-14, 14,2, -6,-4, -11,-4, -1,-2, -7,-3, -12,-1, 4,11, -6,0, 4,9, 10,-9, -4,-11, -5,-9, 4,-1, 8,0, 12,3, -7,3, -4,7, -2,-9, -7,-11, 1,-14, 4,-3, 8,6, -10,-2, -3,3, -1,9, 3,-1, 10,8, 9,8, -16,4, 12,5, 5,3, -3,3, -7,6, 12,0, 6,0, 13,4, 0,-1, -8,4, 4,16, 0,4, 4,8, -1,-16, 9,-5, -4,6, -9,4, 3,10, -9,3, 7,-4, 3,-7, -6,-12, 10,-2, 1,-14, 13,-6, -4,0, -9,-2, -1,11, -9,9, 7,-3, -3,-9, -1,8, 2,12, 9,8, -8,-2, 7,-9, 2,-10, 17,-4, 11,-2, 6,-10, 9,-6, 0,6, -12,6, 12,5, -10,-7, 7,3, -8,-4, 16,-6, 10,-8, 7,-8, -5,-14, -6,-7, 12,5, 2,3, -3,2, 16,-1, 2,-3, -3,-6, 10,2, -8,-9, 7,2, 13,0, -6,-8, 0,7, -13,0, -3,-17, -2,-7, -15,4, -11,7, 1,9, -4,11, -10,-7, -6,-4, 9,1, 3,-2, 3,-7, -3,-9, 17,-5, 15,0, 5,-5, 10,-1, 0,-9, 11,-1, 3,-4, -2,-6, 0,-15, -5,-12, -5,-2, 9,11, 0,1, 6,15, -15,2, -4,9, 4,8, 3,13, -9,-6, 11,7, 7,-6, 1,-6, 9,4, -11,-5, 6,-12, 13,-2, 6,12, 0,12, 10,8, 4,6, 8,13, 2,15, 14,-4, 9,-1, 12,-5, 15,0, 3,6, -8,4, -12,-3, 7,13, 0,-4, 4,-1, 9,11, 5,15, 9,10, -2,5, -3,-12, -1,-5, -3,-2, 6,7, 5,-11, 2,-6, -3,2, 5,7, 14,-4, -3,-13, 7,13, -16,4, 14,-1, 7,-3, -3,1, -8,-1, -10,6, 1,14, -10,1, 6,13, -5,-11, -1,-8, 9,2, -6,-7, 12,6, -4,-3, 8,1, -2,-5, 6,-6, 1,-8, -4,2, -16,4, 3,4, -11,-3, 5,10, 6,16, -1,3, -14,0, -5,10, -9,8, 2,-3, -4,-6, 8,9, -12,-3, 2,4, -2,1, 10,-6, 3,-7, 0,-15, 5,-10, -4,-17, 17,-3, -3,5, 6,16, 1,0, -4,-1, 4,-13, 6,-7, -2,-12, 6,-4, 12,-8, 6,-6, 5,9, -13,2, -7,-2, 6,7, 6,2, 1,0, -9,5, -4,11, -3,11, 1,14, -2,3, -6,0, -3,-3, -9,-5, 4,6, -6,1, 6,-11, 1,-11, -9,0, -16,5, -12,2, 1,11, 0,8, 6,13, 2,-11, -3,-13, -6,5, -9,8, 2,11, -3,10, -4,6, -4,11, 6,2, 10,6,
        -3,8, -10,3, -4,2, 4,13, 1,-14, 4,-7, 4,13, 2,18, 8,10, -10,-7, 5,5, -5,-3, 9,5, 4,1, 18,-1, 13,-3, 11,-8, 15,-3, -10,5, -14,2, 15,-4, 12,0, 2,-13, -3,-15, -10,1, -12,5, 6,0, 2,-2, 7,-11, 10,-7, 6,-7, 1,-9, -4,13, -7,10, -2,-6, -8,-10, 14,4, 9,2, 2,17, -2,14, -8,-2, -4,3, -1,6, -4,9, 3,7, -13,-4, 11,-1, 6,-3, -7,-9, 8,6, 0,-18, -2,-13, 2,-7, 6,-2, 1,-4, -3,-7, 16,1, -4,-12, 6,12, 1,9, 1,8, -4,6, -1,1, 1,6, -14,-1, 2,17, -8,-2, -12,-5, -1,2, -6,0, 12,5, -4,-6, 9,-3, 12,1, -11,-4, -15,-1, 6,5, 9,9, 10,-8, 4,-7, 3,-1, -1,-3, -3,-10, 9,3, -14,-2, -12,3, -7,-6, -3,-1, -1,9, 0,15, 13,-6, 7,-8, -12,3, -9,8, 6,-2, -5,-12, 0,13, -5,12, 3,-15, 14,2, 9,-10, 8,-3, -4,0, -11,0, -9,-1, -1,12, -5,-5, 8,9, 5,9, -8,0, 2,4, 5,9, 9,-10, 5,-13, 14,-5, -1,-17, 6,-12, 1,-14, -4,-13, -3,-8, 3,11, -14,4, 7,-6, 9,-1, 5,2, -9,-8, 4,-12, 1,-9, 5,9, 4,15, 10,-1, -1,-6, 3,-1, 6,4, -8,-5, 5,11, 17,1, 13,5, -4,-5, 1,1, -1,6, -5,2, 12,6, -6,-11, 10,-3, 2,-11, 15,-2, 8,-3, -8,6, -6,11, -14,-3, -17,1, 14,3, 0,-8, -4,-9, -1,-5, -4,6, -10,8, 0,-9, 3,-4, 1,-17, 4,-12, -3,-7, 6,3, 1,11, -3,14, 14,-5, 16,0, 2,3, -17,1, 3,6, -2,2, 0,-5, 11,7, 10,8, -7,-5, -5,5, -1,10, 0,1, -11,-6, -7,6, -12,5, 7,5, -2,-3, 18,-1, 3,-11, -10,1, -16,-1, -4,12, -15,3, -6,2, -13,-2, 6,12, -11,-2, 8,10, -4,-1, -8,-3, 2,7, -6,-3, 2,18, 3,15, -9,5, 2,-9, -2,-11, -2,-16, 7,1, -10,-7, 5,7, 3,10, -2,8, -4,-1, -1,4, -6,2, -7,8, 0,4, 1,11, -11,0, -8,5, 11,-5, 7,-2, -1,-15, -4,-10, 9,2, -7,-10, 3,-11, 6,-7, -5,7, -4,13, 2,7, 4,12, -2,-15, 0,-11, -1,4, -9,0, 1,-1, -8,-10, 9,2, 2,-5, 0,9, -16,-1, 16,2, 11,-1, 13,5, 5,-2, 1,11, 4,15, 14,1, 6,-7, 5,6, 1,2, -2,8, -7,6, 1,-2, 4,2, -3,12, 0,16, 15,-3, 1,-7, -7,-2, -14,-3, -7,0, -13,2, 3,3, -7,-4, -3,-15, 13,5, -5,-5, -10,-7, -1,-2, -6,-4, -12,-4, 2,11, -6,-1, 2,10, 12,-7, -1,-12, -3,-10, 4,0, 8,2, 11,6, -8,1, -5,6, 0,-9, -5,-12, 4,-14, 5,-2, 7,7, -9,-4, -3,2, -2,9, 3,0, 8,10, 8,10, -17,1, 11,7, 4,4, -3,2, -8,5, 11,2, 6,1, 12,6, 0,-1, -8,2, 0,16, -1,4, 2,8, 2,-16, 10,-3, -5,5, -10,2, 1,11, -9,1, 8,-3, 4,-6, -3,-13, 11,0, 4,-14, 14,-4, -4,-1, -9,-4, -3,11, -10,7, 8,-1, -1,-9, -3,8, 0,12, 8,10, -7,-4, 9,-7, 4,-9, 18,0, 11,1, 7,-8, 10,-4, -1,6, -13,3, 11,7, -8,-9, 7,5, -7,-6, 17,-2, 12,-6, 8,-6, -1,-15, -5,-8, 11,7, 1,3, -3,1, 16,2, 3,-3, -2,-7, 9,4, -6,-11, 7,3, 12,3, -4,-9, -2,6, -12,-3, 1,-17, 0,-7, -16,1, -12,5, -1,9, -7,10, -8,-9, -5,-5, 9,2, 3,-1, 4,-6, -1,-9, 18,-2, 15,3, 6,-4, 10,1, 2,-9, 11,2, 4,-3, -1,-6, 3,-14, -2,-13, -4,-3, 6,12, -1,1, 3,16, -15,-1, -6,8, 3,9, 0,13, -8,-8, 9,9, 8,-5, 3,-6, 8,6, -10,-7, 8,-10, 13,1, 3,13, -2,11, 8,10, 2,6, 5,14, -1,15, 14,-1, 9,1, 13,-2, 15,3, 2,7, -9,3, -11,-6, 4,15, 1,-4, 4,0, 6,12, 2,15, 7,12, -3,4, -1,-13, 0,-5, -2,-2, 5,8, 7,-10, 3,-5, -3,1, 3,8, 14,-1, 0,-13, 4,15, -17,1, 14,2, 8,-1, -3,0, -7,-2, -11,3, -1,14, -10,-1, 4,14, -3,-12, 0,-8, 9,4, -5,-8, 10,8, -3,-4, 7,2, -1,-5, 7,-5, 3,-8, -4,2, -17,1, 2,5, -10,-5, 3,10, 2,17, -1,3, -14,-3, -7,9, -11,6, 2,-2, -2,-6, 5,10, -12,-5, 2,4, -2,1, 11,-3, 5,-7, 3,-14, 7,-9, 0,-18, 17,1, -4,4, 2,17, 1,1, -4,-2, 6,-12, 8,-5, 0,-12, 6,-2, 13,-6, 7,-5, 3,10, -13,-1, -7,-3, 5,8, 5,3, 1,0, -10,3, -6,10, -5,10, -2,14, -2,2, -6,-1, -2,-3, -7,-7, 2,6, -6,0, 9,-10, 3,-11, -9,-2, -16,2, -12,0, -2,11, -2,8, 4,14, 4,-10, 0,-13, -7,3, -11,6, -1,11, -5,9, -5,5, -7,10, 5,3, 8,7,
        -5,7, -10,1, -4,1, 1,14, 4,-14, 5,-6, 1,14, -2,18, 6,12, -9,-9, 3,6, -4,-4, 7,7, 4,2, 18,3, 14,0, 12,-5, 15,0, -10,3, -14,-1, 15,-1, 12,3, 5,-12, 0,-15, -10,-2, -13,2, 6,2, 2,-2, 9,-9, 11,-5, 7,-5, 3,-8, -6,12, -9,8, -1,-7, -5,-11, 12,7, 8,4, -1,17, -5,14, -7,-3, -5,2, -2,5, -6,8, 2,7, -12,-6, 11,1, 6,-2, -5,-10, 7,8, 3,-17, 1,-13, 4,-7, 6,-1, 2,-4, -2,-7, 15,4, -2,-12, 3,13, -1,9, -1,8, -5,5, -1,1, 0,6, -14,-4, -1,17, -7,-3, -10,-7, -1,2, -6,-1, 10,7, -2,-7, 9,-1, 12,4, -10,-7, -14,-4, 5,6, 7,11, 12,-6, 5,-6, 4,0, 0,-4, 0,-11, 9,5, -14,-5, -12,0, -5,-7, -3,-2, -3,8, -3,15, 14,-3, 9,-6, -12,0, -10,6, 7,-1, -2,-13, -3,13, -7,10, 6,-14, 14,5, 11,-8, 9,-1, -4,-1, -10,-2, -8,-3, -4,12, -3,-6, 6,10, 3,10, -8,-2, 1,4, 3,10, 11,-8, 8,-12, 15,-2, 3,-17, 9,-10, 4,-13, -1,-14, -1,-8, 1,12, -14,1, 8,-4, 9,1, 5,3, -7,-10, 7,-11, 3,-8, 3,10, 1,15, 10,2, 0,-6, 4,0, 5,5, -7,-6, 2,12, 17,4, 12,8, -3,-5, 1,1, -2,5, -5,1, 11,8, -4,-12, 11,0, 4,-10, 16,1, 9,-1, -9,4, -8,9, -13,-6, -17,-3, 13,6, 2,-8, -2,-10, 0,-5, -5,5, -11,5, 2,-9, 3,-4, 4,-17, 7,-11, -2,-7, 5,4, -1,11, -6,13, 15,-2, 16,3, 1,3, -17,-3, 2,6, -2,2, 1,-5, 9,9, 8,10, -6,-7, -6,3, -3,10, 0,1, -9,-8, -8,4, -13,2, 6,7, -1,-3, 18,3, 5,-10, -10,-2, -15,-4, -7,11, -15,0, -7,1, -12,-5, 4,13, -11,-5, 5,11, -3,-1, -7,-5, 0,7, -5,-4, -2,18, 0,15, -10,3, 4,-8, 0,-11, 2,-16, 7,3, -8,-9, 3,8, 0,11, -3,7, -3,-1, -1,3, -7,1, -9,6, -1,4, -2,11, -10,-2, -9,3, 12,-2, 7,0, 2,-15, -2,-11, 9,4, -5,-11, 5,-10, 7,-5, -6,6, -6,12, 0,7, 2,12, 1,-16, 2,-10, -2,4, -9,-2, 2,-1, -5,-11, 9,4, 3,-5, -2,9, -15,-4, 15,5, 11,2, 12,8, 5,-1, -2,11, 0,16, 14,4, 7,-5, 4,7, 0,2, -3,7, -8,4, 1,-2, 3,3, -5,11, -3,16, 15,0, 3,-7, -7,-4, -13,-6, -7,-1, -13,-1, 2,3, -6,-5, 0,-15, 12,8, -4,-6, -9,-9, 0,-2, -5,-5, -11,-6, 0,11, -5,-2, 0,10, 13,-4, 1,-12, -1,-10, 4,1, 7,3, 9,8, -8,-1, -6,5, 2,-9, -2,-13, 7,-12, 5,-1, 5,9, -8,-6, -4,2, -4,8, 3,0, 6,12, 5,11, -17,-3, 9,9, 4,5, -4,2, -9,3, 11,5, 5,2, 10,9, 0,-1, -9,0, -3,16, -2,4, 0,9, 5,-15, 10,-1, -6,3, -10,0, -1,11, -9,-1, 8,-1, 5,-5, 0,-14, 10,2, 7,-12, 14,-1, -4,-2, -8,-6, -5,10, -11,5, 8,1, 1,-9, -5,7, -3,12, 5,11, -6,-5, 10,-5, 6,-8, 17,3, 11,3, 9,-6, 11,-2, -2,5, -14,0, 9,9, -6,-10, 6,6, -5,-7, 17,1, 13,-3, 9,-4, 2,-15, -3,-9, 9,9, 0,4, -4,0, 15,5, 3,-2, 0,-7, 8,6, -4,-12, 6,4, 11,5, -2,-10, -3,6, -11,-5, 4,-17, 1,-7, -15,-2, -13,2, -3,8, -9,9, -6,-10, -4,-6, 8,4, 4,0, 5,-5, 1,-9, 18,2, 14,6, 7,-2, 10,3, 4,-9, 10,4, 5,-2, 0,-6, 6,-13, 1,-13, -4,-3, 4,13, -1,1, 0,16, -14,-4, -8,7, 1,9, -3,13, -6,-9, 7,11, 9,-3, 4,-5, 7,8, -8,-9, 10,-8, 12,3, 0,14, -5,11, 6,12, 1,7, 2,15, -4,14, 14,2, 8,3, 13,1, 14,6, 0,7, -9,1, -9,-8, 1,15, 2,-4, 4,1, 4,13, -1,16, 4,13, -3,4, 2,-13, 1,-5, -2,-2, 3,9, 9,-8, 4,-4, -4,0, 1,9, 14,2, 3,-13, 1,15, -17,-3, 14,5, 8,1, -3,0, -7,-4, -12,1, -4,13, -10,-3, 1,14, 0,-12, 2,-8, 8,6, -3,-9, 8,10, -2,-5, 7,4, 0,-5, 8,-3, 5,-7, -4,1, -17,-3, 1,5, -9,-7, 0,11, -1,17, -2,3, -13,-6, -8,7, -12,4, 2,-2, -1,-7, 3,11, -10,-7, 1,4, -2,0, 12,-1, 6,-6, 6,-13, 8,-7, 3,-17, 17,4, -5,4, -1,17, 1,1, -3,-3, 9,-10, 8,-4, 3,-12, 7,-1, 14,-3, 8,-3, 1,10, -12,-3, -6,-4, 3,9, 4,4, 1,0, -10,1, -8,8, -7,9, -5,14, -2,2, -5,-2, -2,-4, -6,-8, 1,7, -6,-2, 11,-8, 5,-10, -9,-4, -16,-2, -12,-3, -4,10, -3,7, 1,14, 6,-9, 3,-13, -7,2, -12,4, -3,11, -7,7, -6,4, -9,9, 4,4, 6,9,
        -6,6, -10,-1, -4,0, -2,14, 6,-13, 6,-5, -2,14, -6,17, 3,13, -7,-10, 2,7, -3,-5, 6,8, 3,3, 17,7, 13,3, 13,-3, 15,3, -11,0, -14,-4, 15,2, 11,5, 7,-11, 3,-15, -9,-4, -13,-1, 6,3, 3,-1, 11,-7, 12,-2, 8,-4, 4,-7, -9,10, -11,6, 0,-7, -3,-12, 11,9, 7,6, -5,16, -8,12, -7,-5, -5,1, -3,5, -8,7, 0,8, -10,-9, 10,3, 6,-1, -3,-11, 5,9, 7,-16, 3,-12, 5,-6, 6,1, 3,-3, 0,-8, 14,7, 1,-12, 0,13, -3,9, -2,8, -6,4, -1,0, -2,6, -13,-6, -5,16, -7,-5, -9,-9, -1,2, -5,-2, 9,9, -1,-7, 9,1, 10,6, -8,-8, -13,-7, 3,7, 4,12, 13,-3, 6,-5, 4,1, 1,-4, 2,-11, 7,7, -12,-8, -12,-2, -4,-8, -2,-2, -4,7, -6,14, 14,0, 10,-4, -12,-2, -11,4, 7,0, 1,-13, -5,12, -9,9, 9,-13, 12,8, 12,-5, 9,0, -4,-2, -10,-4, -7,-4, -6,10, -2,-7, 4,11, 1,10, -7,-3, 0,4, 1,10, 12,-5, 10,-10, 15,1, 6,-16, 11,-8, 7,-12, 2,-14, 1,-8, -1,12, -14,-2, 9,-3, 9,3, 4,4, -5,-11, 9,-9, 4,-7, 1,10, -2,15, 9,4, 2,-6, 4,1, 4,6, -5,-7, 0,12, 15,7, 10,10, -2,-6, 0,1, -3,5, -5,0, 9,10, -1,-13, 11,2, 6,-9, 15,4, 9,0, -10,2, -10,8, -11,-8, -16,-6, 12,9, 3,-7, 0,-10, 1,-5, -6,4, -12,3, 4,-8, 4,-3, 7,-15, 9,-9, 0,-8, 4,5, -3,10, -8,11, 15,1, 15,6, 0,3, -16,-6, 1,6, -3,1, 2,-4, 7,11, 6,11, -5,-8, -7,2, -5,9, -1,1, -8,-10, -9,3, -13,-1, 5,8, 0,-3, 17,7, 7,-9, -9,-4, -14,-7, -9,9, -15,-3, -7,0, -11,-7, 1,14, -10,-7, 3,12, -3,-2, -6,-6, -1,7, -4,-5, -6,17, -3,15, -10,1, 6,-7, 3,-11, 5,-15, 6,4, -6,-11, 1,8, -2,11, -5,7, -3,-2, -2,3, -7,0, -10,4, -2,4, -4,11, -10,-4, -9,1, 12,0, 7,1, 5,-14, 1,-11, 8,5, -2,-12, 7,-9, 8,-4, -7,4, -9,10, -1,7, -1,12, 4,-15, 4,-10, -3,3, -8,-4, 2,-1, -3,-12, 8,5, 4,-4, -4,8, -14,-7, 14,8, 11,4, 10,10, 5,0, -4,11, -3,16, 13,6, 8,-4, 2,8, 0,2, -5,7, -9,3, 1,-2, 3,3, -8,10, -6,15, 15,3, 4,-6, -6,-5, -11,-8, -7,-3, -12,-3, 2,4, -5,-6, 3,-15, 10,10, -3,-6, -7,-10, 0,-2, -4,-6, -9,-8, -3,11, -5,-3, -2,10, 14,-2, 4,-11, 1,-10, 4,2, 7,5, 8,10, -8,-2, -7,3, 4,-8, 1,-13, 9,-11, 5,0, 3,10, -7,-8, -4,1, -6,7, 3,1, 3,13, 3,12, -16,-6, 7,11, 2,5, -4,1, -9,1, 10,7, 5,3, 8,11, 1,-1, -8,-2, -6,15, -3,3, -2,8, 8,-14, 10,1, -7,2, -10,-2, -3,10, -9,-3, 8,1, 6,-4, 3,-13, 10,4, 9,-11, 14,2, -3,-3, -6,-7, -7,9, -12,2, 8,2, 3,-9, -6,6, -5,11, 3,12, -5,-6, 11,-3, 8,-7, 16,7, 10,5, 10,-4, 11,1, -3,5, -13,-3, 7,11, -4,-11, 4,7, -4,-8, 16,5, 13,0, 10,-2, 5,-14, -1,-9, 7,11, -1,4, -4,-1, 14,8, 4,-2, 1,-7, 7,8, -1,-13, 5,6, 10,8, 0,-10, -4,5, -10,-8, 7,-15, 3,-7, -15,-6, -13,-1, -4,7, -10,7, -4,-11, -3,-6, 7,6, 4,1, 6,-4, 3,-9, 17,6, 13,9, 7,-1, 9,5, 5,-8, 9,6, 5,-1, 2,-6, 9,-12, 3,-12, -3,-4, 1,14, -1,0, -4,16, -13,-7, -9,5, -1,9, -5,12, -4,-10, 4,12, 9,-1, 5,-4, 5,9, -6,-11, 11,-6, 11,6, -3,13, -7,10, 3,13, 0,7, -1,15, -7,13, 13,5, 7,4, 12,3, 13,9, -1,7, -9,-1, -8,-10, -2,15, 3,-3, 4,2, 1,14, -4,15, 2,14, -4,3, 5,-12, 2,-4, -1,-3, 1,9, 11,-6, 5,-3, -4,-1, 0,9, 13,5, 5,-12, -2,15, -16,-6, 12,8, 8,2, -3,-1, -6,-5, -12,-1, -7,12, -9,-5, -2,14, 2,-12, 3,-7, 6,7, -1,-9, 6,11, -1,-5, 6,5, 1,-5, 8,-1, 6,-6, -4,0, -16,-6, 0,5, -7,-9, -2,11, -5,16, -2,2, -11,-8, -10,5, -13,1, 3,-1, 0,-7, 1,12, -9,-9, 0,4, -2,0, 12,1, 7,-4, 9,-12, 10,-5, 7,-16, 15,7, -5,2, -5,16, 0,1, -3,-3, 11,-8, 9,-2, 5,-11, 7,0, 14,0, 8,-1, -1,10, -11,-6, -5,-6, 1,9, 3,5, 1,1, -10,-1, -9,6, -9,7, -8,12, -3,1, -5,-3, -1,-4, -4,-9, 0,7, -6,-3, 12,-5, 7,-9, -8,-5, -15,-5, -11,-5, -6,9, -5,7, -2,14, 8,-8, 5,-12, -8,0, -13,1, -5,10, -8,6, -6,3, -10,7, 3,5, 4,10,
        -7,5, -10,-3, -4,-1, -4,13, 9,-11, 7,-4, -4,13, -9,15, 1,13, -4,-11, 0,7, -2,-6, 4,9, 3,3, 15,10, 12,6, 13,0, 14,6, -11,-2, -13,-7, 14,5, 10,7, 9,-9, 6,-14, -8,-5, -13,-3, 5,4, 3,-1, 12,-5, 12,0, 9,-2, 6,-6, -10,8, -12,3, 2,-6, -1,-12, 9,11, 6,7, -8,15, -10,10, -5,-6, -5,0, -4,4, -9,5, -1,7, -8,-10, 9,5, 6,1, 0,-11, 3,10, 10,-14, 6,-11, 6,-4, 6,2, 3,-3, 1,-7, 12,10, 4,-12, -2,13, -4,8, -4,7, -7,2, -1,0, -3,6, -11,-9, -8,15, -5,-6, -6,-11, -2,1, -5,-3, 6,11, 1,-7, 9,3, 9,8, -6,-10, -11,-10, 2,8, 2,13, 13,-1, 7,-4, 3,1, 1,-3, 4,-10, 6,8, -10,-10, -11,-5, -2,-9, -2,-3, -6,6, -9,12, 14,3, 11,-2, -11,-5, -12,2, 6,2, 3,-13, -8,11, -11,6, 11,-11, 10,10, 13,-3, 9,2, -4,-2, -9,-6, -6,-6, -8,9, 0,-7, 2,12, -1,10, -6,-5, -1,4, -1,10, 13,-3, 12,-8, 14,4, 9,-14, 12,-6, 9,-10, 4,-13, 2,-8, -4,11, -13,-5, 9,-1, 8,4, 3,4, -2,-12, 11,-7, 6,-6, -1,10, -5,14, 8,5, 3,-6, 3,1, 2,7, -4,-8, -3,12, 13,10, 8,12, 0,-6, 0,1, -4,4, -5,-1, 7,12, 1,-13, 10,4, 8,-8, 14,7, 9,2, -10,0, -11,5, -9,-10, -14,-9, 10,11, 5,-6, 2,-10, 2,-5, -7,2, -12,1, 6,-7, 5,-2, 10,-13, 11,-7, 1,-7, 3,5, -5,9, -10,9, 14,4, 13,9, 0,3, -14,-9, -1,6, -3,1, 3,-4, 5,12, 4,13, -3,-9, -7,0, -7,8, -1,1, -5,-11, -9,1, -13,-3, 3,9, 0,-3, 15,10, 9,-7, -8,-5, -12,-10, -11,7, -14,-6, -6,-2, -9,-9, -2,14, -8,-9, 1,12, -3,-3, -5,-7, -3,7, -3,-5, -9,15, -6,14, -10,-1, 7,-6, 5,-10, 8,-14, 5,5, -3,-12, 0,8, -4,10, -6,5, -3,-3, -3,3, -6,-2, -11,2, -2,4, -6,9, -9,-6, -9,-1, 12,3, 7,3, 7,-13, 3,-11, 7,7, 0,-12, 9,-7, 9,-2, -8,3, -10,8, -3,7, -4,12, 7,-14, 6,-9, -3,3, -7,-6, 2,0, -1,-12, 7,7, 4,-3, -6,7, -12,-10, 12,11, 9,6, 8,12, 5,1, -6,9, -6,15, 11,9, 9,-2, 1,8, -1,2, -6,5, -9,1, 2,-1, 2,4, -10,8, -9,13, 14,6, 5,-5, -4,-6, -9,-10, -6,-4, -11,-6, 1,4, -4,-7, 6,-14, 8,12, -1,-7, -4,-11, 1,-2, -2,-7, -7,-10, -5,10, -4,-4, -4,9, 14,1, 6,-10, 3,-10, 4,2, 5,6, 5,11, -7,-4, -8,2, 6,-7, 3,-13, 11,-9, 5,1, 1,10, -5,-9, -4,0, -7,6, 2,2, 1,13, 1,12, -14,-9, 5,12, 1,6, -4,0, -9,-1, 8,9, 4,4, 6,12, 1,-1, -8,-3, -9,13, -3,3, -3,8, 11,-12, 10,3, -7,0, -9,-4, -5,9, -8,-4, 8,2, 7,-2, 6,-12, 9,6, 11,-9, 13,5, -3,-3, -5,-8, -9,7, -12,0, 7,4, 4,-8, -7,5, -7,10, 1,12, -4,-7, 11,0, 9,-5, 14,10, 9,7, 11,-2, 11,3, -4,4, -12,-6, 5,12, -2,-12, 3,8, -2,-9, 15,8, 13,2, 10,0, 7,-13, 1,-9, 5,12, -1,3, -3,-1, 12,11, 4,-1, 3,-7, 5,9, 1,-13, 3,6, 8,10, 2,-10, -5,4, -8,-10, 10,-13, 4,-6, -13,-8, -13,-3, -6,6, -11,4, -2,-12, -1,-7, 6,7, 3,1, 7,-2, 4,-8, 15,9, 11,11, 7,1, 8,7, 7,-7, 8,8, 5,0, 3,-6, 11,-10, 6,-11, -2,-5, -2,14, -1,0, -7,15, -11,-10, -10,3, -3,9, -8,11, -1,-11, 2,13, 9,1, 5,-3, 3,10, -3,-12, 13,-4, 10,8, -6,12, -9,8, 1,13, -2,6, -4,14, -10,11, 12,8, 6,6, 11,6, 11,11, -3,7, -9,-3, -5,-11, -5,14, 3,-3, 4,2, -2,14, -7,14, -1,14, -5,2, 7,-11, 3,-4, -1,-3, -1,9, 12,-3, 6,-2, -3,-1, -2,9, 12,8, 8,-11, -5,14, -14,-9, 10,10, 7,4, -2,-2, -4,-6, -11,-4, -9,10, -8,-7, -5,13, 5,-11, 5,-6, 5,8, 1,-9, 4,13, 0,-5, 4,6, 2,-5, 8,0, 7,-5, -4,-1, -14,-9, -1,5, -5,-10, -4,10, -8,15, -3,2, -9,-10, -11,3, -13,-1, 3,-1, 2,-6, -2,12, -6,-11, -1,4, -2,-1, 11,4, 8,-3, 11,-10, 11,-3, 10,-14, 13,10, -6,1, -8,15, 0,1, -2,-4, 12,-6, 9,0, 7,-10, 6,2, 14,3, 8,0, -3,10, -10,-8, -3,-6, -1,9, 2,6, 1,1, -10,-3, -10,4, -10,5, -10,10, -3,1, -4,-4, 0,-4, -2,-10, -2,6, -5,-4, 13,-3, 9,-7, -7,-7, -14,-8, -10,-7, -8,8, -6,5, -5,13, 9,-6, 8,-11, -7,-1, -13,-1, -7,9, -9,4, -7,1, -11,4, 2,6, 2,11,
        -8,3, -9,-5, -4,-2, -7,12, 11,-9, 8,-2, -7,12, -12,13, -2,13, -2,-12, -1,7, -1,-6, 2,10, 2,4, 13,13, 11,8, 13,3, 12,9, -10,-4, -11,-9, 13,8, 8,9, 11,-7, 9,-12, -7,-7, -12,-6, 4,5, 3,0, 13,-2, 12,3, 9,0, 7,-5, -12,6, -12,1, 3,-6, 2,-12, 6,13, 4,8, -11,13, -12,8, -4,-7, -5,-1, -5,3, -10,3, -3,7, -6,-12, 8,7, 6,2, 2,-11, 1,10, 13,-12, 8,-10, 7,-3, 5,3, 4,-2, 3,-7, 10,12, 6,-11, -5,12, -6,7, -5,6, -7,1, -1,0, -4,5, -9,-11, -11,13, -4,-7, -4,-12, -2,1, -4,-4, 4,12, 2,-7, 8,5, 7,10, -4,-11, -9,-12, 0,8, -1,13, 13,2, 8,-2, 3,2, 2,-3, 6,-9, 4,9, -8,-12, -10,-7, 0,-9, -1,-3, -7,5, -11,10, 13,6, 11,0, -10,-7, -12,-1, 6,3, 6,-12, -10,9, -12,4, 13,-8, 8,12, 13,0, 8,4, -3,-3, -7,-8, -5,-7, -10,7, 1,-7, -1,12, -3,10, -5,-6, -2,4, -3,10, 13,0, 13,-5, 13,7, 12,-12, 13,-3, 11,-8, 7,-12, 4,-7, -6,10, -12,-8, 9,1, 7,6, 2,5, 0,-12, 12,-5, 7,-5, -3,10, -8,13, 7,7, 4,-5, 3,2, 1,7, -2,-9, -5,11, 11,13, 5,13, 1,-6, 0,1, -5,3, -5,-2, 4,13, 4,-12, 9,6, 9,-6, 12,10, 8,4, -10,-2, -12,3, -7,-12, -12,-12, 7,13, 6,-5, 4,-9, 3,-4, -7,1, -12,-2, 7,-6, 5,-1, 13,-11, 12,-5, 3,-7, 2,6, -7,8, -12,7, 13,7, 11,12, -1,3, -12,-12, -2,6, -3,0, 4,-3, 2,13, 1,13, -1,-9, -7,-1, -8,6, -1,1, -3,-12, -9,-1, -12,-6, 1,9, 1,-3, 13,13, 10,-5, -7,-7, -10,-12, -12,5, -12,-9, -6,-3, -7,-11, -5,13, -6,-10, -2,12, -2,-3, -3,-8, -4,6, -2,-6, -12,13, -9,12, -10,-3, 8,-4, 7,-9, 11,-12, 4,6, -1,-12, -2,8, -6,9, -7,4, -2,-3, -3,2, -6,-3, -11,0, -3,3, -8,8, -7,-8, -9,-3, 11,5, 6,4, 10,-11, 5,-10, 5,8, 3,-12, 10,-5, 9,0, -8,1, -12,6, -4,6, -6,11, 10,-12, 8,-7, -4,2, -6,-7, 2,0, 2,-12, 5,8, 5,-2, -7,6, -10,-12, 9,13, 8,8, 5,13, 5,2, -8,8, -9,13, 9,11, 9,0, -1,8, -1,2, -7,4, -9,-1, 2,-1, 1,4, -11,6, -12,11, 12,9, 6,-4, -3,-7, -7,-12, -5,-5, -10,-8, 0,4, -2,-8, 9,-12, 5,13, 0,-7, -2,-12, 1,-2, -1,-7, -5,-11, -7,9, -3,-5, -6,8, 13,4, 8,-9, 5,-9, 3,3, 4,7, 3,12, -6,-5, -8,0, 7,-6, 6,-12, 13,-6, 5,2, -1,10, -3,-10, -4,-1, -8,4, 2,2, -2,13, -2,12, -12,-12, 2,13, 0,6, -4,-1, -9,-3, 6,10, 3,5, 3,13, 1,-1, -7,-5, -12,11, -4,2, -5,7, 13,-9, 9,5, -7,-1, -8,-6, -7,8, -7,-6, 7,4, 7,-1, 8,-11, 7,8, 13,-6, 12,8, -2,-4, -3,-9, -10,5, -12,-3, 6,5, 6,-7, -8,3, -9,8, -2,12, -2,-8, 11,2, 10,-3, 12,13, 7,9, 11,0, 10,5, -5,3, -11,-8, 2,13, 1,-12, 1,8, 0,-9, 13,11, 12,5, 10,2, 10,-11, 3,-9, 2,13, -2,3, -3,-2, 9,13, 4,0, 4,-6, 3,10, 4,-12, 2,7, 6,11, 4,-9, -6,3, -6,-11, 13,-11, 5,-5, -11,-11, -12,-6, -7,5, -12,2, 1,-12, 0,-7, 4,8, 3,2, 7,-1, 6,-7, 13,12, 8,13, 7,2, 6,8, 8,-5, 6,9, 5,1, 4,-5, 13,-7, 8,-10, -1,-5, -5,13, -1,0, -10,13, -9,-12, -10,1, -5,8, -10,9, 1,-11, -1,13, 9,3, 6,-2, 1,10, -1,-12, 13,-1, 8,10, -8,11, -10,6, -2,13, -3,6, -7,13, -12,9, 10,10, 5,7, 10,8, 8,13, -4,6, -8,-5, -3,-12, -8,13, 4,-2, 3,3, -5,13, -10,12, -4,13, -5,1, 9,-9, 4,-3, 0,-3, -3,9, 12,-1, 6,-1, -3,-2, -4,8, 10,10, 10,-9, -8,13, -12,-12, 8,12, 6,5, -2,-2, -3,-7, -10,-6, -11,8, -6,-8, -8,12, 7,-10, 6,-5, 3,9, 3,-9, 1,13, 1,-5, 3,7, 3,-4, 8,2, 8,-3, -4,-2, -12,-12, -2,5, -3,-11, -6,9, -11,13, -3,1, -7,-12, -11,1, -12,-4, 3,0, 3,-6, -4,11, -4,-12, -2,4, -2,-1, 10,6, 8,-1, 13,-7, 11,-1, 13,-12, 11,13, -6,0, -11,13, 0,1, -1,-4, 13,-3, 9,2, 9,-8, 6,3, 13,6, 8,2, -5,9, -8,-10, -2,-7, -3,9, 1,6, 1,1, -9,-5, -11,2, -11,3, -12,8, -3,0, -3,-5, 1,-4, 0,-10, -3,6, -4,-5, 13,0, 10,-5, -5,-8, -12,-11, -8,-9, -9,6, -7,4, -8,12, 10,-4, 10,-9, -7,-3, -12,-4, -9,7, -10,2, -7,0, -12,2, 1,6, 0,11,
        -8,1, -8,-7, -3,-3, -9,10, 13,-7, 8,0, -9,10, -14,10, -5,12, 1,-12, -2,7, 0,-6, 0,10, 1,4, 10,15, 9,10, 12,6, 10,11, -9,-6, -9,-11, 11,11, 6,10, 12,-5, 11,-10, -5,-8, -10,-8, 3,6, 3,1, 13,1, 11,5, 9,2, 8,-3, -13,3, -12,-2, 4,-5, 4,-11, 3,14, 2,9, -13,10, -13,5, -2,-8, -5,-2, -6,2, -10,1, -4,6, -3,-13, 6,9, 5,3, 4,-10, -1,10, 15,-9, 10,-8, 7,-1, 4,4, 4,-1, 4,-6, 7,14, 8,-10, -7,11, -7,6, -6,5, -7,0, -1,0, -5,4, -7,-13, -13,10, -2,-8, -1,-13, -2,1, -3,-5, 1,13, 3,-6, 7,7, 5,11, -2,-12, -6,-14, -2,8, -4,13, 12,5, 8,0, 3,3, 3,-3, 8,-8, 2,10, -5,-13, -8,-9, 2,-9, 0,-3, -8,3, -13,7, 11,9, 11,2, -8,-9, -12,-3, 5,4, 8,-10, -12,7, -13,1, 14,-5, 5,13, 13,3, 7,6, -2,-4, -5,-9, -3,-8, -11,5, 2,-7, -3,12, -5,9, -4,-7, -3,3, -5,9, 13,3, 14,-2, 11,10, 14,-9, 13,0, 12,-6, 9,-10, 5,-6, -8,9, -10,-10, 9,3, 6,7, 1,5, 2,-12, 13,-2, 8,-3, -5,9, -11,11, 5,8, 5,-4, 3,3, 0,7, 0,-9, -7,10, 8,15, 2,14, 2,-6, 0,1, -6,2, -4,-3, 1,14, 6,-11, 8,8, 10,-4, 10,12, 7,6, -9,-4, -12,0, -4,-13, -9,-14, 4,14, 7,-4, 6,-8, 4,-3, -7,0, -11,-4, 8,-4, 5,0, 15,-8, 13,-2, 4,-6, 1,6, -9,6, -13,4, 11,10, 8,14, -2,3, -9,-14, -3,5, -3,-1, 5,-2, -1,13, -2,13, 1,-9, -7,-2, -9,4, -1,1, 0,-12, -9,-3, -10,-8, -1,9, 2,-3, 10,15, 11,-3, -5,-8, -7,-14, -13,2, -10,-11, -5,-4, -5,-12, -8,12, -4,-11, -4,11, -1,-3, -1,-8, -5,5, -1,-6, -14,10, -11,10, -9,-5, 9,-2, 9,-7, 13,-9, 3,7, 2,-12, -4,7, -8,8, -8,2, -1,-3, -3,1, -5,-4, -11,-2, -4,2, -9,6, -5,-9, -8,-5, 10,7, 5,5, 12,-9, 7,-9, 3,9, 5,-11, 11,-3, 9,2, -8,-1, -13,3, -5,5, -8,10, 12,-10, 9,-5, -4,1, -4,-8, 2,0, 4,-11, 3,9, 5,-1, -8,4, -7,-14, 6,15, 6,9, 2,14, 4,3, -9,6, -12,11, 7,13, 9,2, -3,8, -1,2, -8,2, -9,-3, 2,-1, 0,4, -12,4, -14,8, 10,11, 7,-3, -1,-7, -4,-13, -4,-6, -8,-10, -1,4, 0,-8, 11,-10, 2,14, 1,-7, 1,-12, 1,-2, 0,-7, -3,-12, -9,7, -2,-6, -8,7, 12,7, 10,-7, 7,-8, 2,4, 2,8, 0,12, -5,-6, -8,-2, 8,-4, 8,-10, 14,-3, 4,3, -3,10, -1,-10, -4,-2, -9,2, 2,2, -5,12, -4,11, -9,-14, -1,13, -1,6, -4,-2, -8,-5, 4,11, 2,6, 0,13, 1,-1, -6,-6, -14,8, -4,1, -6,6, 15,-6, 8,7, -7,-2, -7,-8, -9,6, -6,-7, 6,5, 7,0, 10,-9, 5,9, 14,-3, 10,10, -1,-4, -1,-9, -11,3, -11,-5, 5,6, 7,-6, -8,1, -10,6, -4,11, 0,-8, 10,4, 10,-1, 9,15, 5,10, 11,2, 9,7, -6,2, -9,-10, -1,13, 3,-12, -1,8, 2,-9, 10,13, 11,7, 9,4, 12,-9, 5,-8, -1,13, -3,3, -3,-3, 6,15, 4,1, 5,-5, 1,10, 6,-11, 1,7, 4,12, 6,-8, -6,2, -4,-12, 15,-8, 6,-4, -8,-13, -10,-8, -8,3, -12,-1, 3,-12, 1,-7, 2,9, 3,3, 7,0, 7,-6, 10,14, 5,14, 6,3, 4,9, 9,-3, 4,10, 5,2, 5,-4, 14,-4, 10,-8, 0,-5, -8,12, -1,0, -12,11, -6,-14, -10,-1, -7,7, -12,7, 3,-11, -4,13, 8,5, 6,-1, -1,10, 2,-12, 13,2, 6,11, -10,9, -11,4, -5,12, -4,5, -10,11, -14,6, 8,12, 3,8, 8,10, 5,14, -5,5, -7,-7, 0,-12, -11,11, 4,-1, 2,4, -8,12, -12,10, -7,12, -5,0, 11,-7, 5,-2, 1,-3, -5,8, 12,2, 6,0, -3,-3, -6,7, 8,12, 12,-7, -11,11, -9,-14, 5,13, 5,6, -2,-2, -1,-7, -9,-8, -12,6, -4,-9, -10,10, 9,-8, 7,-4, 1,9, 5,-8, -2,13, 2,-5, 1,7, 4,-3, 7,4, 8,-1, -3,-3, -9,-14, -3,4, -1,-11, -8,8, -13,10, -3,0, -4,-13, -11,-1, -11,-6, 3,1, 4,-5, -6,10, -1,-13, -3,3, -2,-1, 9,8, 8,1, 14,-4, 11,1, 15,-9, 8,15, -6,-1, -13,10, 0,1, 0,-4, 13,0, 8,4, 10,-6, 5,4, 11,9, 7,4, -7,8, -6,-11, -1,-7, -5,8, 0,6, 1,1, -8,-7, -11,0, -11,1, -13,5, -3,-1, -2,-6, 2,-4, 2,-10, -4,5, -3,-6, 13,3, 11,-3, -3,-9, -9,-13, -6,-10, -10,4, -8,2, -10,10, 11,-2, 12,-7, -6,-4, -11,-6, -10,5, -10,0, -7,-1, -12,-1, 0,6, -2,11,
        -9,-1, -6,-8, -3,-3, -11,8, 14,-4, 8,1, -11,8, -16,7, -7,11, 3,-12, -4,6, 2,-6, -2,10, 0,4, 7,17, 7,12, 11,8, 7,13, -8,-8, -6,-13, 9,13, 4,11, 13,-2, 13,-7, -4,-9, -9,-10, 2,6, 3,1, 13,3, 10,8, 8,4, 8,-2, -13,1, -11,-4, 5,-4, 7,-10, 0,14, 0,9, -15,7, -14,2, -1,-8, -4,-3, -6,1, -10,-1, -6,5, -1,-13, 4,10, 5,4, 6,-9, -3,10, 17,-6, 11,-6, 8,0, 3,5, 4,0, 6,-5, 4,15, 10,-8, -9,9, -8,4, -7,3, -7,-2, -1,0, -6,3, -4,-14, -15,7, -1,-8, 1,-13, -2,0, -2,-5, -1,13, 5,-6, 5,8, 2,12, 1,-12, -3,-15, -3,7, -6,11, 11,7, 8,1, 2,3, 3,-2, 9,-6, 0,10, -2,-14, -6,-10, 4,-8, 0,-3, -8,2, -14,5, 9,11, 10,4, -6,-10, -11,-6, 4,5, 10,-9, -13,4, -13,-1, 15,-2, 2,14, 12,5, 6,7, -2,-4, -3,-10, -2,-8, -12,2, 4,-6, -6,11, -7,8, -2,-8, -3,3, -7,8, 12,5, 14,1, 9,12, 16,-6, 13,3, 13,-3, 11,-8, 7,-5, -10,7, -8,-12, 8,5, 4,8, 0,5, 5,-11, 13,0, 8,-2, -7,8, -13,9, 4,9, 6,-3, 2,3, -2,7, 2,-9, -9,8, 5,16, -1,14, 3,-5, 0,1, -6,1, -4,-4, -2,14, 9,-9, 6,9, 11,-2, 7,14, 6,7, -8,-6, -12,-2, -2,-14, -6,-16, 1,15, 8,-2, 7,-7, 4,-2, -7,-2, -10,-7, 9,-3, 5,1, 16,-5, 13,0, 6,-5, -1,6, -10,4, -14,2, 9,12, 5,15, -2,2, -6,-16, -4,5, -3,-1, 5,-1, -3,13, -4,12, 3,-9, -6,-4, -10,2, -1,1, 2,-12, -8,-5, -9,-10, -3,9, 2,-2, 7,17, 11,-1, -4,-9, -4,-15, -13,0, -7,-13, -4,-5, -2,-13, -10,10, -1,-12, -7,10, -1,-4, 1,-9, -6,4, 1,-6, -16,7, -13,7, -8,-7, 9,0, 10,-5, 15,-6, 1,7, 4,-11, -5,6, -9,6, -8,1, -1,-4, -4,1, -4,-5, -10,-4, -4,2, -11,4, -3,-10, -7,-6, 8,9, 4,6, 14,-6, 9,-7, 1,9, 8,-10, 11,-1, 8,4, -8,-2, -13,1, -6,4, -10,8, 14,-7, 10,-3, -4,0, -3,-9, 2,1, 7,-10, 1,9, 5,0, -9,3, -4,-15, 3,16, 4,11, -1,14, 4,4, -11,4, -14,8, 4,14, 8,4, -4,7, -2,1, -8,1, -8,-5, 2,0, -1,4, -12,1, -15,5, 7,13, 7,-1, 0,-8, -2,-14, -3,-7, -6,-11, -2,4, 1,-8, 13,-7, -1,14, 3,-6, 3,-12, 2,-1, 2,-7, 0,-12, -10,5, -1,-6, -9,5, 10,9, 11,-5, 8,-6, 2,4, 1,8, -2,12, -3,-7, -7,-3, 9,-3, 10,-9, 14,0, 4,4, -5,9, 1,-10, -3,-3, -9,0, 1,3, -7,11, -7,10, -6,-16, -3,13, -2,5, -3,-3, -7,-6, 1,12, 1,6, -3,13, 1,-1, -4,-7, -15,5, -4,0, -7,4, 16,-3, 6,8, -6,-4, -5,-9, -10,4, -4,-8, 5,7, 7,2, 12,-7, 3,10, 14,0, 8,12, 0,-4, 1,-9, -11,1, -10,-8, 3,7, 8,-4, -9,-1, -11,4, -7,10, 1,-8, 9,6, 10,1, 6,17, 3,11, 10,4, 7,9, -6,1, -7,-12, -3,13, 6,-11, -2,8, 4,-8, 7,15, 9,9, 8,6, 14,-6, 6,-7, -3,13, -3,2, -2,-3, 3,16, 4,2, 6,-4, -1,10, 9,-9, -1,7, 1,12, 7,-7, -7,0, -1,-12, 16,-5, 7,-3, -6,-15, -9,-10, -8,2, -12,-3, 6,-11, 3,-6, 0,9, 2,3, 7,2, 8,-4, 7,16, 2,15, 6,5, 2,10, 9,-1, 2,11, 4,3, 6,-3, 15,-1, 11,-6, 1,-5, -10,10, -1,0, -14,8, -3,-15, -10,-3, -8,5, -13,4, 5,-10, -6,11, 7,6, 6,1, -3,10, 4,-11, 12,4, 3,12, -12,7, -12,1, -7,11, -5,4, -12,9, -15,3, 5,13, 2,8, 6,11, 2,15, -6,4, -5,-8, 2,-12, -13,9, 4,0, 2,4, -10,10, -14,7, -9,10, -5,-1, 12,-5, 5,-1, 1,-3, -6,7, 11,4, 6,2, -2,-3, -7,6, 5,13, 13,-4, -13,9, -6,-16, 2,14, 3,7, -1,-3, 0,-8, -7,-10, -13,3, -2,-10, -12,8, 10,-6, 8,-2, -1,9, 6,-7, -4,12, 3,-4, 0,8, 4,-2, 6,5, 9,1, -3,-3, -6,-16, -4,4, 2,-11, -9,6, -15,7, -3,0, -2,-14, -10,-4, -9,-9, 3,1, 5,-4, -8,8, 1,-13, -3,3, -1,-2, 7,10, 8,2, 15,-1, 10,4, 17,-6, 5,16, -5,-2, -15,7, 0,1, 1,-4, 13,3, 7,5, 11,-4, 4,5, 9,11, 6,5, -8,6, -3,-12, 1,-7, -6,7, -2,6, 1,1, -6,-8, -11,-3, -11,-2, -14,2, -3,-1, -1,-6, 3,-3, 4,-9, -5,4, -2,-6, 12,5, 11,-1, -1,-9, -6,-15, -4,-11, -11,2, -8,1, -12,8, 11,0, 13,-4, -5,-6, -9,-9, -11,3, -10,-2, -6,-3, -12,-3, -2,6, -4,10,
        -8,-2, -4,-9, -2,-4, -13,6, 14,-1, 8,3, -13,6, -17,3, -9,9, 5,-11, -5,5, 3,-5, -4,9, -1,4, 3,18, 4,13, 9,10, 4,14, -6,-9, -4,-14, 6,14, 1,12, 13,1, 14,-4, -2,-10, -6,-12, 0,6, 2,2, 12,6, 8,9, 7,5, 9,0, -13,-2, -10,-6, 6,-3, 9,-9, -3,14, -1,9, -17,4, -14,-1, 1,-8, -3,-4, -6,-1, -10,-3, -7,4, 2,-13, 2,10, 4,5, 8,-8, -5,9, 18,-2, 12,-3, 7,2, 2,5, 4,1, 7,-4, 1,16, 11,-5, -11,7, -9,2, -8,2, -6,-3, -1,-1, -6,2, -1,-14, -17,4, 1,-8, 4,-12, -2,0, -1,-6, -4,12, 6,-4, 4,9, 0,12, 3,-11, 0,-15, -5,6, -8,10, 9,9, 8,3, 1,3, 3,-1, 10,-4, -2,10, 1,-14, -4,-12, 5,-7, 1,-3, -9,0, -15,2, 7,12, 9,6, -4,-12, -9,-8, 3,6, 12,-6, -13,1, -12,-4, 15,1, -1,14, 11,8, 4,8, -1,-4, -1,-11, 0,-9, -12,0, 5,-5, -8,9, -8,6, -1,-8, -4,2, -8,6, 11,8, 13,4, 6,13, 17,-3, 12,5, 14,0, 13,-6, 7,-3, -11,5, -5,-14, 7,6, 2,9, -1,5, 7,-10, 13,3, 9,0, -8,6, -14,6, 2,10, 6,-2, 1,3, -3,6, 4,-8, -11,6, 1,17, -4,13, 4,-4, -1,1, -6,-1, -3,-5, -4,13, 10,-7, 4,10, 11,0, 4,15, 4,8, -7,-7, -11,-5, 1,-14, -3,-17, -2,15, 8,-1, 9,-5, 5,-1, -6,-3, -9,-9, 9,-1, 5,2, 17,-1, 13,3, 7,-4, -2,6, -10,2, -14,-1, 6,13, 2,16, -3,2, -3,-17, -5,4, -2,-2, 5,0, -6,12, -7,11, 4,-8, -5,-5, -10,0, -1,0, 5,-11, -7,-6, -6,-12, -4,8, 3,-2, 3,18, 11,2, -2,-10, -1,-16, -13,-3, -4,-14, -3,-6, 1,-13, -12,8, 1,-12, -9,9, 0,-4, 2,-8, -7,3, 2,-6, -17,3, -14,4, -6,-8, 9,1, 11,-3, 16,-3, 0,7, 6,-10, -6,5, -10,4, -8,-1, 0,-4, -4,0, -3,-6, -9,-6, -4,1, -11,2, -1,-11, -6,-8, 6,11, 3,7, 15,-3, 10,-5, -1,9, 9,-8, 11,2, 7,5, -7,-4, -13,-2, -7,3, -11,5, 15,-4, 11,-1, -4,-1, -1,-9, 2,1, 9,-9, -1,9, 5,1, -9,1, -1,-16, 0,16, 2,11, -4,13, 3,5, -11,2, -15,5, 1,14, 7,5, -6,6, -2,1, -8,-1, -7,-6, 2,0, -2,4, -12,-2, -16,2, 4,14, 7,0, 2,-7, 1,-14, -1,-7, -3,-12, -2,3, 3,-8, 14,-4, -4,13, 4,-6, 5,-11, 2,-1, 3,-6, 2,-12, -11,3, 1,-6, -10,3, 8,11, 12,-3, 9,-4, 1,4, -1,8, -5,11, -2,-8, -6,-5, 9,-1, 12,-6, 14,3, 3,5, -7,8, 3,-10, -3,-3, -9,-1, 0,3, -9,9, -9,9, -3,-17, -6,12, -4,5, -3,-3, -6,-8, -1,12, -1,6, -5,12, 1,0, -3,-8, -16,2, -4,-1, -8,3, 16,0, 4,9, -5,-5, -3,-10, -10,2, -2,-9, 3,7, 6,3, 13,-4, 1,11, 14,3, 5,14, 1,-4, 3,-9, -11,-2, -8,-9, 2,8, 9,-2, -8,-2, -12,1, -9,9, 3,-8, 8,8, 10,3, 2,18, 0,11, 9,6, 5,10, -6,-1, -4,-13, -6,12, 8,-9, -4,7, 5,-7, 4,17, 7,11, 7,7, 15,-3, 8,-6, -6,12, -3,1, -1,-3, 0,16, 3,2, 7,-3, -3,10, 10,-7, -2,7, -2,12, 9,-5, -7,-1, 2,-12, 17,-1, 7,-1, -2,-15, -6,-12, -9,0, -11,-5, 8,-9, 4,-6, -1,9, 1,3, 6,3, 9,-2, 3,17, -1,15, 4,6, 0,10, 9,1, 0,11, 3,4, 6,-2, 15,2, 12,-3, 2,-5, -12,8, -1,-1, -16,5, 0,-15, -9,-5, -9,4, -13,1, 7,-8, -8,10, 6,8, 6,2, -5,9, 6,-10, 11,7, 1,13, -13,4, -12,-1, -9,9, -6,3, -13,6, -15,0, 2,14, 0,9, 3,12, -1,15, -7,3, -4,-9, 5,-11, -14,6, 4,1, 1,4, -12,8, -15,4, -11,8, -5,-2, 13,-2, 5,0, 2,-2, -8,6, 10,6, 5,3, -1,-3, -8,4, 2,14, 13,-1, -14,6, -3,-17, -1,14, 2,8, 0,-3, 2,-7, -5,-11, -14,0, 0,-10, -14,5, 12,-4, 8,-1, -3,9, 8,-6, -7,11, 4,-3, -2,7, 5,-1, 5,6, 8,2, -2,-4, -3,-17, -5,3, 4,-11, -10,4, -17,4, -3,-1, 1,-14, -9,-6, -7,-10, 2,2, 6,-3, -10,7, 4,-12, -4,2, -1,-2, 5,11, 7,4, 15,2, 9,6, 18,-2, 1,17, -5,-4, -17,4, -1,1, 2,-4, 12,5, 6,7, 12,-1, 3,6, 7,12, 5,6, -9,4, -1,-13, 2,-7, -8,6, -3,5, 0,1, -4,-9, -10,-5, -11,-4, -14,-1, -2,-2, 1,-6, 3,-3, 6,-8, -6,3, 0,-6, 11,8, 11,2, 1,-9, -3,-16, -1,-12, -11,0, -8,-1, -14,5, 10,3, 13,-1, -4,-7, -7,-10, -11,0, -9,-4, -6,-4, -11,-5, -3,5, -6,9,
        -8,-4, -2,-10, -1,-4, -14,3, 14,2, 7,5, -14,3, -18,0, -11,7, 8,-10, -6,4, 4,-5, -6,8, -2,4, -1,18, 1,14, 6,12, 1,15, -4,-10, -1,-14, 3,15, -1,12, 13,3, 15,-1, 1,-10, -4,-13, -1,6, 2,2, 10,8, 6,11, 6,7, 8,2, -12,-5, -9,-8, 6,-2, 10,-7, -6,13, -3,8, -17,1, -14,-4, 3,-8, -3,-4, -6,-2, -9,-5, -7,2, 5,-12, 0,11, 3,6, 10,-6, -7,7, 18,2, 13,-1, 7,3, 1,6, 4,2, 7,-2, -2,15, 12,-3, -12,4, -9,0, -8,0, -5,-5, -1,-1, -6,0, 2,-14, -17,1, 3,-8, 6,-11, -2,-1, 0,-6, -6,11, 7,-3, 2,9, -3,12, 5,-10, 3,-15, -6,5, -10,8, 7,11, 7,5, 1,4, 4,-1, 11,-2, -4,9, 4,-14, -1,-12, 7,-6, 2,-3, -8,-2, -15,-1, 4,14, 7,8, -1,-12, -7,-10, 2,6, 13,-4, -13,-1, -11,-6, 15,4, -4,14, 9,10, 2,9, 0,-4, 1,-11, 2,-8, -12,-3, 6,-4, -10,7, -9,4, 1,-8, -4,1, -9,4, 9,10, 12,6, 3,14, 17,1, 11,8, 13,3, 14,-3, 8,-2, -11,2, -2,-14, 5,7, 0,9, -2,5, 9,-8, 12,6, 8,2, -9,4, -15,3, -1,10, 6,0, 1,4, -5,5, 5,-8, -12,4, -2,17, -6,12, 5,-3, -1,1, -6,-2, -2,-5, -7,12, 12,-5, 2,11, 10,3, 1,16, 2,9, -5,-9, -10,-7, 4,-13, 1,-17, -5,14, 8,1, 9,-3, 5,0, -5,-5, -7,-10, 9,1, 4,3, 17,2, 12,6, 7,-2, -3,6, -11,0, -13,-4, 3,14, -2,16, -3,1, 1,-17, -6,3, -2,-2, 5,1, -8,10, -9,9, 6,-7, -4,-6, -10,-2, -1,0, 7,-10, -5,-7, -4,-13, -6,7, 3,-1, -1,18, 10,4, 1,-10, 2,-15, -12,-6, -1,-15, -2,-6, 3,-13, -13,5, 3,-11, -10,7, 1,-3, 4,-8, -7,1, 3,-6, -18,0, -15,1, -4,-9, 8,3, 11,-1, 16,0, -2,7, 8,-9, -7,4, -11,2, -8,-3, 1,-3, -3,-1, -2,-6, -7,-8, -4,0, -11,-1, 1,-11, -4,-9, 4,12, 1,7, 15,0, 11,-3, -3,9, 11,-6, 10,4, 6,7, -6,-5, -12,-5, -7,1, -12,3, 16,-1, 11,1, -4,-2, 1,-9, 1,1, 10,-7, -3,9, 5,2, -9,-1, 2,-15, -4,15, -1,11, -6,12, 2,5, -11,-1, -16,2, -2,14, 6,7, -7,5, -2,1, -8,-3, -5,-7, 2,1, -2,3, -12,-4, -16,-2, 1,15, 7,2, 3,-7, 4,-13, 0,-7, -1,-13, -3,3, 5,-7, 15,-1, -6,12, 5,-5, 8,-10, 2,-1, 5,-5, 5,-11, -11,1, 2,-6, -10,1, 6,12, 12,0, 10,-2, 0,4, -3,8, -7,10, 0,-8, -5,-6, 9,1, 13,-4, 13,6, 2,5, -8,6, 5,-9, -2,-4, -8,-3, 0,3, -11,7, -10,7, 1,-17, -8,10, -4,4, -2,-4, -4,-9, -3,11, -2,6, -8,11, 1,0, -1,-9, -16,-2, -4,-2, -9,1, 15,4, 2,10, -4,-6, -1,-10, -11,0, 0,-9, 2,8, 5,5, 14,-1, -1,11, 13,6, 2,14, 2,-4, 5,-8, -10,-4, -6,-11, 0,8, 9,0, -8,-4, -12,-1, -10,7, 5,-7, 6,10, 9,5, -2,18, -2,11, 7,8, 3,11, -6,-2, -1,-14, -8,10, 10,-7, -5,6, 7,-6, 1,17, 4,12, 5,9, 15,0, 9,-4, -8,10, -4,1, -1,-4, -4,15, 3,3, 7,-1, -5,9, 12,-5, -4,6, -4,12, 9,-3, -6,-2, 4,-12, 17,2, 7,0, 1,-16, -4,-13, -8,-2, -10,-8, 10,-7, 5,-5, -3,8, 1,4, 5,5, 9,0, 0,18, -4,15, 3,7, -2,10, 9,3, -3,10, 3,4, 6,0, 14,5, 13,-1, 3,-4, -13,5, -1,-1, -16,1, 3,-15, -7,-7, -9,2, -13,-1, 9,-7, -10,8, 4,9, 6,3, -7,7, 8,-9, 9,9, -2,13, -14,1, -11,-3, -11,7, -6,2, -14,3, -15,-3, -1,14, -2,8, 1,13, -4,15, -7,1, -2,-9, 7,-10, -15,3, 4,2, 0,4, -13,5, -16,1, -12,6, -4,-3, 13,1, 5,1, 2,-2, -9,4, 9,8, 5,4, -1,-4, -9,2, -1,14, 13,1, -15,3, 1,-17, -4,14, 0,8, 0,-3, 3,-7, -2,-11, -13,-3, 2,-10, -14,2, 12,-1, 8,1, -5,8, 9,-4, -9,9, 4,-3, -3,7, 5,0, 4,7, 8,4, -1,-4, 1,-17, -5,2, 6,-10, -11,2, -17,1, -3,-2, 4,-13, -8,-8, -5,-12, 2,2, 6,-2, -11,4, 6,-11, -4,1, -1,-2, 2,11, 6,5, 14,5, 8,8, 18,2, -2,17, -4,-4, -17,1, -1,1, 2,-3, 11,8, 5,8, 12,1, 2,6, 4,14, 4,7, -10,2, 2,-13, 4,-6, -9,4, -4,5, 0,1, -2,-10, -9,-7, -10,-6, -14,-4, -2,-2, 2,-6, 4,-2, 7,-7, -6,2, 1,-6, 9,10, 10,4, 3,-9, 0,-16, 1,-12, -10,-3, -8,-3, -14,2, 10,5, 13,1, -2,-7, -5,-12, -11,-2, -8,-6, -5,-5, -10,-8, -4,5, -8,7,
        -7,-5, 0,-10, 0,-4, -14,0, 13,5, 6,6, -14,0, -17,-4, -12,5, 9,-8, -7,3, 5,-4, -8,7, -2,4, -5,18, -1,14, 4,13, -2,15, -2,-11, 2,-14, 0,15, -4,11, 12,6, 15,2, 3,-10, -1,-13, -2,6, 2,3, 8,10, 3,12, 4,8, 8,4, -11,-7, -7,-10, 7,0, 11,-4, -8,12, -5,7, -17,-3, -13,-6, 4,-7, -2,-5, -5,-3, -8,-7, -8,1, 7,-11, -2,10, 1,6, 11,-4, -8,6, 17,5, 13,2, 6,5, 0,6, 4,2, 8,-1, -5,15, 13,0, -13,2, -9,-2, -8,-1, -4,-6, 0,-1, -6,-1, 5,-13, -17,-3, 4,-7, 8,-9, -2,-1, 1,-5, -8,9, 7,-2, 0,9, -5,11, 8,-9, 6,-14, -7,4, -12,6, 5,12, 6,6, 0,4, 4,0, 11,1, -6,8, 6,-13, 1,-12, 8,-4, 2,-2, -8,-4, -14,-5, 1,14, 6,10, 1,-12, -5,-11, 0,7, 13,-1, -13,-4, -9,-8, 13,7, -6,13, 6,11, 1,9, 1,-4, 3,-10, 4,-8, -11,-5, 7,-3, -11,5, -10,2, 3,-7, -4,0, -10,2, 6,11, 11,9, 0,15, 16,4, 9,10, 12,6, 14,0, 8,0, -12,0, 1,-14, 4,8, -2,9, -3,4, 10,-6, 10,8, 8,4, -10,2, -15,0, -3,10, 6,1, 0,4, -6,4, 7,-6, -12,1, -6,16, -9,11, 6,-2, -1,0, -5,-3, -1,-5, -9,10, 12,-3, -1,11, 10,5, -3,15, 1,9, -3,-10, -9,-9, 7,-12, 4,-16, -8,13, 7,3, 10,-1, 5,1, -4,-6, -4,-11, 9,3, 3,4, 16,6, 10,8, 8,-1, -4,5, -10,-2, -12,-7, 0,15, -5,16, -3,1, 4,-16, -6,1, -2,-3, 5,2, -10,8, -11,7, 7,-5, -3,-7, -9,-4, -1,0, 9,-9, -4,-8, -1,-13, -7,5, 3,-1, -5,18, 9,6, 3,-10, 5,-15, -10,-8, 2,-15, 0,-7, 6,-12, -14,2, 6,-10, -11,4, 2,-3, 5,-7, -7,0, 4,-5, -17,-4, -15,-2, -2,-10, 7,5, 11,2, 16,4, -3,6, 10,-7, -8,2, -11,-1, -7,-4, 2,-3, -3,-2, 0,-7, -6,-10, -4,-1, -11,-3, 3,-10, -2,-9, 1,12, 0,7, 15,3, 11,-1, -4,8, 12,-3, 9,6, 4,8, -5,-6, -11,-7, -7,0, -13,0, 15,3, 10,3, -4,-2, 3,-9, 1,2, 11,-4, -4,8, 4,3, -9,-3, 5,-15, -7,14, -3,11, -9,11, 1,5, -11,-3, -16,-1, -5,13, 4,8, -7,3, -2,0, -7,-4, -4,-8, 2,1, -3,3, -11,-7, -16,-5, -2,15, 6,3, 5,-6, 7,-12, 2,-7, 2,-13, -3,2, 6,-6, 15,2, -9,11, 6,-4, 9,-8, 2,0, 6,-4, 7,-10, -11,-2, 3,-5, -10,-1, 3,13, 12,2, 10,0, -1,4, -4,7, -9,9, 1,-8, -4,-7, 9,3, 13,-1, 12,8, 1,5, -9,4, 7,-8, -1,-4, -7,-5, -1,3, -12,5, -11,4, 4,-16, -10,8, -5,3, -1,-4, -2,-9, -6,10, -3,5, -10,9, 1,0, 1,-9, -16,-5, -4,-2, -9,-1, 14,7, 0,10, -3,-7, 1,-10, -10,-2, 2,-9, 0,8, 4,6, 14,1, -3,10, 12,8, -1,14, 2,-4, 6,-7, -9,-6, -3,-12, -1,8, 9,2, -7,-5, -11,-4, -11,4, 6,-6, 4,11, 8,7, -5,17, -4,11, 6,10, 1,11, -5,-3, 1,-14, -10,8, 11,-5, -6,5, 8,-4, -3,17, 2,13, 3,10, 15,3, 9,-2, -10,8, -4,0, 0,-4, -7,14, 2,3, 7,0, -7,8, 12,-3, -5,5, -7,11, 10,-1, -6,-4, 7,-11, 16,6, 7,2, 4,-15, -1,-13, -8,-4, -8,-9, 11,-5, 6,-4, -5,7, 0,4, 4,6, 9,2, -4,17, -7,13, 2,7, -4,9, 8,4, -5,10, 2,5, 6,1, 13,8, 13,2, 4,-3, -14,2, 0,-1, -16,-2, 6,-14, -6,-8, -9,0, -13,-4, 10,-5, -12,6, 2,9, 5,4, -8,6, 10,-7, 7,11, -5,12, -14,-1, -10,-6, -12,5, -7,0, -15,0, -14,-6, -4,14, -4,8, -2,13, -7,13, -7,0, 0,-9, 9,-9, -15,0, 4,2, -1,4, -14,2, -15,-3, -13,3, -3,-4, 12,3, 5,2, 3,-2, -9,2, 7,10, 4,5, 0,-4, -9,1, -4,14, 13,4, -15,0, 4,-16, -6,13, -1,8, 1,-3, 5,-6, 0,-12, -12,-6, 4,-9, -14,-1, 12,1, 7,3, -6,7, 9,-2, -11,7, 5,-2, -5,6, 5,1, 2,8, 7,5, 0,-4, 4,-16, -5,1, 8,-8, -11,-1, -17,-3, -2,-2, 7,-12, -6,-9, -3,-12, 2,3, 7,0, -12,2, 8,-9, -4,0, 0,-2, 0,12, 5,6, 13,8, 6,9, 17,5, -6,16, -3,-5, -17,-3, -1,0, 3,-3, 9,10, 3,9, 11,4, 0,7, 1,14, 2,8, -10,0, 5,-12, 5,-5, -9,2, -5,4, 0,1, 0,-10, -7,-9, -8,-8, -13,-6, -2,-3, 3,-5, 4,-1, 9,-5, -7,0, 2,-6, 6,11, 9,6, 4,-8, 4,-16, 4,-11, -10,-5, -7,-4, -14,-1, 8,7, 13,4, -1,-8, -3,-12, -11,-4, -7,-8, -4,-6, -8,-9, -5,4, -10,6,
        -5,-7, 2,-10, 1,-4, -14,-3, 12,8, 4,7, -14,-3, -16,-7, -13,2, 11,-6, -7,1, 5,-3, -9,5, -3,3, -8,16, -4,13, 1,13, -5,14, 1,-11, 5,-13, -4,15, -6,10, 10,8, 14,5, 4,-9, 2,-13, -4,5, 1,3, 6,12, 1,12, 3,9, 7,5, -9,-10, -5,-11, 7,1, 12,-2, -11,10, -6,6, -16,-6, -11,-9, 5,-6, -1,-5, -4,-4, -6,-9, -8,-1, 10,-9, -4,10, 0,6, 11,-1, -9,4, 15,9, 12,5, 5,6, -1,6, 3,3, 8,1, -8,13, 12,2, -13,-1, -9,-4, -7,-3, -3,-6, 0,-1, -6,-2, 8,-12, -16,-6, 5,-6, 10,-8, -2,-2, 3,-5, -10,8, 7,0, -2,9, -7,10, 9,-7, 9,-12, -8,2, -13,3, 2,13, 4,7, -1,3, 3,1, 10,3, -7,7, 9,-11, 4,-12, 9,-3, 3,-2, -7,-5, -13,-7, -2,14, 3,10, 4,-12, -3,-12, -1,7, 13,2, -12,-7, -8,-10, 12,10, -9,11, 4,12, -1,9, 2,-4, 5,-9, 5,-7, -10,-7, 7,-1, -12,3, -10,0, 4,-7, -4,-1, -10,0, 4,12, 9,11, -3,15, 15,8, 7,11, 11,8, 14,3, 8,2, -11,-3, 4,-14, 2,9, -4,9, -4,3, 11,-4, 8,10, 7,5, -10,0, -15,-4, -4,9, 6,2, -1,3, -6,3, 8,-5, -12,-1, -9,14, -11,9, 6,-1, -1,0, -4,-4, 0,-5, -11,8, 13,0, -3,10, 8,7, -6,15, -1,9, -1,-10, -7,-10, 9,-10, 8,-15, -10,11, 7,4, 10,1, 5,2, -3,-6, -2,-12, 8,5, 2,4, 14,9, 8,10, 8,1, -5,4, -10,-4, -10,-9, -3,15, -8,14, -3,0, 8,-15, -6,0, -1,-3, 4,3, -12,6, -12,5, 8,-4, -1,-7, -8,-6, -1,-1, 10,-7, -2,-9, 2,-13, -8,4, 3,0, -8,16, 8,8, 4,-9, 8,-13, -8,-10, 5,-14, 1,-7, 8,-10, -14,-1, 8,-9, -12,2, 2,-3, 7,-5, -7,-2, 5,-4, -16,-7, -14,-5, 0,-10, 6,6, 11,4, 15,7, -4,6, 11,-5, -8,1, -10,-3, -6,-5, 2,-3, -3,-2, 1,-7, -3,-10, -4,-2, -10,-5, 5,-9, 0,-9, -1,12, -2,7, 14,6, 11,2, -6,7, 12,-1, 8,8, 3,9, -3,-7, -9,-10, -7,-2, -12,-2, 15,6, 9,5, -3,-3, 5,-8, 1,2, 12,-2, -6,7, 3,4, -8,-5, 8,-13, -10,13, -5,10, -11,9, 0,5, -10,-5, -15,-5, -8,12, 3,9, -8,2, -2,0, -6,-5, -2,-9, 2,2, -3,2, -9,-9, -14,-8, -5,14, 6,4, 6,-5, 9,-10, 3,-6, 5,-12, -4,1, 7,-4, 14,5, -11,9, 7,-2, 11,-6, 2,0, 6,-3, 9,-8, -11,-4, 4,-4, -9,-3, 0,14, 11,5, 10,2, -2,4, -5,6, -10,7, 3,-7, -2,-8, 8,5, 13,2, 10,11, 0,5, -10,2, 9,-6, 0,-4, -6,-6, -1,3, -13,2, -12,2, 8,-15, -12,6, -6,2, 0,-4, 0,-9, -8,9, -4,4, -11,7, 1,1, 3,-8, -14,-8, -3,-3, -8,-3, 13,10, -2,10, -1,-7, 3,-9, -10,-4, 4,-9, -2,8, 3,6, 13,4, -5,9, 10,11, -4,14, 3,-3, 8,-6, -8,-8, -1,-12, -3,7, 9,4, -5,-7, -10,-6, -12,2, 7,-4, 1,11, 6,9, -9,15, -6,9, 3,10, -2,11, -4,-4, 4,-13, -12,6, 12,-3, -7,3, 9,-3, -6,16, -1,13, 1,10, 14,6, 9,0, -12,6, -3,-1, 1,-3, -10,13, 1,4, 7,2, -9,6, 13,0, -6,4, -9,9, 10,1, -5,-5, 9,-9, 14,9, 6,3, 7,-14, 2,-13, -7,-5, -6,-11, 12,-3, 7,-2, -6,6, -1,3, 3,6, 9,4, -7,16, -10,12, 0,7, -6,8, 7,6, -7,8, 1,5, 6,2, 11,10, 12,5, 4,-2, -14,-1, 0,-1, -15,-5, 9,-12, -4,-9, -9,-2, -12,-7, 11,-2, -13,3, 0,9, 4,5, -9,4, 11,-5, 5,12, -7,11, -13,-4, -9,-8, -13,2, -7,-1, -15,-3, -12,-9, -6,13, -5,7, -5,12, -10,12, -7,-2, 2,-9, 10,-7, -15,-4, 3,3, -2,4, -14,-1, -15,-6, -14,0, -2,-4, 11,6, 4,3, 3,-1, -9,0, 5,11, 3,5, 1,-3, -9,-1, -6,13, 12,7, -15,-4, 8,-15, -9,11, -3,7, 1,-3, 6,-5, 3,-11, -11,-8, 6,-8, -14,-4, 12,4, 7,4, -8,6, 9,0, -12,5, 5,-1, -6,5, 5,2, 1,8, 5,7, 1,-4, 8,-15, -5,0, 10,-6, -10,-3, -16,-6, -2,-3, 9,-10, -4,-10, 0,-13, 1,3, 7,1, -12,0, 10,-8, -4,-1, 0,-2, -3,11, 3,7, 11,10, 4,10, 15,9, -9,14, -2,-6, -16,-6, -1,0, 3,-2, 7,11, 1,9, 10,6, -1,7, -2,14, 1,8, -10,-2, 7,-11, 6,-4, -9,0, -5,3, -1,1, 2,-10, -5,-10, -6,-10, -11,-9, -1,-3, 4,-4, 4,0, 10,-3, -7,-1, 4,-5, 4,12, 8,8, 6,-7, 7,-15, 6,-10, -8,-7, -6,-5, -14,-4, 7,8, 12,7, 1,-8, 0,-13, -9,-6, -5,-9, -2,-7, -6,-11, -5,3, -10,3,
        -4,-8, 4,-9, 2,-4, -13,-6, 10,10, 3,8, -13,-6, -14,-11, -13,-1, 12,-3, -7,0, 6,-2, -10,3, -4,2, -12,14, -7,12, -2,13, -8,13, 3,-10, 8,-12, -7,14, -8,9, 8,10, 13,8, 6,-8, 5,-13, -5,5, 0,3, 3,13, -2,12, 1,9, 6,6, -7,-11, -2,-12, 6,2, 12,1, -12,7, -8,5, -14,-10, -9,-11, 7,-5, 0,-5, -4,-5, -4,-10, -7,-2, 11,-7, -6,9, -1,6, 11,1, -10,2, 13,12, 11,7, 4,7, -2,5, 2,4, 7,2, -11,11, 12,5, -12,-4, -8,-5, -6,-4, -2,-7, 0,-1, -5,-3, 10,-10, -14,-10, 7,-5, 12,-5, -1,-2, 4,-4, -12,5, 7,1, -4,8, -9,8, 11,-5, 11,-10, -8,1, -13,0, -1,13, 3,8, -2,3, 3,2, 10,5, -9,5, 11,-9, 6,-11, 9,-1, 3,-1, -6,-6, -11,-10, -5,14, 1,11, 6,-11, 0,-12, -2,6, 13,5, -10,-9, -5,-12, 9,12, -11,9, 1,13, -3,8, 3,-3, 7,-8, 6,-6, -8,-9, 7,0, -12,0, -10,-2, 5,-6, -4,-2, -10,-2, 1,13, 6,12, -6,14, 13,11, 4,13, 9,10, 13,6, 7,3, -11,-5, 7,-13, 0,9, -5,8, -5,3, 12,-1, 6,11, 6,6, -10,-2, -14,-7, -6,8, 5,3, -2,3, -7,2, 9,-3, -11,-4, -12,12, -12,6, 6,0, -1,0, -4,-5, 1,-5, -13,5, 12,3, -5,10, 7,8, -9,13, -3,8, 1,-10, -4,-12, 11,-8, 11,-13, -12,8, 6,5, 9,3, 4,3, -2,-7, 1,-12, 7,6, 2,5, 12,12, 6,11, 7,2, -6,3, -9,-6, -8,-11, -6,14, -11,12, -3,-1, 11,-13, -6,-1, 0,-3, 3,4, -13,3, -13,2, 9,-2, 0,-7, -7,-7, -1,-1, 12,-4, 0,-9, 5,-13, -9,2, 3,1, -12,14, 6,9, 6,-8, 11,-11, -6,-11, 8,-13, 2,-6, 10,-8, -13,-4, 9,-7, -12,-1, 3,-2, 8,-4, -6,-3, 6,-3, -14,-11, -13,-8, 2,-10, 5,8, 10,6, 13,10, -6,5, 12,-2, -8,-1, -10,-5, -5,-7, 3,-2, -2,-3, 2,-6, -1,-11, -3,-3, -9,-7, 7,-8, 2,-9, -4,11, -3,6, 12,9, 10,4, -7,6, 12,2, 6,9, 1,9, -2,-8, -7,-11, -6,-3, -12,-5, 13,9, 8,7, -2,-4, 6,-7, 0,2, 12,1, -7,6, 3,5, -7,-6, 11,-11, -12,10, -7,9, -12,6, -1,5, -9,-7, -14,-8, -10,10, 1,9, -8,0, -2,-1, -5,-7, 0,-9, 1,2, -4,1, -7,-10, -12,-11, -8,13, 5,6, 7,-4, 11,-8, 4,-5, 7,-11, -4,0, 8,-3, 13,8, -12,6, 7,-1, 12,-3, 2,1, 7,-2, 10,-6, -10,-6, 5,-4, -9,-5, -3,13, 10,7, 9,4, -3,3, -7,5, -12,4, 4,-6, -1,-8, 7,6, 13,5, 7,12, -1,5, -10,0, 10,-4, 1,-4, -5,-8, -2,2, -13,-1, -12,-1, 11,-13, -13,3, -6,1, 1,-4, 2,-9, -9,7, -5,4, -13,4, 1,1, 4,-7, -12,-11, -2,-4, -7,-4, 10,12, -4,9, 0,-7, 5,-9, -9,-6, 5,-8, -3,7, 2,7, 12,7, -7,8, 7,12, -7,13, 4,-2, 9,-4, -6,-9, 2,-12, -4,6, 8,5, -4,-8, -9,-8, -12,-1, 8,-3, -1,11, 4,10, -12,13, -8,8, 1,11, -4,10, -4,-5, 7,-12, -13,3, 12,0, -8,2, 9,-1, -10,14, -4,12, -1,10, 12,9, 9,2, -13,3, -3,-2, 2,-3, -12,10, 0,4, 6,3, -10,4, 12,3, -7,3, -10,7, 9,3, -4,-6, 10,-7, 12,12, 5,4, 10,-12, 5,-13, -6,-6, -3,-12, 12,0, 7,-1, -8,5, -2,3, 2,7, 8,5, -11,14, -12,9, -1,7, -7,7, 6,7, -8,7, 0,5, 5,3, 8,12, 11,7, 5,-2, -13,-4, 0,-1, -14,-9, 11,-10, -2,-10, -8,-4, -10,-9, 11,0, -13,0, -2,9, 3,6, -10,2, 12,-2, 2,13, -9,9, -12,-7, -7,-9, -13,-1, -6,-2, -14,-6, -10,-11, -9,11, -6,6, -7,11, -12,9, -6,-3, 4,-8, 12,-4, -14,-7, 2,4, -3,3, -13,-4, -13,-9, -13,-3, -2,-5, 10,8, 3,4, 3,0, -9,-2, 2,12, 2,6, 2,-3, -8,-3, -9,11, 10,9, -14,-7, 11,-13, -11,9, -4,6, 2,-2, 7,-4, 5,-11, -9,-10, 7,-7, -13,-7, 11,6, 6,5, -9,4, 9,2, -13,2, 5,0, -7,4, 4,3, -1,8, 4,8, 2,-4, 11,-13, -5,-1, 11,-4, -10,-5, -14,-10, -1,-3, 11,-8, -2,-11, 3,-12, 0,3, 6,2, -11,-3, 12,-5, -4,-2, 1,-2, -5,11, 2,8, 8,12, 2,11, 13,12, -12,12, -1,-6, -14,-10, -1,0, 4,-1, 4,13, -1,9, 9,8, -2,6, -5,14, -1,8, -9,-4, 9,-9, 7,-3, -9,-2, -6,2, -1,1, 4,-9, -3,-11, -4,-11, -9,-11, 0,-3, 5,-4, 4,1, 10,-1, -6,-2, 5,-5, 1,13, 6,9, 7,-6, 10,-13, 8,-9, -7,-8, -5,-7, -13,-7, 5,10, 10,9, 2,-7, 3,-12, -8,-8, -3,-10, -1,-7, -3,-12, -6,2, -11,1,
        -2,-8, 6,-8, 2,-4, -11,-8, 8,12, 1,8, -11,-8, -12,-13, -13,-3, 12,-1, -7,-2, 6,0, -10,1, -4,2, -14,12, -9,10, -4,13, -10,11, 5,-10, 10,-10, -9,12, -10,7, 6,12, 11,10, 8,-6, 7,-11, -5,3, 0,3, 1,13, -4,12, -1,9, 4,7, -5,-13, 0,-12, 6,4, 12,3, -14,5, -8,3, -12,-12, -7,-13, 7,-3, 2,-5, -2,-5, -2,-10, -7,-4, 13,-5, -8,7, -3,6, 11,3, -10,0, 11,14, 9,9, 2,7, -4,5, 2,4, 7,4, -13,9, 10,7, -11,-6, -6,-7, -5,-6, 0,-7, 0,-1, -5,-5, 12,-8, -12,-12, 7,-3, 12,-3, -1,-2, 4,-4, -12,3, 7,3, -6,7, -11,6, 11,-3, 13,-8, -8,-1, -13,-2, -3,13, 1,8, -2,3, 3,2, 8,7, -9,3, 13,-7, 8,-9, 9,1, 3,-1, -4,-7, -9,-12, -7,12, -1,11, 8,-9, 2,-12, -4,6, 11,7, -8,-11, -3,-12, 7,14, -13,7, -1,13, -5,8, 3,-3, 9,-6, 7,-4, -6,-11, 7,2, -12,-2, -10,-4, 6,-4, -4,-2, -10,-4, -1,13, 4,13, -8,12, 11,13, 2,13, 7,12, 11,8, 7,5, -9,-7, 9,-11, -2,9, -7,6, -5,1, 12,1, 4,12, 4,7, -10,-4, -12,-9, -8,6, 5,5, -2,3, -7,0, 9,-1, -10,-6, -14,10, -13,4, 6,2, -1,0, -2,-5, 3,-5, -13,3, 12,5, -7,8, 5,10, -11,11, -5,8, 3,-10, -2,-12, 13,-6, 13,-11, -14,6, 4,6, 9,5, 4,3, 0,-7, 3,-12, 5,8, 0,5, 10,14, 4,12, 7,4, -6,1, -7,-8, -6,-13, -8,12, -13,10, -3,-1, 13,-11, -6,-3, 0,-3, 3,4, -13,1, -13,0, 9,0, 2,-7, -5,-9, -1,-1, 12,-2, 2,-9, 7,-11, -9,0, 3,1, -14,12, 4,10, 8,-6, 13,-9, -4,-12, 10,-11, 4,-6, 12,-6, -12,-6, 11,-5, -12,-3, 3,-2, 8,-2, -6,-5, 6,-1, -12,-13, -11,-10, 4,-10, 3,8, 8,8, 11,12, -6,3, 12,0, -8,-3, -8,-7, -3,-7, 3,-2, -2,-3, 4,-6, 1,-11, -3,-3, -7,-9, 9,-6, 4,-9, -6,10, -5,6, 10,11, 9,6, -8,4, 12,4, 4,10, -1,9, 0,-8, -5,-13, -6,-5, -10,-7, 11,11, 6,9, -2,-4, 8,-5, 0,2, 12,3, -8,4, 1,5, -5,-8, 13,-9, -14,8, -9,7, -13,4, -3,5, -7,-9, -12,-10, -12,8, -1,9, -8,-2, -2,-1, -3,-7, 2,-9, 1,2, -4,1, -5,-12, -10,-13, -10,11, 3,6, 7,-2, 13,-6, 5,-4, 9,-9, -4,0, 8,-1, 11,10, -13,4, 7,1, 12,-1, 2,1, 7,0, 11,-4, -8,-8, 5,-2, -7,-7, -5,13, 8,9, 8,6, -3,3, -7,3, -12,2, 6,-5, 1,-8, 5,8, 11,7, 5,14, -3,5, -10,-2, 10,-2, 1,-4, -3,-8, -2,2, -13,-3, -12,-3, 13,-11, -13,1, -6,-1, 1,-4, 4,-9, -11,5, -5,2, -13,2, 1,1, 6,-6, -10,-13, -2,-4, -6,-6, 8,14, -6,8, 2,-7, 7,-7, -7,-8, 7,-6, -5,7, 0,7, 10,9, -9,6, 5,14, -9,11, 4,-2, 9,-2, -4,-10, 4,-12, -6,5, 6,7, -2,-8, -7,-10, -12,-3, 8,-1, -3,11, 2,10, -14,11, -10,6, -1,11, -6,9, -2,-5, 9,-10, -13,1, 12,2, -8,0, 9,1, -12,12, -6,11, -3,10, 10,11, 9,4, -13,1, -3,-2, 2,-3, -14,8, 0,4, 6,5, -10,2, 12,5, -7,1, -12,5, 9,5, -2,-6, 12,-5, 10,14, 4,5, 12,-10, 7,-11, -4,-7, -1,-12, 12,2, 7,1, -8,3, -2,3, 0,7, 6,7, -13,12, -14,7, -3,7, -9,5, 4,8, -10,5, -2,5, 5,5, 6,14, 9,9, 5,0, -12,-6, 0,-1, -12,-11, 13,-8, 0,-10, -7,-6, -8,-11, 11,2, -13,-2, -4,9, 1,6, -10,0, 12,0, 0,13, -11,7, -10,-9, -5,-11, -13,-3, -6,-4, -12,-8, -8,-13, -11,9, -7,4, -9,9, -14,7, -6,-5, 6,-7, 12,-2, -12,-9, 2,4, -3,3, -12,-6, -11,-11, -13,-5, 0,-5, 8,10, 3,4, 3,0, -9,-4, 0,12, 0,6, 2,-3, -8,-5, -11,9, 8,11, -12,-9, 13,-11, -13,7, -6,5, 2,-2, 7,-2, 7,-9, -7,-12, 9,-5, -11,-9, 9,8, 4,6, -9,2, 9,4, -13,0, 5,2, -7,2, 4,3, -3,8, 2,8, 2,-4, 13,-11, -5,-3, 11,-2, -8,-7, -12,-12, -1,-3, 13,-6, 0,-11, 5,-12, 0,3, 6,4, -11,-5, 12,-3, -4,-2, 1,-2, -7,9, 0,8, 6,14, 0,11, 11,14, -14,10, 1,-6, -12,-12, -1,0, 4,-1, 2,13, -3,9, 7,10, -4,6, -7,12, -3,8, -8,-6, 11,-7, 7,-1, -9,-4, -6,0, -1,1, 6,-8, -1,-11, -2,-11, -7,-13, 0,-3, 5,-2, 4,1, 10,1, -6,-4, 5,-3, -1,13, 4,10, 8,-4, 12,-11, 10,-7, -5,-10, -3,-7, -11,-9, 3,10, 8,11, 4,-7, 5,-12, -6,-10, -1,-10, 1,-7, -1,-12, -6,0, -11,-1,
        0,-9, 8,-7, 3,-3, -9,-10, 5,13, -1,8, -9,-10, -9,-15, -12,-6, 12,2, -6,-3, 6,1, -10,-1, -4,1, -16,8, -11,8, -7,11, -12,9, 7,-8, 12,-8, -12,10, -11,5, 3,13, 9,12, 9,-4, 9,-10, -6,2, -1,3, -2,13, -7,10, -3,9, 3,8, -2,-13, 3,-12, 5,5, 11,6, -14,2, -9,1, -9,-14, -4,-14, 8,-2, 2,-4, -1,-6, 0,-10, -6,-5, 13,-2, -9,5, -4,5, 10,5, -10,-2, 7,16, 7,11, 1,8, -4,4, 1,4, 6,5, -15,6, 9,9, -10,-8, -5,-8, -4,-7, 1,-7, 0,-1, -4,-5, 13,-5, -9,-14, 8,-2, 13,0, 0,-2, 5,-3, -13,0, 6,4, -7,6, -12,4, 12,0, 14,-5, -8,-2, -12,-5, -6,12, -1,8, -3,2, 2,3, 7,8, -10,1, 14,-4, 10,-7, 9,3, 3,0, -3,-8, -6,-14, -10,11, -3,10, 10,-7, 5,-11, -5,5, 10,9, -5,-12, 0,-13, 4,15, -14,4, -4,12, -6,6, 4,-2, 10,-4, 8,-3, -4,-12, 6,3, -11,-5, -9,-6, 7,-3, -3,-3, -9,-6, -4,12, 1,14, -11,10, 8,15, -1,13, 4,13, 9,10, 5,6, -8,-9, 11,-9, -4,8, -8,5, -5,0, 11,4, 1,13, 3,8, -9,-6, -10,-12, -9,4, 4,5, -3,2, -7,-1, 9,1, -9,-8, -16,6, -14,1, 5,3, -1,0, -1,-6, 3,-4, -14,0, 10,8, -8,7, 3,10, -13,8, -6,6, 5,-9, 1,-12, 14,-3, 15,-8, -15,3, 3,7, 7,7, 3,4, 1,-7, 6,-11, 4,9, -1,5, 6,16, 1,13, 6,5, -6,0, -5,-9, -3,-14, -11,10, -15,7, -3,-2, 15,-8, -5,-4, 1,-3, 2,5, -13,-2, -13,-3, 9,2, 3,-6, -3,-9, -1,-1, 12,1, 4,-8, 9,-10, -9,-2, 3,2, -16,8, 2,11, 9,-4, 15,-6, -1,-13, 12,-9, 5,-5, 13,-3, -11,-9, 11,-3, -11,-6, 3,-1, 9,0, -4,-6, 6,0, -9,-15, -9,-12, 6,-9, 1,9, 6,9, 8,14, -7,2, 12,3, -7,-4, -7,-8, -2,-8, 3,-1, -1,-3, 5,-5, 3,-10, -2,-4, -5,-10, 10,-4, 6,-8, -8,9, -6,4, 7,13, 8,8, -9,2, 10,7, 2,11, -3,9, 2,-8, -2,-13, -4,-6, -9,-9, 8,13, 4,10, -1,-4, 9,-4, -1,2, 11,6, -9,2, 0,5, -4,-9, 15,-6, -15,5, -10,5, -14,1, -3,4, -5,-10, -10,-13, -13,5, -3,9, -7,-3, -2,-2, -2,-8, 4,-8, 0,2, -4,0, -2,-12, -7,-15, -12,9, 2,7, 8,-1, 14,-3, 6,-3, 11,-7, -4,-1, 8,1, 9,12, -14,1, 7,2, 12,2, 2,2, 7,1, 12,-1, -6,-9, 6,-1, -6,-8, -8,11, 6,10, 7,8, -4,2, -8,2, -12,-1, 7,-4, 2,-8, 4,9, 10,9, 2,14, -3,4, -9,-4, 10,0, 2,-3, -1,-9, -3,1, -12,-6, -11,-6, 15,-8, -13,-2, -6,-2, 2,-3, 6,-8, -11,3, -6,1, -13,-1, 1,1, 7,-5, -7,-15, -1,-4, -5,-7, 5,15, -8,7, 3,-6, 8,-6, -5,-9, 8,-5, -6,5, -1,7, 8,11, -10,4, 2,14, -11,9, 4,-1, 9,0, -2,-11, 7,-10, -7,4, 5,8, 0,-9, -5,-11, -11,-6, 8,1, -5,10, 0,10, -16,7, -11,4, -3,10, -8,8, -1,-6, 11,-8, -13,-2, 11,5, -8,-2, 9,3, -14,9, -8,10, -5,9, 7,13, 8,6, -13,-2, -2,-3, 3,-2, -15,5, -1,4, 4,6, -10,0, 10,8, -7,0, -12,2, 7,7, -1,-7, 12,-2, 6,16, 3,6, 14,-7, 9,-10, -3,-8, 2,-12, 11,5, 7,2, -9,1, -3,2, -1,7, 5,8, -15,9, -15,4, -4,6, -9,3, 2,9, -10,3, -2,4, 4,5, 3,15, 7,11, 5,1, -11,-9, 0,-1, -9,-14, 14,-5, 2,-10, -6,-7, -5,-12, 10,4, -12,-5, -6,8, 0,6, -10,-2, 12,3, -3,13, -12,5, -8,-11, -3,-11, -12,-6, -5,-5, -10,-11, -5,-14, -13,6, -8,3, -11,7, -15,4, -4,-6, 7,-6, 12,1, -10,-12, 1,4, -4,2, -11,-9, -8,-13, -11,-8, 1,-5, 6,11, 2,5, 3,1, -8,-6, -3,12, -1,6, 3,-2, -6,-6, -13,6, 5,12, -10,-12, 15,-8, -14,4, -7,4, 3,-1, 8,-1, 9,-8, -4,-13, 9,-3, -9,-11, 7,10, 3,7, -9,0, 8,6, -13,-3, 4,2, -8,1, 3,4, -4,7, 0,9, 3,-3, 15,-8, -4,-3, 11,1, -7,-8, -9,-14, 0,-3, 14,-3, 2,-11, 8,-10, -1,3, 5,5, -9,-7, 13,0, -3,-3, 2,-2, -9,8, -2,8, 3,15, -2,11, 7,16, -16,6, 2,-6, -9,-14, -1,0, 4,0, -1,13, -5,8, 5,11, -5,5, -10,11, -4,7, -7,-8, 12,-5, 7,0, -8,-6, -6,-1, -1,1, 8,-7, 1,-11, 1,-11, -4,-14, 1,-3, 6,-1, 3,2, 10,3, -5,-5, 6,-2, -4,12, 2,11, 9,-2, 14,-8, 11,-5, -3,-10, -2,-8, -9,-11, 1,11, 5,12, 5,-6, 8,-10, -4,-11, 1,-10, 2,-7, 2,-12, -6,-1, -10,-3,
        1,-8, 9,-5, 4,-2, -7,-12, 2,14, -2,8, -7,-12, -5,-17, -10,-8, 11,4, -6,-4, 6,2, -10,-3, -4,0, -18,5, -12,6, -9,10, -14,6, 8,-7, 13,-5, -13,7, -12,2, 1,13, 6,14, 10,-3, 11,-7, -6,1, -2,3, -5,12, -9,9, -4,8, 1,9, 1,-13, 5,-11, 4,6, 9,8, -14,-1, -9,-1, -6,-16, -1,-14, 8,0, 3,-4, 0,-6, 2,-10, -5,-6, 13,1, -10,3, -5,4, 9,7, -9,-4, 4,17, 5,12, -1,8, -5,3, 0,4, 5,6, -15,3, 7,11, -8,-10, -3,-9, -3,-7, 3,-7, 0,-1, -2,-6, 14,-2, -6,-16, 8,0, 12,3, 0,-2, 5,-1, -12,-3, 5,5, -8,4, -12,1, 12,2, 15,-2, -7,-4, -11,-7, -8,10, -2,8, -3,2, 2,3, 5,10, -10,-1, 14,-1, 11,-5, 8,4, 3,1, -1,-9, -3,-15, -12,8, -6,10, 11,-5, 7,-10, -6,4, 7,11, -3,-13, 3,-12, 0,15, -14,1, -6,11, -7,5, 4,-1, 10,-2, 9,-1, -1,-12, 6,4, -10,-7, -7,-8, 8,-1, -2,-4, -7,-8, -6,11, -2,14, -13,8, 4,16, -4,13, 1,14, 7,12, 4,7, -6,-10, 13,-6, -5,7, -9,3, -5,-1, 10,6, -2,13, 1,9, -7,-8, -7,-13, -10,3, 2,6, -3,2, -7,-3, 9,3, -7,-10, -17,3, -14,-2, 5,4, -1,0, 0,-6, 4,-3, -13,-3, 8,9, -10,5, 1,11, -15,5, -7,5, 7,-8, 3,-12, 14,0, 16,-4, -15,0, 1,8, 6,8, 2,5, 3,-7, 8,-9, 2,9, -2,5, 3,17, -2,13, 5,6, -6,-1, -3,-10, 0,-14, -13,8, -16,4, -2,-2, 16,-4, -4,-5, 2,-3, 1,5, -12,-5, -12,-6, 8,4, 4,-6, -1,-10, 0,-1, 12,3, 5,-7, 11,-7, -8,-4, 2,2, -18,5, -1,11, 10,-3, 15,-3, 2,-13, 14,-6, 6,-4, 13,-1, -9,-11, 12,0, -9,-8, 4,0, 8,1, -3,-6, 6,1, -5,-17, -6,-14, 8,-7, -1,9, 4,11, 5,16, -7,0, 11,5, -6,-6, -5,-10, 0,-8, 4,0, 0,-4, 6,-4, 6,-10, -1,-4, -3,-11, 10,-2, 7,-6, -10,7, -6,3, 5,14, 6,9, -9,0, 9,9, -1,11, -4,8, 3,-7, 1,-13, -3,-6, -7,-11, 5,15, 2,10, 0,-4, 9,-2, -1,2, 9,8, -9,0, -1,5, -2,-9, 15,-3, -16,1, -11,3, -14,-2, -4,3, -3,-11, -7,-14, -14,2, -4,8, -6,-5, -1,-2, 0,-8, 5,-7, 0,2, -4,-1, 0,-13, -4,-16, -14,6, 0,7, 8,1, 14,0, 7,-2, 12,-5, -3,-2, 8,2, 6,14, -14,-2, 6,4, 11,4, 1,2, 7,3, 12,1, -4,-11, 6,0, -4,-9, -10,9, 4,11, 5,9, -4,1, -8,0, -12,-3, 7,-3, 4,-7, 2,9, 7,11, -1,14, -4,3, -8,-6, 10,2, 3,-3, 1,-9, -3,1, -10,-8, -9,-8, 16,-4, -12,-5, -5,-3, 3,-3, 7,-6, -12,0, -6,0, -13,-4, 0,1, 8,-4, -4,-16, 0,-4, -4,-8, 1,16, -9,5, 4,-6, 9,-4, -3,-10, 9,-3, -7,4, -3,7, 6,12, -10,2, -1,14, -13,6, 4,0, 9,2, 1,-11, 9,-9, -7,3, 3,9, 1,-8, -2,-12, -9,-8, 8,2, -7,9, -2,10, -17,4, -11,2, -6,10, -9,6, 0,-6, 12,-6, -12,-5, 10,7, -7,-3, 8,4, -16,6, -10,8, -7,8, 5,14, 6,7, -12,-5, -2,-3, 3,-2, -16,1, -2,3, 3,6, -10,-2, 8,9, -7,-2, -13,0, 6,8, 0,-7, 13,0, 3,17, 2,7, 15,-4, 11,-7, -1,-9, 4,-11, 10,7, 6,4, -9,-1, -3,2, -3,7, 3,9, -17,5, -15,0, -5,5, -10,1, 0,9, -11,1, -3,4, 2,6, 0,15, 5,12, 5,2, -9,-11, 0,-1, -6,-15, 15,-2, 4,-9, -4,-8, -3,-13, 9,6, -11,-7, -7,6, -1,6, -9,-4, 11,5, -6,12, -13,2, -6,-12, 0,-12, -10,-8, -4,-6, -8,-13, -2,-15, -14,4, -9,1, -12,5, -15,0, -3,-6, 8,-4, 12,3, -7,-13, 0,4, -4,1, -9,-11, -5,-15, -9,-10, 2,-5, 3,12, 1,5, 3,2, -6,-7, -5,11, -2,6, 3,-2, -5,-7, -14,4, 3,13, -7,-13, 16,-4, -14,1, -7,3, 3,-1, 8,1, 10,-6, -1,-14, 10,-1, -6,-13, 5,11, 1,8, -9,-2, 6,7, -12,-6, 4,3, -8,-1, 2,5, -6,6, -1,8, 4,-2, 16,-4, -3,-4, 11,3, -5,-10, -6,-16, 1,-3, 14,0, 5,-10, 9,-8, -2,3, 4,6, -8,-9, 12,3, -2,-4, 2,-1, -10,6, -3,7, 0,15, -5,10, 4,17, -17,3, 3,-5, -6,-16, -1,0, 4,1, -4,13, -6,7, 2,12, -6,4, -12,8, -6,6, -5,-9, 13,-2, 7,2, -6,-7, -6,-2, -1,0, 9,-5, 4,-11, 3,-11, -1,-14, 2,-3, 6,0, 3,3, 9,5, -4,-6, 6,-1, -6,11, -1,11, 9,0, 16,-5, 12,-2, -1,-11, 0,-8, -6,-13, -2,11, 3,13, 6,-5, 9,-8, -2,-11, 3,-10, 4,-6, 4,-11, -6,-2, -10,-6,
        3,-8, 10,-3, 4,-2, -4,-13, -1,14, -4,7, -4,-13, -2,-18, -8,-10, 10,7, -5,-5, 5,3, -9,-5, -4,-1, -18,1, -13,3, -11,8, -15,3, 10,-5, 14,-2, -15,4, -12,0, -2,13, 3,15, 10,-1, 12,-5, -6,0, -2,2, -7,11, -10,7, -6,7, -1,9, 4,-13, 7,-10, 2,6, 8,10, -14,-4, -9,-2, -2,-17, 2,-14, 8,2, 4,-3, 1,-6, 4,-9, -3,-7, 13,4, -11,1, -6,3, 7,9, -8,-6, 0,18, 2,13, -2,7, -6,2, -1,4, 3,7, -16,-1, 4,12, -6,-12, -1,-9, -1,-8, 4,-6, 1,-1, -1,-6, 14,1, -2,-17, 8,2, 12,5, 1,-2, 6,0, -12,-5, 4,6, -9,3, -12,-1, 11,4, 15,1, -6,-5, -9,-9, -10,8, -4,7, -3,1, 1,3, 3,10, -9,-3, 14,2, 12,-3, 7,6, 3,1, 1,-9, 0,-15, -13,6, -7,8, 12,-3, 9,-8, -6,2, 5,12, 0,-13, 5,-12, -3,15, -14,-2, -9,10, -8,3, 4,0, 11,0, 9,1, 1,-12, 5,5, -8,-9, -5,-9, 8,0, -2,-4, -5,-9, -9,10, -5,13, -14,5, 1,17, -6,12, -1,14, 4,13, 3,8, -3,-11, 14,-4, -7,6, -9,1, -5,-2, 9,8, -4,12, -1,9, -5,-9, -4,-15, -10,1, 1,6, -3,1, -6,-4, 8,5, -5,-11, -17,-1, -13,-5, 4,5, -1,-1, 1,-6, 5,-2, -12,-6, 6,11, -10,3, -2,11, -15,2, -8,3, 8,-6, 6,-11, 14,3, 17,-1, -14,-3, 0,8, 4,9, 1,5, 4,-6, 10,-8, 0,9, -3,4, -1,17, -4,12, 3,7, -6,-3, -1,-11, 3,-14, -14,5, -16,0, -2,-3, 17,-1, -3,-6, 2,-2, 0,5, -11,-7, -10,-8, 7,5, 5,-5, 1,-10, 0,-1, 11,6, 7,-6, 12,-5, -7,-5, 2,3, -18,1, -3,11, 10,-1, 16,1, 4,-12, 15,-3, 6,-2, 13,2, -6,-12, 11,2, -8,-10, 4,1, 8,3, -2,-7, 6,3, -2,-18, -3,-15, 9,-5, -2,9, 2,11, 2,16, -7,-1, 10,7, -5,-7, -3,-10, 2,-8, 4,1, 1,-4, 6,-2, 7,-8, 0,-4, -1,-11, 11,0, 8,-5, -11,5, -7,2, 1,15, 4,10, -9,-2, 7,10, -3,11, -6,7, 5,-7, 4,-13, -2,-7, -4,-12, 2,15, 0,11, 1,-4, 9,0, -1,1, 8,10, -9,-2, -2,5, 0,-9, 16,1, -16,-2, -11,1, -13,-5, -5,2, -1,-11, -4,-15, -14,-1, -6,7, -5,-6, -1,-2, 2,-8, 7,-6, -1,2, -4,-2, 3,-12, 0,-16, -15,3, -1,7, 7,2, 14,3, 7,0, 13,-2, -3,-3, 7,4, 3,15, -13,-5, 5,5, 10,7, 1,2, 6,4, 12,4, -2,-11, 6,1, -2,-10, -12,7, 1,12, 3,10, -4,0, -8,-2, -11,-6, 8,-1, 5,-6, 0,9, 5,12, -4,14, -5,2, -7,-7, 9,4, 3,-2, 2,-9, -3,0, -8,-10, -8,-10, 17,-1, -11,-7, -4,-4, 3,-2, 8,-5, -11,-2, -6,-1, -12,-6, 0,1, 8,-2, 0,-16, 1,-4, -2,-8, -2,16, -10,3, 5,-5, 10,-2, -1,-11, 9,-1, -8,3, -4,6, 3,13, -11,0, -4,14, -14,4, 4,1, 9,4, 3,-11, 10,-7, -8,1, 1,9, 3,-8, 0,-12, -8,-10, 7,4, -9,7, -4,9, -18,0, -11,-1, -7,8, -10,4, 1,-6, 13,-3, -11,-7, 8,9, -7,-5, 7,6, -17,2, -12,6, -8,6, 1,15, 5,8, -11,-7, -1,-3, 3,-1, -16,-2, -3,3, 2,7, -9,-4, 6,11, -7,-3, -12,-3, 4,9, 2,-6, 12,3, -1,17, 0,7, 16,-1, 12,-5, 1,-9, 7,-10, 8,9, 5,5, -9,-2, -3,1, -4,6, 1,9, -18,2, -15,-3, -6,4, -10,-1, -2,9, -11,-2, -4,3, 1,6, -3,14, 2,13, 4,3, -6,-12, 1,-1, -3,-16, 15,1, 6,-8, -3,-9, 0,-13, 8,8, -9,-9, -8,5, -3,6, -8,-6, 10,7, -8,10, -13,-1, -3,-13, 2,-11, -8,-10, -2,-6, -5,-14, 1,-15, -14,1, -9,-1, -13,2, -15,-3, -2,-7, 9,-3, 11,6, -4,-15, -1,4, -4,0, -6,-12, -2,-15, -7,-12, 3,-4, 1,13, 0,5, 2,2, -5,-8, -7,10, -3,5, 3,-1, -3,-8, -14,1, 0,13, -4,-15, 17,-1, -14,-2, -8,1, 3,0, 7,2, 11,-3, 1,-14, 10,1, -4,-14, 3,12, 0,8, -9,-4, 5,8, -10,-8, 3,4, -7,-2, 1,5, -7,5, -3,8, 4,-2, 17,-1, -2,-5, 10,5, -3,-10, -2,-17, 1,-3, 14,3, 7,-9, 11,-6, -2,2, 2,6, -5,-10, 12,5, -2,-4, 2,-1, -11,3, -5,7, -3,14, -7,9, 0,18, -17,-1, 4,-4, -2,-17, -1,-1, 4,2, -6,12, -8,5, 0,12, -6,2, -13,6, -7,5, -3,-10, 13,1, 7,3, -5,-8, -5,-3, -1,0, 10,-3, 6,-10, 5,-10, 2,-14, 2,-2, 6,1, 2,3, 7,7, -2,-6, 6,0, -9,10, -3,11, 9,2, 16,-2, 12,0, 2,-11, 2,-8, -4,-14, -4,10, 0,13, 7,-3, 11,-6, 1,-11, 5,-9, 5,-5, 7,-10, -5,-3, -8,-7,
        5,-7, 10,-1, 4,-1, -1,-14, -4,14, -5,6, -1,-14, 2,-18, -6,-12, 9,9, -3,-6, 4,4, -7,-7, -4,-2, -18,-3, -14,0, -12,5, -15,0, 10,-3, 14,1, -15,1, -12,-3, -5,12, 0,15, 10,2, 13,-2, -6,-2, -2,2, -9,9, -11,5, -7,5, -3,8, 6,-12, 9,-8, 1,7, 5,11, -12,-7, -8,-4, 1,-17, 5,-14, 7,3, 5,-2, 2,-5, 6,-8, -2,-7, 12,6, -11,-1, -6,2, 5,10, -7,-8, -3,17, -1,13, -4,7, -6,1, -2,4, 2,7, -15,-4, 2,12, -3,-13, 1,-9, 1,-8, 5,-5, 1,-1, 0,-6, 14,4, 1,-17, 7,3, 10,7, 1,-2, 6,1, -10,-7, 2,7, -9,1, -12,-4, 10,7, 14,4, -5,-6, -7,-11, -12,6, -5,6, -4,0, 0,4, 0,11, -9,-5, 14,5, 12,0, 5,7, 3,2, 3,-8, 3,-15, -14,3, -9,6, 12,0, 10,-6, -7,1, 2,13, 3,-13, 7,-10, -6,14, -14,-5, -11,8, -9,1, 4,1, 10,2, 8,3, 4,-12, 3,6, -6,-10, -3,-10, 8,2, -1,-4, -3,-10, -11,8, -8,12, -15,2, -3,17, -9,10, -4,13, 1,14, 1,8, -1,-12, 14,-1, -8,4, -9,-1, -5,-3, 7,10, -7,11, -3,8, -3,-10, -1,-15, -10,-2, 0,6, -4,0, -5,-5, 7,6, -2,-12, -17,-4, -12,-8, 3,5, -1,-1, 2,-5, 5,-1, -11,-8, 4,12, -11,0, -4,10, -16,-1, -9,1, 9,-4, 8,-9, 13,6, 17,3, -13,-6, -2,8, 2,10, 0,5, 5,-5, 11,-5, -2,9, -3,4, -4,17, -7,11, 2,7, -5,-4, 1,-11, 6,-13, -15,2, -16,-3, -1,-3, 17,3, -2,-6, 2,-2, -1,5, -9,-9, -8,-10, 6,7, 6,-3, 3,-10, 0,-1, 9,8, 8,-4, 13,-2, -6,-7, 1,3, -18,-3, -5,10, 10,2, 15,4, 7,-11, 15,0, 7,-1, 12,5, -4,-13, 11,5, -5,-11, 3,1, 7,5, 0,-7, 5,4, 2,-18, 0,-15, 10,-3, -4,8, 0,11, -2,16, -7,-3, 8,9, -3,-8, 0,-11, 3,-7, 3,1, 1,-3, 7,-1, 9,-6, 1,-4, 2,-11, 10,2, 9,-3, -12,2, -7,0, -2,15, 2,11, -9,-4, 5,11, -5,10, -7,5, 6,-6, 6,-12, 0,-7, -2,-12, -1,16, -2,10, 2,-4, 9,2, -2,1, 5,11, -9,-4, -3,5, 2,-9, 15,4, -15,-5, -11,-2, -12,-8, -5,1, 2,-11, 0,-16, -14,-4, -7,5, -4,-7, 0,-2, 3,-7, 8,-4, -1,2, -3,-3, 5,-11, 3,-16, -15,0, -3,7, 7,4, 13,6, 7,1, 13,1, -2,-3, 6,5, 0,15, -12,-8, 4,6, 9,9, 0,2, 5,5, 11,6, 0,-11, 5,2, 0,-10, -13,4, -1,12, 1,10, -4,-1, -7,-3, -9,-8, 8,1, 6,-5, -2,9, 2,13, -7,12, -5,1, -5,-9, 8,6, 4,-2, 4,-8, -3,0, -6,-12, -5,-11, 17,3, -9,-9, -4,-5, 4,-2, 9,-3, -11,-5, -5,-2, -10,-9, 0,1, 9,0, 3,-16, 2,-4, 0,-9, -5,15, -10,1, 6,-3, 10,0, 1,-11, 9,1, -8,1, -5,5, 0,14, -10,-2, -7,12, -14,1, 4,2, 8,6, 5,-10, 11,-5, -8,-1, -1,9, 5,-7, 3,-12, -5,-11, 6,5, -10,5, -6,8, -17,-3, -11,-3, -9,6, -11,2, 2,-5, 14,0, -9,-9, 6,10, -6,-6, 5,7, -17,-1, -13,3, -9,4, -2,15, 3,9, -9,-9, 0,-4, 4,0, -15,-5, -3,2, 0,7, -8,-6, 4,12, -6,-4, -11,-5, 2,10, 3,-6, 11,5, -4,17, -1,7, 15,2, 13,-2, 3,-8, 9,-9, 6,10, 4,6, -8,-4, -4,0, -5,5, -1,9, -18,-2, -14,-6, -7,2, -10,-3, -4,9, -10,-4, -5,2, 0,6, -6,13, -1,13, 4,3, -4,-13, 1,-1, 0,-16, 14,4, 8,-7, -1,-9, 3,-13, 6,9, -7,-11, -9,3, -4,5, -7,-8, 8,9, -10,8, -12,-3, 0,-14, 5,-11, -6,-12, -1,-7, -2,-15, 4,-14, -14,-2, -8,-3, -13,-1, -14,-6, 0,-7, 9,-1, 9,8, -1,-15, -2,4, -4,-1, -4,-13, 1,-16, -4,-13, 3,-4, -2,13, -1,5, 2,2, -3,-9, -9,8, -4,4, 4,0, -1,-9, -14,-2, -3,13, -1,-15, 17,3, -14,-5, -8,-1, 3,0, 7,4, 12,-1, 4,-13, 10,3, -1,-14, 0,12, -2,8, -8,-6, 3,9, -8,-10, 2,5, -7,-4, 0,5, -8,3, -5,7, 4,-1, 17,3, -1,-5, 9,7, 0,-11, 1,-17, 2,-3, 13,6, 8,-7, 12,-4, -2,2, 1,7, -3,-11, 10,7, -1,-4, 2,0, -12,1, -6,6, -6,13, -8,7, -3,17, -17,-4, 5,-4, 1,-17, -1,-1, 3,3, -9,10, -8,4, -3,12, -7,1, -14,3, -8,3, -1,-10, 12,3, 6,4, -3,-9, -4,-4, -1,0, 10,-1, 8,-8, 7,-9, 5,-14, 2,-2, 5,2, 2,4, 6,8, -1,-7, 6,2, -11,8, -5,10, 9,4, 16,2, 12,3, 4,-10, 3,-7, -1,-14, -6,9, -3,13, 7,-2, 12,-4, 3,-11, 7,-7, 6,-4, 9,-9, -4,-4, -6,-9,
        6,-6, 10,1, 4,0, 2,-14, -6,13, -6,5, 2,-14, 6,-17, -3,-13, 7,10, -2,-7, 3,5, -6,-8, -3,-3, -17,-7, -13,-3, -13,3, -15,-3, 11,0, 14,4, -15,-2, -11,-5, -7,11, -3,15, 9,4, 13,1, -6,-3, -3,1, -11,7, -12,2, -8,4, -4,7, 9,-10, 11,-6, 0,7, 3,12, -11,-9, -7,-6, 5,-16, 8,-12, 7,5, 5,-1, 3,-5, 8,-7, 0,-8, 10,9, -10,-3, -6,1, 3,11, -5,-9, -7,16, -3,12, -5,6, -6,-1, -3,3, 0,8, -14,-7, -1,12, 0,-13, 3,-9, 2,-8, 6,-4, 1,0, 2,-6, 13,6, 5,-16, 7,5, 9,9, 1,-2, 5,2, -9,-9, 1,7, -9,-1, -10,-6, 8,8, 13,7, -3,-7, -4,-12, -13,3, -6,5, -4,-1, -1,4, -2,11, -7,-7, 12,8, 12,2, 4,8, 2,2, 4,-7, 6,-14, -14,0, -10,4, 12,2, 11,-4, -7,0, -1,13, 5,-12, 9,-9, -9,13, -12,-8, -12,5, -9,0, 4,2, 10,4, 7,4, 6,-10, 2,7, -4,-11, -1,-10, 7,3, 0,-4, -1,-10, -12,5, -10,10, -15,-1, -6,16, -11,8, -7,12, -2,14, -1,8, 1,-12, 14,2, -9,3, -9,-3, -4,-4, 5,11, -9,9, -4,7, -1,-10, 2,-15, -9,-4, -2,6, -4,-1, -4,-6, 5,7, 0,-12, -15,-7, -10,-10, 2,6, 0,-1, 3,-5, 5,0, -9,-10, 1,13, -11,-2, -6,9, -15,-4, -9,0, 10,-2, 10,-8, 11,8, 16,6, -12,-9, -3,7, 0,10, -1,5, 6,-4, 12,-3, -4,8, -4,3, -7,15, -9,9, 0,8, -4,-5, 3,-10, 8,-11, -15,-1, -15,-6, 0,-3, 16,6, -1,-6, 3,-1, -2,4, -7,-11, -6,-11, 5,8, 7,-2, 5,-9, 1,-1, 8,10, 9,-3, 13,1, -5,-8, 0,3, -17,-7, -7,9, 9,4, 14,7, 9,-9, 15,3, 7,0, 11,7, -1,-14, 10,7, -3,-12, 3,2, 6,6, 1,-7, 4,5, 6,-17, 3,-15, 10,-1, -6,7, -3,11, -5,15, -6,-4, 6,11, -1,-8, 2,-11, 5,-7, 3,2, 2,-3, 7,0, 10,-4, 2,-4, 4,-11, 10,4, 9,-1, -12,0, -7,-1, -5,14, -1,11, -8,-5, 2,12, -7,9, -8,4, 7,-4, 9,-10, 1,-7, 1,-12, -4,15, -4,10, 3,-3, 8,4, -2,1, 3,12, -8,-5, -4,4, 4,-8, 14,7, -14,-8, -11,-4, -10,-10, -5,0, 4,-11, 3,-16, -13,-6, -8,4, -2,-8, 0,-2, 5,-7, 9,-3, -1,2, -3,-3, 8,-10, 6,-15, -15,-3, -4,6, 6,5, 11,8, 7,3, 12,3, -2,-4, 5,6, -3,15, -10,-10, 3,6, 7,10, 0,2, 4,6, 9,8, 3,-11, 5,3, 2,-10, -14,2, -4,11, -1,10, -4,-2, -7,-5, -8,-10, 8,2, 7,-3, -4,8, -1,13, -9,11, -5,0, -3,-10, 7,8, 4,-1, 6,-7, -3,-1, -3,-13, -3,-12, 16,6, -7,-11, -2,-5, 4,-1, 9,-1, -10,-7, -5,-3, -8,-11, -1,1, 8,2, 6,-15, 3,-3, 2,-8, -8,14, -10,-1, 7,-2, 10,2, 3,-10, 9,3, -8,-1, -6,4, -3,13, -10,-4, -9,11, -14,-2, 3,3, 6,7, 7,-9, 12,-2, -8,-2, -3,9, 6,-6, 5,-11, -3,-12, 5,6, -11,3, -8,7, -16,-7, -10,-5, -10,4, -11,-1, 3,-5, 13,3, -7,-11, 4,11, -4,-7, 4,8, -16,-5, -13,0, -10,2, -5,14, 1,9, -7,-11, 1,-4, 4,1, -14,-8, -4,2, -1,7, -7,-8, 1,13, -5,-6, -10,-8, 0,10, 4,-5, 10,8, -7,15, -3,7, 15,6, 13,1, 4,-7, 10,-7, 4,11, 3,6, -7,-6, -4,-1, -6,4, -3,9, -17,-6, -13,-9, -7,1, -9,-5, -5,8, -9,-6, -5,1, -2,6, -9,12, -3,12, 3,4, -1,-14, 1,0, 4,-16, 13,7, 9,-5, 1,-9, 5,-12, 4,10, -4,-12, -9,1, -5,4, -5,-9, 6,11, -11,6, -11,-6, 3,-13, 7,-10, -3,-13, 0,-7, 1,-15, 7,-13, -13,-5, -7,-4, -12,-3, -13,-9, 1,-7, 9,1, 8,10, 2,-15, -3,3, -4,-2, -1,-14, 4,-15, -2,-14, 4,-3, -5,12, -2,4, 1,3, -1,-9, -11,6, -5,3, 4,1, 0,-9, -13,-5, -5,12, 2,-15, 16,6, -12,-8, -8,-2, 3,1, 6,5, 12,1, 7,-12, 9,5, 2,-14, -2,12, -3,7, -6,-7, 1,9, -6,-11, 1,5, -6,-5, -1,5, -8,1, -6,6, 4,0, 16,6, 0,-5, 7,9, 2,-11, 5,-16, 2,-2, 11,8, 10,-5, 13,-1, -3,1, 0,7, -1,-12, 9,9, 0,-4, 2,0, -12,-1, -7,4, -9,12, -10,5, -7,16, -15,-7, 5,-2, 5,-16, 0,-1, 3,3, -11,8, -9,2, -5,11, -7,0, -14,0, -8,1, 1,-10, 11,6, 5,6, -1,-9, -3,-5, -1,-1, 10,1, 9,-6, 9,-7, 8,-12, 3,-1, 5,3, 1,4, 4,9, 0,-7, 6,3, -12,5, -7,9, 8,5, 15,5, 11,5, 6,-9, 5,-7, 2,-14, -8,8, -5,12, 8,0, 13,-1, 5,-10, 8,-6, 6,-3, 10,-7, -3,-5, -4,-10,
        7,-5, 10,3, 4,1, 4,-13, -9,11, -7,4, 4,-13, 9,-15, -1,-13, 4,11, 0,-7, 2,6, -4,-9, -3,-3, -15,-10, -12,-6, -13,0, -14,-6, 11,2, 13,7, -14,-5, -10,-7, -9,9, -6,14, 8,5, 13,3, -5,-4, -3,1, -12,5, -12,0, -9,2, -6,6, 10,-8, 12,-3, -2,6, 1,12, -9,-11, -6,-7, 8,-15, 10,-10, 5,6, 5,0, 4,-4, 9,-5, 1,-7, 8,10, -9,-5, -6,-1, 0,11, -3,-10, -10,14, -6,11, -6,4, -6,-2, -3,3, -1,7, -12,-10, -4,12, 2,-13, 4,-8, 4,-7, 7,-2, 1,0, 3,-6, 11,9, 8,-15, 5,6, 6,11, 2,-1, 5,3, -6,-11, -1,7, -9,-3, -9,-8, 6,10, 11,10, -2,-8, -2,-13, -13,1, -7,4, -3,-1, -1,3, -4,10, -6,-8, 10,10, 11,5, 2,9, 2,3, 6,-6, 9,-12, -14,-3, -11,2, 11,5, 12,-2, -6,-2, -3,13, 8,-11, 11,-6, -11,11, -10,-10, -13,3, -9,-2, 4,2, 9,6, 6,6, 8,-9, 0,7, -2,-12, 1,-10, 6,5, 1,-4, 1,-10, -13,3, -12,8, -14,-4, -9,14, -12,6, -9,10, -4,13, -2,8, 4,-11, 13,5, -9,1, -8,-4, -3,-4, 2,12, -11,7, -6,6, 1,-10, 5,-14, -8,-5, -3,6, -3,-1, -2,-7, 4,8, 3,-12, -13,-10, -8,-12, 0,6, 0,-1, 4,-4, 5,1, -7,-12, -1,13, -10,-4, -8,8, -14,-7, -9,-2, 10,0, 11,-5, 9,10, 14,9, -10,-11, -5,6, -2,10, -2,5, 7,-2, 12,-1, -6,7, -5,2, -10,13, -11,7, -1,7, -3,-5, 5,-9, 10,-9, -14,-4, -13,-9, 0,-3, 14,9, 1,-6, 3,-1, -3,4, -5,-12, -4,-13, 3,9, 7,0, 7,-8, 1,-1, 5,11, 9,-1, 13,3, -3,-9, 0,3, -15,-10, -9,7, 8,5, 12,10, 11,-7, 14,6, 6,2, 9,9, 2,-14, 8,9, -1,-12, 3,3, 5,7, 3,-7, 3,5, 9,-15, 6,-14, 10,1, -7,6, -5,10, -8,14, -5,-5, 3,12, 0,-8, 4,-10, 6,-5, 3,3, 3,-3, 6,2, 11,-2, 2,-4, 6,-9, 9,6, 9,1, -12,-3, -7,-3, -7,13, -3,11, -7,-7, 0,12, -9,7, -9,2, 8,-3, 10,-8, 3,-7, 4,-12, -7,14, -6,9, 3,-3, 7,6, -2,0, 1,12, -7,-7, -4,3, 6,-7, 12,10, -12,-11, -9,-6, -8,-12, -5,-1, 6,-9, 6,-15, -11,-9, -9,2, -1,-8, 1,-2, 6,-5, 9,-1, -2,1, -2,-4, 10,-8, 9,-13, -14,-6, -5,5, 4,6, 9,10, 6,4, 11,6, -1,-4, 4,7, -6,14, -8,-12, 1,7, 4,11, -1,2, 2,7, 7,10, 5,-10, 4,4, 4,-9, -14,-1, -6,10, -3,10, -4,-2, -5,-6, -5,-11, 7,4, 8,-2, -6,7, -3,13, -11,9, -5,-1, -1,-10, 5,9, 4,0, 7,-6, -2,-2, -1,-13, -1,-12, 14,9, -5,-12, -1,-6, 4,0, 9,1, -8,-9, -4,-4, -6,-12, -1,1, 8,3, 9,-13, 3,-3, 3,-8, -11,12, -10,-3, 7,0, 9,4, 5,-9, 8,4, -8,-2, -7,2, -6,12, -9,-6, -11,9, -13,-5, 3,3, 5,8, 9,-7, 12,0, -7,-4, -4,8, 7,-5, 7,-10, -1,-12, 4,7, -11,0, -9,5, -14,-10, -9,-7, -11,2, -11,-3, 4,-4, 12,6, -5,-12, 2,12, -3,-8, 2,9, -15,-8, -13,-2, -10,0, -7,13, -1,9, -5,-12, 1,-3, 3,1, -12,-11, -4,1, -3,7, -5,-9, -1,13, -3,-6, -8,-10, -2,10, 5,-4, 8,10, -10,13, -4,6, 13,8, 13,3, 6,-6, 11,-4, 2,12, 1,7, -6,-7, -3,-1, -7,2, -4,8, -15,-9, -11,-11, -7,-1, -8,-7, -7,7, -8,-8, -5,0, -3,6, -11,10, -6,11, 2,5, 2,-14, 1,0, 7,-15, 11,10, 10,-3, 3,-9, 8,-11, 1,11, -2,-13, -9,-1, -5,3, -3,-10, 3,12, -13,4, -10,-8, 6,-12, 9,-8, -1,-13, 2,-6, 4,-14, 10,-11, -12,-8, -6,-6, -11,-6, -11,-11, 3,-7, 9,3, 5,11, 5,-14, -3,3, -4,-2, 2,-14, 7,-14, 1,-14, 5,-2, -7,11, -3,4, 1,3, 1,-9, -12,3, -6,2, 3,1, 2,-9, -12,-8, -8,11, 5,-14, 14,9, -10,-10, -7,-4, 2,2, 4,6, 11,4, 9,-10, 8,7, 5,-13, -5,11, -5,6, -5,-8, -1,9, -4,-13, 0,5, -4,-6, -2,5, -8,0, -7,5, 4,1, 14,9, 1,-5, 5,10, 4,-10, 8,-15, 3,-2, 9,10, 11,-3, 13,1, -3,1, -2,6, 2,-12, 6,11, 1,-4, 2,1, -11,-4, -8,3, -11,10, -11,3, -10,14, -13,-10, 6,-1, 8,-15, 0,-1, 2,4, -12,6, -9,0, -7,10, -6,-2, -14,-3, -8,0, 3,-10, 10,8, 3,6, 1,-9, -2,-6, -1,-1, 10,3, 10,-4, 10,-5, 10,-10, 3,-1, 4,4, 0,4, 2,10, 2,-6, 5,4, -13,3, -9,7, 7,7, 14,8, 10,7, 8,-8, 6,-5, 5,-13, -9,6, -8,11, 7,1, 13,1, 7,-9, 9,-4, 7,-1, 11,-4, -2,-6, -2,-11,
    };

    signed char bit_pattern_15_rotated[PREROTATED_PATTERN_SIZE] = {
        3,-4, -7,4, -1,4, 4,-5, 7,3, -7,-3, -5,-7, 5,3, -2,2, 0,-2, -4,6, 1,-2, -6,-1, -4,-5, 0,6, 6,-2, 4,2, -3,4, -1,-7, 3,-6, 7,4, -3,4, -1,4, -3,-4, 7,-6, 7,3, 3,7, 0,-2, -4,-6, 1,7, 3,2, -5,4, 1,5, 6,5, 3,6, 2,-5, -3,-5, -6,2, 2,5, 4,-7, 1,5, -6,1, -7,4, -3,6, -2,-7, 1,-2, 6,-3, 0,6, 3,7, 3,-1, -3,2, 2,0, -3,-5, 1,-5, -7,-6, 7,2, -6,6, 5,2, -2,-3, -6,-4, 1,3, -2,-3, -4,6, 1,7, 7,1, 6,2, 3,3, 6,-1, -3,3, -7,-1, -4,2, 2,-5, 6,-7, -4,4, -5,0, -3,4, -5,-2, 0,-2, -6,1, -5,-5, 1,7, -4,3, 2,3, -4,0, 4,-2, 3,-1, 0,-2, 4,-6, -4,7, 2,2, -5,6, -7,0, -4,-3, -7,-1, -7,-7, 2,-4, 0,-6, -6,-4, -3,-6, 3,6, 5,-6, -1,-4, 6,5, -5,7, -6,-6, 4,2, -2,7, 3,-5, -6,-2, 5,1, 4,4, 2,1, -5,-3, 4,5, 4,6, 0,-4, -7,-5, -2,2, 2,-7, 1,6, 0,6, 1,-3, 7,-2, 6,-2, 5,5, -3,-5, 7,-6, 4,3, 2,0, -2,6, -2,-5, 5,0, 6,5, 5,-4, 1,0, -7,-5, 5,3, 7,6, 0,7, 7,-3, 3,5, 7,0, -6,3, -4,0, -2,-3, -2,-5, 3,7, 6,-6, -5,6, 2,4, -7,5, 0,-4, -3,5, -3,-5, 2,-5, 1,-7, 4,-2, 4,-3, 5,3, 2,4, -1,-6, -4,-2, -5,-7, 7,-6, -7,7, 0,6, -3,6, 0,-3, -1,2, -6,1, -2,-1, 0,-4, 6,4, -1,-3, 3,-4, -4,-2, 7,-7, -1,-5, -3,-7, -7,-6, 0,4, -4,4, -6,-4, -7,-4, -3,-3, 6,1, -4,3, -1,5, 3,4, 5,-6, -6,4, 3,1, -1,-7, 0,3, -4,-7, -3,4, 3,6, -7,-2, -5,2, -4,3, -7,-1, 4,-3, -2,5, -1,0, 3,7, 5,7, -3,4, -1,-6, 3,3, 6,5, 4,3, 5,-6, 0,5, 4,3, -5,-5, 2,7, -1,6, 3,-6, 1,3, 1,-5, 4,2, -6,-6, 5,7, -5,6, -6,0, -6,6, 5,-3, 5,6, 3,2, 3,-1, -2,7, -6,2, -3,-6, 5,1, 5,-4, 0,-7, 7,-6, -2,1, -2,4, 2,-2, -7,5, -1,0, -1,2, 3,1, -5,-7, -4,5, 3,-2, 3,1, -7,-7, -6,-4, -3,-6, 2,-5, 0,7, 7,-2, -6,4, 0,-4, 1,7, 5,-1, 3,-4, 1,-6, -6,-3, -3,5, 0,0, -3,2, -4,-3, -5,-7, 0,5, 6,2, -4,-6, -7,-1, 2,7, -6,-7, 6,-1, 4,3, 4,3, 7,-3, -6,-7, -6,3, 7,6, -6,-3, -6,-1, -2,-6, 4,-6, 2,4, 6,-7, -7,-3, -7,5, -1,-2, -3,-5, -4,0, -3,-4, -3,-6, 0,1, -5,-6, -4,-7, 3,1, -7,-5, -2,-4, 0,-2, -6,-1, 7,-2, 6,-1, 3,-2, -5,-4, -5,-1, 0,2, -6,-7, -6,-4, 5,-2, -5,-1, 6,-5, 2,3, -1,5, -2,-4, 0,-2, 2,4, -7,-6, -1,-4, 1,7, 6,0, 4,-7, -5,4, 7,3, -4,3, -7,7, -5,3, -3,-3, -2,-6, 2,-4, 6,6, 3,7, 3,-7, 0,-5, 5,5, -6,-6, -3,1, -5,-1, -3,-5, 4,0, 0,-2, 1,2, -4,1, 7,0, -5,-1, -2,2, -4,6, 7,-6, 6,5, 2,-7, -4,6, 3,-7, -3,3, -5,5, -2,4, 2,7, 7,-4, -6,-5, 7,-7, 2,3, 3,-6, 0,1, 4,-3, -1,4, -1,7, 5,-2, -6,-7, -2,-5, 2,3, 5,2, 2,2, -5,7, 1,1, 2,0, -4,-2, -7,-4, -7,-7, 1,3, -4,1, 2,2, -7,2, -7,6, -1,1, 6,-1, 0,-4, -4,-4, -6,-1, -7,1, -1,1, -2,7, 4,7, 2,1, 5,-1, 6,-7, -2,-1, -4,-5, 2,1, -6,-5, -3,3, 4,-2, -4,1, -3,3, -5,4, -5,1, 2,-7, 2,-4, -7,3, -7,7, -6,-3, 1,-3, -3,6, -6,-4, -7,4, -4,3, -6,1, 0,-5, 2,5, -3,-3, 6,-5, -1,5, 4,2, -1,-4, 3,-6, 7,2, -5,6, -7,-5, 1,7, 0,-7, 7,3, 4,6, 7,0, 2,2, -4,4, -2,-1, -1,5, 6,4, 0,-4, 1,-7, -5,-3, 7,3, -7,-2, -6,0, -2,3, -7,4, 4,3, -2,3, 4,-5, -2,-4, 6,6, 4,6, -2,0, -5,1, 1,-6, -6,-7, 3,1, -4,-4, 4,4, 2,0, 2,5, 7,0, 0,-5, -4,-7, 3,7, 6,5, 3,5, 4,4, 7,-3, 6,-7, -6,2, 5,3, 3,6, 6,-2, 5,-4, 0,-6, 5,6, 0,2, 3,-1, 7,3, 0,6, -1,-1, -4,-5, 6,2, 4,3, -1,4, 7,2, 7,4, -3,5, 4,-6, -3,-1, 5,-3, -2,7, 6,1, -2,0, 7,-7, -7,5, -4,-4, 2,-4, -6,-3, -4,-6, -6,3, 0,1, 3,4, -6,-5, 3,-4, -2,-2, 5,1, -6,-2, -5,-6, 7,3, 6,-7, 2,6, 4,2, 3,-2,
        4,-3, -8,2, -2,4, 5,-4, 6,4, -6,-4, -3,-8, 4,4, -2,2, 0,-2, -5,5, 1,-2, -6,-2, -3,-6, -1,6, 6,-1, 3,3, -4,3, 0,-7, 4,-5, 6,5, -4,3, -2,4, -2,-5, 8,-4, 6,4, 1,7, 0,-2, -3,-7, 0,7, 3,3, -6,3, 0,5, 5,6, 2,6, 3,-4, -2,-6, -6,1, 1,5, 5,-6, 0,5, -6,0, -8,2, -4,5, -1,-7, 1,-2, 6,-2, -1,6, 1,7, 3,0, -3,1, 2,0, -2,-6, 2,-5, -6,-7, 6,3, -7,5, 4,3, -1,-3, -5,-5, 0,3, -1,-3, -5,5, 0,7, 7,2, 5,3, 2,4, 6,0, -4,2, -7,-2, -4,1, 3,-4, 7,-6, -5,3, -5,-1, -4,3, -4,-3, 0,-2, -6,0, -4,-6, 0,7, -5,2, 1,3, -4,-1, 4,-1, 3,0, 0,-2, 5,-5, -5,6, 2,2, -6,5, -7,-1, -3,-4, -7,-2, -5,-8, 3,-3, 1,-6, -5,-5, -2,-6, 2,6, 6,-5, 0,-4, 5,6, -6,6, -5,-7, 3,3, -3,6, 4,-4, -5,-3, 5,2, 3,5, 2,1, -4,-4, 3,6, 3,7, 1,-4, -6,-6, -2,2, 3,-6, 0,6, -1,6, 2,-3, 7,-1, 6,-1, 4,6, -2,-6, 8,-4, 3,4, 2,0, -3,5, -1,-5, 5,1, 5,6, 6,-3, 1,0, -6,-6, 4,4, 6,7, -1,7, 7,-1, 2,6, 7,1, -6,2, -4,-1, -1,-3, -1,-5, 1,7, 7,-5, -6,5, 1,4, -8,3, 1,-4, -4,4, -2,-6, 3,-4, 2,-7, 4,-1, 5,-2, 4,4, 1,4, 0,-6, -3,-3, -3,-8, 8,-4, -8,5, -1,6, -4,5, 1,-3, -1,2, -6,0, -2,-1, 1,-4, 5,5, 0,-3, 4,-3, -3,-3, 8,-5, 0,-5, -1,-7, -6,-7, -1,4, -5,3, -5,-5, -6,-5, -2,-4, 6,2, -5,2, -2,5, 2,5, 6,-5, -7,3, 3,2, 0,-7, -1,3, -2,-8, -4,3, 2,6, -6,-3, -5,1, -5,2, -7,-2, 5,-2, -3,4, -1,0, 1,7, 3,8, -4,3, 0,-6, 2,4, 5,6, 3,4, 6,-5, -1,5, 3,4, -4,-6, 1,7, -2,6, 4,-5, 0,3, 2,-5, 3,3, -5,-7, 3,8, -6,5, -6,-1, -7,5, 6,-2, 4,7, 3,3, 3,0, -3,6, -6,1, -2,-6, 5,2, 6,-3, 1,-7, 8,-4, -2,1, -3,3, 2,-2, -8,3, -1,0, -1,2, 3,2, -3,-8, -5,4, 3,-1, 3,2, -5,-8, -5,-5, -2,-6, 3,-4, -1,7, 7,-1, -7,3, 1,-4, 0,7, 5,0, 4,-3, 2,-6, -5,-4, -4,4, 0,0, -3,1, -3,-4, -3,-8, -1,5, 5,3, -3,-7, -7,-2, 1,7, -4,-8, 6,0, 3,4, 3,4, 7,-1, -4,-8, -6,2, 6,7, -5,-4, -6,-2, -1,-6, 5,-5, 1,4, 7,-6, -6,-4, -8,3, -1,-2, -2,-6, -4,-1, -2,-5, -2,-6, 0,1, -4,-7, -2,-8, 3,2, -6,-6, -1,-4, 0,-2, -6,-2, 7,-1, 6,0, 3,-1, -4,-5, -5,-2, 0,2, -4,-8, -5,-5, 5,-1, -5,-2, 7,-4, 1,3, -2,5, -1,-4, 0,-2, 1,4, -6,-7, 0,-4, 0,7, 6,1, 5,-6, -6,3, 6,4, -5,2, -8,5, -6,2, -2,-4, -1,-6, 3,-3, 5,7, 1,7, 4,-6, 1,-5, 4,6, -5,-7, -3,0, -5,-2, -2,-6, 4,1, 0,-2, 1,2, -4,0, 7,1, -5,-2, -2,2, -5,5, 8,-4, 5,6, 3,-6, -5,5, 4,-6, -4,2, -6,4, -3,3, 1,7, 8,-2, -5,-6, 8,-5, 1,3, 4,-5, 0,1, 5,-2, -2,4, -2,7, 5,-1, -4,-8, -1,-5, 1,3, 4,3, 2,2, -6,6, 1,1, 2,0, -3,-3, -6,-5, -5,-8, 0,3, -4,0, 2,2, -7,1, -8,4, -1,1, 6,0, 1,-4, -3,-5, -6,-2, -7,0, -1,1, -3,6, 2,8, 2,1, 5,0, 7,-6, -2,-1, -3,-6, 2,1, -5,-6, -4,2, 4,-1, -4,0, -4,2, -6,3, -5,0, 3,-6, 3,-3, -7,1, -8,5, -5,-4, 2,-3, -4,5, -5,-5, -8,2, -5,2, -6,0, 1,-5, 1,5, -2,-4, 7,-4, -2,5, 3,3, 0,-4, 4,-5, 6,3, -6,5, -6,-6, 0,7, 1,-7, 6,4, 3,7, 7,1, 2,2, -5,3, -2,-1, -2,5, 5,5, 1,-4, 2,-7, -4,-4, 6,4, -6,-3, -6,-1, -3,3, -8,2, 3,4, -3,3, 5,-4, -1,-4, 5,7, 3,7, -2,0, -5,0, 2,-6, -4,-8, 3,2, -3,-5, 3,5, 2,0, 1,5, 7,1, 1,-5, -2,-8, 1,7, 5,6, 2,6, 3,5, 7,-1, 7,-6, -6,1, 4,4, 2,6, 6,-1, 6,-3, 1,-6, 4,7, 0,2, 3,0, 6,4, -1,6, -1,-1, -3,-6, 5,3, 3,4, -2,4, 6,3, 6,5, -4,4, 5,-5, -3,-2, 6,-2, -3,6, 6,2, -2,0, 8,-5, -8,3, -3,-5, 3,-3, -5,-4, -3,-7, -6,2, 0,1, 2,5, -5,-6, 4,-3, -2,-2, 5,2, -5,-3, -4,-7, 6,4, 7,-6, 1,6, 3,3, 3,-1,
        4,-2, -8,1, -3,3, 6,-3, 5,6, -5,-6, -2,-8, 3,5, -3,1, 1,-2, -6,4, 2,-1, -5,-3, -2,-6, -2,5, 6,1, 3,3, -4,2, 2,-7, 5,-4, 5,7, -4,2, -3,3, -1,-5, 9,-3, 5,6, 0,8, 1,-2, -1,-7, -2,7, 2,3, -6,2, -1,5, 3,7, 0,7, 4,-4, -1,-6, -6,-1, 0,5, 7,-5, -1,5, -6,-2, -8,1, -5,4, 1,-7, 2,-1, 7,0, -2,5, 0,8, 3,0, -4,1, 2,1, -1,-6, 3,-4, -4,-8, 6,5, -8,3, 4,4, -1,-4, -4,-6, 0,3, -1,-4, -6,4, -2,7, 6,4, 5,4, 2,4, 6,2, -4,2, -6,-4, -4,0, 4,-4, 8,-4, -5,2, -5,-2, -4,2, -4,-4, 1,-2, -6,-2, -3,-7, -2,7, -5,1, 1,4, -4,-2, 4,0, 3,0, 1,-2, 6,-4, -7,5, 1,3, -7,3, -6,-3, -2,-4, -6,-4, -4,-9, 3,-3, 2,-5, -4,-6, 0,-7, 0,7, 7,-3, 1,-4, 3,7, -7,4, -3,-8, 3,3, -5,6, 5,-3, -5,-4, 4,3, 2,5, 1,2, -3,-5, 2,6, 1,7, 2,-4, -4,-7, -3,1, 5,-6, -2,6, -2,5, 2,-2, 7,1, 6,1, 3,7, -1,-6, 9,-3, 2,4, 2,1, -4,5, 0,-5, 5,2, 3,7, 6,-2, 1,0, -4,-7, 3,5, 4,8, -3,6, 8,0, 1,6, 6,3, -7,0, -4,-2, -1,-4, 0,-5, 0,8, 8,-3, -7,3, 0,4, -8,2, 2,-4, -5,3, -1,-6, 4,-4, 4,-6, 4,0, 5,-1, 3,5, 0,4, 2,-6, -3,-3, -2,-8, 9,-3, -9,4, -2,5, -5,4, 1,-3, -2,1, -6,-2, -1,-2, 2,-4, 4,6, 0,-3, 4,-2, -3,-3, 9,-4, 1,-5, 0,-8, -4,-8, -2,4, -5,2, -4,-6, -5,-7, -2,-4, 5,3, -5,1, -3,4, 1,5, 7,-3, -7,1, 2,2, 2,-7, -1,3, -1,-8, -4,2, 0,7, -6,-5, -5,0, -5,1, -6,-4, 5,-1, -4,4, -1,0, 0,8, 2,8, -4,2, 2,-6, 2,4, 3,7, 2,4, 7,-3, -2,5, 2,4, -3,-7, -1,7, -3,5, 5,-4, 0,3, 3,-4, 3,3, -3,-8, 2,8, -7,3, -5,-2, -8,3, 6,-1, 2,8, 2,3, 3,0, -5,6, -6,-1, 0,-7, 4,3, 6,-2, 3,-6, 9,-3, -2,0, -3,3, 3,-1, -8,2, -1,0, -2,1, 2,2, -2,-8, -6,3, 4,-1, 2,2, -4,-9, -4,-6, 0,-7, 4,-4, -3,6, 7,1, -7,1, 2,-4, -2,7, 5,1, 4,-2, 3,-5, -4,-5, -5,3, 0,0, -4,1, -2,-4, -2,-8, -2,5, 5,4, -1,-7, -6,-4, -1,7, -3,-9, 6,2, 2,4, 2,4, 8,0, -3,-9, -7,0, 4,8, -4,-5, -5,-3, 1,-6, 6,-4, 0,4, 8,-4, -5,-6, -8,2, 0,-2, -1,-6, -4,-2, -1,-5, 0,-7, 0,1, -2,-8, -1,-8, 2,2, -4,-7, 0,-4, 1,-2, -5,-3, 7,1, 6,2, 4,-1, -3,-6, -4,-3, -1,2, -3,-9, -4,-6, 5,0, -4,-3, 8,-2, 1,4, -3,4, 0,-4, 1,-2, 0,4, -4,-8, 1,-4, -2,7, 5,2, 7,-5, -6,2, 5,6, -5,1, -9,4, -6,1, -2,-4, 1,-6, 3,-3, 3,8, 0,8, 6,-5, 2,-5, 3,7, -3,-8, -3,0, -4,-3, -1,-6, 4,2, 1,-2, 0,2, -4,-1, 6,3, -4,-3, -3,1, -6,4, 9,-3, 3,7, 5,-6, -6,4, 6,-5, -4,2, -7,3, -3,3, -1,7, 8,-1, -3,-7, 9,-4, 1,4, 5,-4, 0,1, 5,-1, -3,3, -4,6, 5,0, -3,-9, 0,-5, 1,4, 4,4, 1,3, -7,4, 1,1, 2,1, -3,-3, -5,-7, -4,-9, 0,3, -4,-1, 1,3, -7,-1, -9,3, -1,1, 6,2, 2,-4, -2,-5, -5,-3, -7,-2, -1,1, -5,6, 1,8, 1,2, 5,1, 8,-4, -1,-2, -2,-6, 1,2, -3,-7, -4,2, 4,0, -4,-1, -4,2, -6,2, -5,-1, 5,-6, 3,-3, -8,0, -9,4, -4,-5, 2,-2, -5,4, -4,-6, -8,1, -5,1, -6,-2, 2,-5, 0,5, -2,-4, 8,-2, -3,4, 3,3, 1,-4, 5,-4, 6,5, -7,3, -4,-7, -2,7, 3,-6, 5,6, 1,7, 6,3, 1,3, -5,2, -1,-2, -3,4, 4,6, 2,-4, 4,-6, -3,-5, 5,6, -6,-5, -5,-2, -3,2, -8,1, 2,4, -3,2, 6,-3, 0,-4, 3,8, 1,7, -2,-1, -5,-1, 3,-5, -3,-9, 2,2, -2,-5, 2,5, 2,1, 0,5, 6,3, 2,-5, -1,-8, 0,8, 3,7, 1,6, 2,5, 8,0, 8,-4, -6,-1, 3,5, 0,7, 6,1, 6,-2, 2,-5, 2,8, -1,2, 3,0, 5,6, -2,5, -1,-1, -2,-6, 5,4, 2,4, -3,3, 6,5, 5,7, -5,3, 6,-4, -2,-2, 6,-1, -5,6, 5,3, -2,-1, 9,-4, -8,2, -2,-5, 3,-3, -4,-5, -1,-7, -7,0, 0,1, 1,5, -3,-7, 4,-2, -1,-3, 4,3, -5,-4, -2,-8, 5,6, 8,-4, -1,6, 3,3, 4,-1,
        5,-1, -8,-1, -3,3, 6,-2, 4,7, -4,-7, 0,-9, 2,5, -3,0, 1,-2, -7,3, 2,-1, -4,-4, 0,-6, -4,5, 6,2, 2,4, -5,1, 3,-6, 6,-3, 3,7, -5,1, -3,3, 0,-5, 9,-1, 4,7, -2,7, 1,-2, 0,-7, -3,6, 1,3, -6,0, -2,5, 2,8, -1,7, 5,-3, 1,-6, -6,-2, -1,5, 7,-3, -2,5, -5,-3, -8,-1, -6,3, 2,-7, 2,-1, 7,1, -4,5, -2,7, 3,1, -4,0, 2,1, 1,-6, 4,-3, -2,-9, 4,6, -8,1, 3,5, 0,-4, -3,-7, -1,3, 0,-4, -7,3, -3,6, 5,5, 4,5, 1,4, 5,3, -4,1, -5,-5, -4,-1, 5,-3, 9,-2, -6,1, -4,-3, -5,1, -3,-5, 1,-2, -5,-3, -1,-7, -3,6, -5,0, 0,4, -3,-2, 4,1, 3,1, 1,-2, 7,-3, -7,3, 0,3, -8,2, -6,-4, -1,-5, -5,-5, -2,-10, 4,-2, 4,-5, -3,-7, 1,-7, -1,7, 8,-2, 2,-4, 2,8, -8,3, -1,-8, 2,4, -6,4, 5,-2, -4,-5, 3,4, 1,6, 1,2, -2,-5, 0,6, 0,7, 2,-3, -3,-8, -3,0, 6,-4, -3,5, -4,5, 3,-2, 7,2, 6,2, 1,7, 1,-6, 9,-1, 1,5, 2,1, -5,4, 1,-5, 4,3, 2,8, 6,0, 1,1, -3,-8, 2,5, 2,9, -4,6, 7,2, -1,6, 6,4, -7,-1, -3,-2, 0,-4, 1,-5, -2,7, 8,-1, -8,2, -1,4, -9,0, 2,-3, -5,2, 1,-6, 5,-3, 5,-5, 4,1, 5,0, 2,5, -1,4, 3,-5, -2,-4, 0,-9, 9,-1, -10,2, -4,5, -6,3, 2,-2, -2,1, -5,-3, -1,-2, 2,-3, 3,7, 1,-3, 5,-1, -2,-4, 10,-2, 2,-5, 2,-7, -2,-9, -2,3, -6,1, -3,-7, -3,-7, -1,-4, 4,4, -5,0, -4,3, 0,5, 8,-2, -7,0, 2,3, 3,-6, -2,2, 1,-8, -5,1, -1,7, -4,-6, -5,-1, -5,0, -5,-5, 5,0, -5,3, -1,-1, -2,7, 0,9, -5,1, 3,-5, 1,4, 2,8, 1,5, 8,-2, -3,4, 1,5, -1,-7, -2,7, -4,4, 6,-3, -1,3, 4,-3, 2,4, -1,-8, 0,9, -8,2, -5,-4, -8,1, 6,1, 1,8, 1,3, 3,1, -6,4, -6,-2, 1,-7, 3,4, 6,0, 4,-6, 9,-1, -2,0, -4,2, 3,0, -9,0, -1,-1, -2,1, 2,3, 0,-9, -6,2, 4,0, 2,3, -2,-10, -3,-7, 1,-7, 5,-3, -4,6, 7,2, -7,0, 2,-3, -3,6, 5,2, 5,-1, 4,-4, -3,-6, -5,2, 0,0, -4,0, -1,-5, 0,-9, -3,4, 4,5, 0,-7, -5,-5, -2,7, -1,-9, 5,3, 1,5, 1,5, 7,2, -1,-9, -7,-1, 2,9, -3,-6, -4,-4, 2,-6, 7,-3, -1,4, 9,-2, -4,-7, -9,0, 0,-2, 1,-6, -3,-2, 0,-5, 1,-7, -1,1, -1,-8, 1,-8, 2,3, -3,-8, 1,-4, 1,-2, -4,-4, 7,2, 5,3, 4,0, -2,-6, -3,-4, -1,2, -1,-9, -3,-7, 5,1, -3,-4, 8,-1, 0,4, -4,3, 1,-4, 1,-2, -1,4, -2,-9, 2,-4, -3,6, 5,4, 7,-3, -6,0, 4,7, -5,0, -10,2, -6,-1, -1,-4, 2,-6, 4,-2, 1,8, -2,7, 7,-4, 3,-4, 1,7, -1,-8, -3,-1, -3,-4, 1,-6, 3,2, 1,-2, 0,2, -4,-2, 6,4, -3,-4, -3,0, -7,3, 9,-1, 2,8, 6,-4, -7,3, 7,-4, -4,1, -7,1, -4,2, -2,7, 8,1, -2,-8, 10,-2, 0,4, 6,-3, -1,1, 5,0, -3,3, -5,5, 5,1, -1,-9, 1,-5, 0,4, 3,5, 0,3, -8,3, 0,1, 2,1, -2,-4, -3,-7, -2,-10, -1,3, -4,-2, 0,3, -7,-2, -9,1, -1,0, 5,3, 2,-3, -1,-6, -4,-4, -6,-3, -1,0, -6,4, -1,8, 1,2, 5,2, 9,-2, -1,-2, 0,-6, 1,2, -2,-8, -4,1, 4,1, -4,-2, -4,1, -6,0, -5,-2, 6,-4, 4,-2, -7,-2, -10,2, -3,-6, 3,-2, -6,3, -3,-7, -8,-1, -5,0, -5,-3, 3,-4, -1,5, -1,-4, 8,-1, -4,3, 2,4, 2,-4, 6,-3, 4,6, -8,2, -3,-8, -3,6, 4,-6, 4,7, 0,7, 6,4, 0,3, -6,1, -1,-2, -4,3, 3,7, 2,-3, 5,-5, -2,-5, 4,7, -4,-6, -5,-4, -3,1, -8,-1, 1,5, -3,1, 6,-2, 1,-4, 1,8, 0,7, -2,-1, -5,-2, 4,-4, -1,-9, 2,3, -1,-6, 1,6, 2,1, -1,5, 6,4, 3,-4, 1,-8, -2,7, 2,8, -1,6, 1,6, 7,2, 9,-2, -6,-2, 2,5, -1,7, 6,2, 6,0, 4,-5, 1,8, -1,2, 3,1, 4,7, -4,5, 0,-1, 0,-6, 4,5, 1,5, -3,3, 4,6, 3,7, -5,2, 7,-3, -2,-3, 6,1, -6,4, 4,4, -2,-1, 10,-2, -9,0, -1,-6, 4,-2, -3,-6, 0,-7, -7,-1, -1,1, 0,5, -2,-8, 5,-1, 0,-3, 3,4, -4,-5, -1,-8, 4,7, 9,-2, -2,6, 2,4, 4,0,
        5,0, -8,-3, -4,2, 6,0, 2,7, -2,-7, 2,-8, 1,6, -3,0, 1,-1, -7,1, 2,-1, -3,-5, 1,-6, -4,4, 6,3, 1,4, -5,0, 5,-5, 6,-2, 2,8, -5,0, -4,2, 1,-5, 9,1, 2,7, -3,7, 1,-1, 2,-7, -5,5, 1,4, -6,-1, -3,4, 0,8, -2,6, 5,-2, 2,-6, -6,-3, -2,5, 8,-2, -3,4, -5,-4, -8,-3, -6,2, 4,-6, 2,-1, 6,2, -4,4, -3,7, 3,2, -3,-1, 1,1, 2,-6, 4,-3, 0,-9, 3,7, -8,0, 2,5, 1,-3, -1,-7, -2,3, 1,-3, -7,1, -5,5, 4,6, 3,6, 0,4, 5,4, -4,0, -4,-6, -4,-2, 5,-2, 9,0, -6,0, -3,-4, -5,0, -2,-5, 1,-1, -5,-4, 0,-7, -5,5, -5,-1, -1,3, -3,-3, 4,2, 3,2, 1,-1, 7,-1, -8,2, 0,3, -8,0, -5,-5, 0,-5, -4,-6, 1,-10, 4,-1, 4,-4, -1,-7, 2,-6, -2,6, 8,0, 2,-3, 0,8, -9,1, 0,-8, 1,4, -7,3, 6,-1, -3,-6, 3,4, 0,6, 1,2, -1,-6, -1,6, -2,7, 3,-3, -1,-9, -3,0, 7,-3, -4,5, -4,4, 3,-1, 6,4, 6,3, 0,7, 2,-6, 9,1, 0,5, 1,1, -6,3, 2,-5, 3,4, 0,8, 6,1, 1,1, -1,-9, 1,6, 0,9, -5,5, 7,3, -2,6, 5,5, -6,-2, -3,-3, 1,-3, 2,-5, -3,7, 8,0, -8,0, -2,4, -8,-2, 3,-3, -6,1, 2,-6, 5,-2, 6,-4, 4,2, 5,1, 1,6, -2,4, 4,-5, -1,-4, 2,-8, 9,1, -10,-1, -4,4, -6,2, 2,-2, -2,1, -5,-4, -1,-2, 3,-3, 1,7, 2,-3, 5,0, -1,-4, 10,1, 3,-4, 3,-7, 0,-9, -3,3, -6,0, -1,-7, -2,-8, 0,-4, 3,5, -5,-1, -4,3, -1,5, 8,0, -7,-2, 1,3, 5,-5, -2,2, 3,-8, -5,0, -2,6, -3,-7, -5,-2, -5,-1, -4,-6, 5,1, -5,2, -1,-1, -3,7, -2,8, -5,0, 4,-5, 0,4, 0,8, 0,5, 8,0, -4,3, 0,5, 0,-7, -4,6, -5,3, 6,-2, -2,3, 4,-3, 1,4, 0,-8, -2,8, -8,0, -4,-4, -8,0, 6,2, -1,8, 1,4, 3,2, -7,3, -6,-3, 2,-6, 3,4, 6,1, 5,-5, 9,1, -2,-1, -4,1, 3,0, -8,-2, -1,-1, -2,1, 1,3, 2,-8, -6,0, 3,1, 1,3, 1,-10, -1,-7, 2,-6, 5,-2, -5,5, 6,4, -7,-2, 3,-3, -5,5, 4,3, 5,0, 5,-3, -2,-6, -6,1, 0,0, -3,-1, 0,-5, 2,-8, -4,3, 3,6, 2,-7, -4,-6, -4,6, 1,-9, 5,4, 0,5, 0,5, 7,3, 1,-9, -6,-2, 0,9, -2,-6, -3,-5, 3,-6, 7,-1, -2,4, 9,0, -2,-7, -8,-2, 1,-2, 2,-6, -3,-3, 1,-5, 2,-6, -1,1, 1,-8, 3,-8, 1,3, -1,-9, 2,-4, 1,-1, -3,-5, 6,4, 5,4, 3,1, 0,-6, -3,-4, -1,1, 1,-9, -1,-7, 5,2, -3,-4, 8,1, -1,3, -4,3, 2,-4, 1,-1, -2,4, 0,-9, 2,-3, -5,5, 4,4, 8,-2, -6,-1, 2,7, -5,-1, -10,-1, -6,-2, 0,-4, 3,-6, 4,-1, 0,8, -3,7, 7,-2, 4,-3, 0,7, 0,-8, -3,-2, -3,-4, 2,-6, 3,3, 1,-1, -1,2, -3,-2, 5,5, -3,-4, -3,0, -7,1, 9,1, 0,8, 7,-3, -7,1, 7,-2, -4,0, -7,0, -4,1, -4,6, 8,3, 0,-8, 10,1, -1,3, 6,-2, -1,1, 5,1, -4,2, -6,4, 5,2, 1,-9, 2,-5, -1,3, 2,5, 0,3, -9,1, 0,1, 1,1, -1,-4, -2,-8, 1,-10, -2,3, -3,-2, 0,3, -6,-4, -9,-1, -1,0, 5,4, 3,-3, 0,-6, -3,-5, -5,-5, -1,0, -7,3, -3,8, 1,2, 4,3, 9,0, -1,-2, 1,-6, 1,2, 0,-8, -4,0, 4,2, -3,-2, -4,0, -6,-1, -4,-3, 7,-3, 4,-1, -7,-3, -10,-1, -2,-6, 3,-1, -6,2, -1,-7, -8,-3, -5,-1, -5,-4, 4,-3, -2,5, 0,-4, 8,1, -4,3, 1,4, 2,-3, 6,-2, 3,7, -8,0, -1,-9, -5,5, 5,-5, 2,7, -2,7, 5,5, 0,3, -6,0, -1,-2, -4,3, 1,7, 3,-3, 6,-4, -1,-6, 2,7, -3,-7, -4,-4, -4,1, -8,-3, 0,5, -4,1, 6,0, 2,-4, 0,8, -2,7, -1,-1, -4,-3, 5,-3, 1,-9, 1,3, 0,-6, 0,6, 1,1, -2,5, 5,5, 4,-3, 3,-8, -3,7, 0,8, -2,6, 0,6, 7,3, 9,0, -6,-3, 1,6, -2,6, 6,3, 6,1, 4,-4, -1,8, -1,1, 3,2, 2,7, -4,4, 0,-1, 1,-6, 3,6, 0,5, -4,2, 3,7, 2,8, -6,1, 7,-1, -1,-3, 6,2, -7,3, 3,5, -1,-1, 10,1, -8,-2, 0,-6, 4,-1, -2,-6, 2,-7, -6,-2, -1,1, -1,5, 0,-8, 5,0, 0,-3, 3,4, -3,-6, 1,-8, 2,7, 9,0, -3,6, 1,4, 3,1,
        5,1, -7,-4, -4,1, 6,1, 1,8, -1,-8, 4,-8, 0,6, -3,-1, 2,-1, -7,0, 2,0, -2,-6, 2,-6, -5,3, 5,4, 0,4, -5,-1, 6,-4, 7,0, 0,8, -5,-1, -4,1, 2,-5, 9,3, 1,8, -5,6, 2,-1, 3,-6, -6,4, 0,4, -6,-2, -4,3, -1,8, -4,6, 5,-1, 3,-5, -5,-4, -3,4, 8,0, -4,3, -4,-5, -7,-4, -7,0, 5,-5, 2,0, 6,4, -5,3, -5,6, 2,2, -3,-2, 1,2, 3,-5, 5,-2, 2,-9, 2,7, -8,-2, 1,5, 2,-3, 0,-7, -2,2, 2,-3, -7,0, -6,4, 3,7, 1,6, -1,4, 4,5, -4,-1, -3,-7, -4,-2, 5,-1, 9,2, -5,-1, -2,-4, -5,-1, -1,-5, 2,-1, -4,-5, 2,-7, -6,4, -5,-2, -2,3, -2,-3, 4,2, 2,2, 2,-1, 7,0, -8,0, -1,3, -8,-1, -4,-6, 1,-5, -3,-7, 3,-10, 4,0, 5,-3, 0,-7, 4,-6, -4,6, 8,1, 3,-3, -1,8, -9,-1, 2,-8, 0,4, -7,2, 6,0, -1,-6, 2,5, -1,5, 0,2, 0,-6, -2,6, -3,6, 3,-2, 1,-9, -3,-1, 7,-2, -5,4, -5,3, 3,-1, 5,5, 5,4, -2,7, 3,-5, 9,3, -1,5, 1,2, -6,1, 3,-4, 2,4, -1,8, 6,2, 0,1, 1,-9, 0,6, -2,9, -6,4, 6,5, -3,5, 4,6, -6,-4, -2,-3, 2,-3, 3,-4, -5,6, 8,2, -8,-1, -2,4, -8,-4, 3,-2, -6,0, 3,-5, 5,-1, 7,-3, 4,2, 5,2, 0,6, -2,4, 5,-4, 0,-4, 4,-8, 9,3, -10,-3, -5,3, -7,0, 3,-2, -2,0, -4,-5, 0,-2, 3,-2, 0,7, 2,-2, 5,1, 0,-4, 10,3, 4,-3, 5,-6, 2,-9, -3,2, -5,-1, 0,-7, 0,-8, 1,-4, 2,6, -5,-2, -5,2, -2,5, 8,1, -6,-3, 1,3, 6,-4, -3,2, 4,-7, -5,-1, -4,6, -2,-7, -4,-3, -5,-2, -3,-7, 5,2, -5,1, 0,-1, -5,6, -4,8, -5,-1, 5,-4, -1,4, -1,8, -1,5, 8,1, -4,2, -1,5, 2,-7, -5,5, -6,2, 7,0, -2,2, 5,-2, 0,4, 2,-8, -4,8, -8,-1, -3,-5, -8,-2, 5,3, -3,7, 0,4, 2,2, -7,2, -5,-4, 4,-6, 2,5, 6,2, 6,-4, 9,3, -2,-1, -4,0, 3,1, -8,-4, 0,-1, -2,0, 1,3, 4,-8, -6,-1, 3,2, 1,3, 3,-10, 0,-7, 4,-6, 5,-1, -6,4, 5,5, -6,-3, 3,-2, -6,4, 3,4, 5,1, 6,-2, 0,-7, -6,0, 0,0, -3,-2, 1,-5, 4,-8, -4,2, 1,6, 3,-6, -3,-7, -5,5, 3,-9, 4,5, -1,5, -1,5, 6,5, 3,-9, -6,-4, -2,9, 0,-7, -2,-6, 4,-5, 7,0, -2,4, 9,2, -1,-8, -8,-4, 1,-2, 3,-5, -2,-3, 2,-5, 4,-6, -1,0, 3,-7, 4,-7, 1,3, 1,-9, 2,-4, 2,-1, -2,-6, 5,5, 4,5, 3,2, 1,-6, -2,-5, -2,1, 3,-9, 0,-7, 4,3, -2,-5, 7,3, -2,3, -5,2, 2,-4, 2,-1, -2,4, 2,-9, 3,-3, -6,4, 3,5, 8,0, -6,-2, 1,8, -5,-2, -10,-3, -5,-3, 1,-4, 4,-5, 4,0, -2,8, -5,6, 8,-1, 4,-2, -2,7, 2,-8, -2,-2, -2,-5, 3,-5, 2,3, 2,-1, -1,2, -3,-3, 4,6, -2,-5, -3,-1, -7,0, 9,3, -1,8, 7,-2, -7,0, 8,-1, -4,-1, -7,-2, -4,0, -5,5, 7,4, 1,-8, 10,3, -2,3, 7,0, -1,0, 5,2, -4,1, -7,3, 4,3, 3,-9, 3,-4, -2,3, 1,5, -1,3, -9,-1, 0,1, 1,2, 0,-4, 0,-8, 3,-10, -2,2, -3,-3, -1,3, -5,-5, -9,-3, -1,0, 4,5, 3,-2, 1,-5, -2,-6, -4,-6, -1,0, -7,2, -4,7, 0,2, 3,4, 9,2, 0,-2, 2,-6, 0,2, 1,-8, -4,-1, 4,2, -3,-3, -4,-1, -6,-2, -3,-4, 7,-2, 4,0, -6,-5, -10,-3, 0,-7, 3,-1, -7,0, 0,-7, -7,-4, -5,-2, -4,-5, 4,-2, -3,4, 1,-4, 7,3, -5,2, 0,4, 3,-3, 7,0, 2,7, -8,-1, 1,-9, -6,4, 6,-4, 1,8, -3,6, 4,6, -1,3, -5,-1, 0,-2, -5,2, 0,7, 3,-2, 7,-3, 0,-6, 1,8, -2,-7, -3,-5, -4,0, -7,-4, -1,5, -4,0, 6,1, 2,-4, -2,8, -3,6, -1,-2, -3,-4, 6,-2, 3,-9, 1,3, 1,-5, -1,5, 1,2, -3,4, 4,6, 4,-2, 4,-7, -5,6, -1,8, -3,5, -1,5, 6,5, 9,2, -5,-4, 0,6, -4,6, 5,4, 6,2, 5,-3, -3,7, -2,1, 2,2, 1,8, -5,3, 0,-1, 2,-6, 1,6, -1,5, -4,1, 2,7, 0,8, -6,0, 7,0, -1,-3, 5,3, -7,2, 2,6, -1,-2, 10,3, -8,-4, 1,-5, 4,0, 0,-7, 3,-6, -6,-4, -1,0, -2,5, 1,-8, 5,1, 1,-3, 2,5, -1,-6, 3,-7, 1,8, 9,2, -4,5, 0,4, 3,2,
        5,2, -6,-5, -4,0, 6,2, -1,8, 1,-8, 5,-7, -1,6, -3,-1, 2,-1, -7,-2, 2,0, -1,-6, 4,-5, -6,2, 4,5, -1,4, -5,-2, 6,-3, 7,1, -2,8, -5,-2, -4,0, 3,-4, 8,5, -1,8, -6,5, 2,-1, 4,-6, -6,3, -1,3, -5,-4, -4,2, -3,7, -5,5, 5,0, 4,-4, -4,-5, -4,3, 8,2, -4,2, -3,-5, -6,-5, -7,-1, 6,-4, 2,0, 5,5, -6,2, -6,5, 2,3, -3,-2, 1,2, 4,-4, 5,-1, 4,-9, 0,7, -8,-4, 0,5, 2,-3, 2,-7, -3,2, 2,-3, -7,-2, -6,3, 1,7, 0,6, -2,4, 3,5, -4,-2, -1,-7, -3,-3, 5,0, 9,4, -5,-3, -2,-5, -5,-2, 0,-5, 2,-1, -3,-5, 3,-6, -6,3, -4,-3, -2,3, -1,-4, 3,3, 2,3, 2,-1, 7,2, -8,-2, -1,3, -7,-3, -2,-7, 2,-5, -1,-7, 4,-9, 4,1, 6,-2, 2,-7, 5,-5, -5,5, 7,3, 3,-2, -3,7, -8,-3, 4,-8, -1,4, -7,0, 6,1, 0,-6, 1,5, -3,5, 0,2, 1,-6, -4,5, -4,6, 4,-1, 3,-8, -3,-1, 7,0, -5,3, -6,2, 3,0, 4,6, 4,5, -3,6, 4,-4, 8,5, -2,5, 1,2, -6,0, 4,-3, 2,5, -3,7, 5,4, 0,1, 3,-8, -1,6, -4,9, -7,2, 5,6, -4,4, 2,7, -5,-5, -1,-4, 2,-3, 4,-3, -6,5, 8,4, -7,-3, -3,3, -7,-5, 4,-1, -6,-1, 4,-4, 5,0, 7,-1, 3,3, 4,3, -1,6, -3,3, 5,-3, 1,-4, 5,-7, 8,5, -9,-4, -6,2, -7,-1, 3,-1, -2,0, -3,-5, 0,-2, 4,-1, -2,7, 3,-2, 5,2, 1,-4, 9,4, 4,-2, 6,-5, 4,-9, -4,1, -5,-3, 2,-7, 2,-8, 2,-4, 1,6, -4,-3, -5,1, -3,4, 7,3, -6,-4, 0,3, 6,-3, -3,1, 5,-6, -5,-2, -5,5, 0,-7, -3,-4, -4,-3, -1,-7, 4,3, -5,0, 0,-1, -6,5, -5,7, -5,-2, 5,-3, -2,4, -3,7, -2,5, 7,3, -5,2, -2,5, 3,-6, -6,4, -6,1, 7,1, -3,2, 5,-1, -1,4, 4,-8, -5,7, -7,-3, -2,-6, -8,-4, 4,4, -4,7, -1,3, 2,3, -7,0, -4,-5, 5,-5, 1,5, 5,4, 7,-2, 8,5, -2,-2, -4,-1, 3,1, -7,-5, 0,-1, -2,0, 0,3, 5,-7, -6,-2, 3,2, 0,3, 4,-9, 2,-7, 5,-5, 5,0, -7,2, 4,6, -6,-4, 4,-1, -6,3, 2,4, 5,2, 6,-1, 1,-7, -6,-1, 0,0, -3,-2, 2,-5, 5,-7, -5,2, 0,6, 4,-6, -1,-7, -6,4, 5,-8, 3,5, -2,5, -2,5, 5,6, 5,-8, -5,-5, -4,9, 1,-7, -1,-6, 5,-4, 7,2, -3,3, 9,4, 1,-8, -7,-5, 2,-2, 4,-4, -1,-4, 3,-4, 5,-5, -1,0, 4,-7, 5,-6, 0,3, 3,-8, 3,-3, 2,-1, -1,-6, 4,6, 3,5, 3,2, 2,-6, -1,-5, -2,1, 5,-8, 2,-7, 3,4, -1,-5, 7,4, -2,3, -5,1, 3,-3, 2,-1, -3,3, 4,-9, 3,-2, -6,3, 2,6, 8,2, -5,-4, -1,8, -4,-3, -9,-4, -4,-4, 2,-4, 5,-4, 4,1, -4,8, -6,5, 8,1, 5,-2, -3,6, 4,-8, -2,-3, -1,-5, 4,-4, 1,4, 2,-1, -2,2, -2,-3, 2,7, -1,-5, -3,-1, -7,-2, 8,5, -3,7, 7,0, -7,-2, 8,1, -4,-2, -6,-3, -4,-1, -6,4, 6,5, 3,-7, 9,4, -2,3, 7,1, -1,0, 4,3, -4,0, -7,1, 3,4, 5,-8, 4,-3, -2,3, 0,5, -1,3, -8,-3, -1,1, 1,2, 1,-4, 2,-8, 4,-9, -3,2, -2,-3, -1,3, -4,-6, -8,-5, -1,-1, 3,5, 4,-1, 3,-5, -1,-6, -3,-6, -1,-1, -7,0, -5,6, 0,2, 2,4, 9,4, 0,-2, 4,-5, 0,2, 3,-7, -4,-2, 3,3, -2,-3, -4,-2, -5,-4, -2,-4, 7,0, 4,1, -5,-6, -9,-4, 1,-7, 3,0, -7,-1, 2,-7, -6,-5, -4,-3, -3,-5, 5,-2, -4,3, 2,-4, 7,4, -5,1, -1,4, 3,-2, 7,1, 0,7, -7,-3, 3,-8, -6,3, 7,-2, -1,8, -4,6, 2,7, -1,3, -5,-3, 0,-2, -5,1, -2,7, 4,-1, 7,-1, 1,-6, -1,8, 0,-7, -2,-6, -3,-1, -6,-5, -2,5, -3,-1, 6,2, 3,-3, -4,8, -4,6, -1,-2, -2,-4, 6,-1, 5,-8, 0,3, 3,-5, -3,5, 1,2, -4,3, 2,7, 5,-2, 5,-6, -6,5, -3,7, -4,4, -3,5, 5,6, 9,4, -4,-5, -1,6, -5,5, 4,5, 5,4, 6,-2, -4,7, -2,1, 2,3, -1,8, -6,2, 1,-1, 4,-5, 0,6, -2,5, -4,0, 0,7, -2,8, -6,-1, 7,2, 0,-3, 4,4, -7,0, 1,6, -1,-2, 9,4, -7,-5, 3,-5, 4,1, 1,-7, 4,-6, -5,-5, -1,0, -3,4, 3,-7, 5,2, 1,-3, 1,5, 0,-6, 4,-7, -1,8, 9,4, -5,4, -1,4, 3,2,
        4,3, -5,-7, -4,-1, 5,3, -2,7, 2,-7, 6,-6, -2,5, -2,-2, 2,0, -6,-3, 2,1, 0,-6, 5,-5, -6,1, 3,6, -2,4, -4,-3, 7,-2, 6,2, -3,7, -4,-3, -4,-1, 4,-3, 7,6, -2,7, -7,4, 2,0, 6,-5, -7,2, -2,3, -5,-5, -5,2, -4,6, -6,4, 5,1, 5,-4, -3,-6, -5,3, 7,3, -5,2, -2,-6, -5,-7, -6,-2, 7,-3, 2,1, 4,6, -6,1, -7,4, 1,3, -2,-3, 0,2, 5,-4, 5,0, 5,-8, -1,7, -7,-5, -1,5, 3,-2, 3,-6, -3,1, 3,-2, -6,-3, -7,2, 0,7, -1,6, -3,3, 2,6, -3,-3, 0,-7, -2,-4, 5,1, 8,5, -4,-4, -1,-5, -4,-3, 1,-5, 2,0, -2,-6, 4,-5, -7,2, -3,-4, -3,2, 0,-4, 2,4, 1,3, 2,0, 6,3, -7,-3, -2,2, -6,-4, -1,-7, 3,-4, 0,-7, 6,-8, 4,2, 6,-1, 3,-6, 6,-4, -6,4, 6,4, 4,-1, -4,6, -7,-4, 5,-7, -2,4, -7,-1, 5,2, 1,-6, 0,5, -4,4, -1,2, 2,-5, -5,5, -6,5, 4,0, 4,-7, -2,-2, 7,1, -6,2, -6,1, 3,1, 3,7, 3,6, -4,5, 5,-4, 7,6, -3,4, 0,2, -6,-1, 5,-3, 1,5, -4,6, 5,5, 0,1, 4,-7, -2,5, -5,8, -7,1, 4,7, -5,4, 1,7, -4,-6, 0,-4, 3,-2, 5,-3, -7,4, 7,5, -6,-4, -4,2, -6,-6, 4,0, -5,-2, 5,-4, 5,1, 7,0, 2,4, 3,4, -2,5, -4,2, 6,-2, 2,-4, 6,-6, 7,6, -8,-6, -6,1, -6,-2, 3,0, -2,-1, -2,-6, 1,-2, 4,0, -3,6, 3,-1, 4,3, 2,-4, 8,6, 5,-2, 7,-4, 5,-8, -4,0, -4,-4, 3,-6, 3,-7, 3,-3, 0,6, -3,-4, -5,0, -4,3, 6,4, -5,-6, -1,3, 7,-2, -3,0, 7,-5, -4,-3, -6,4, 1,-7, -3,-5, -3,-4, 0,-7, 3,4, -5,-1, 0,-1, -7,4, -6,6, -4,-3, 6,-2, -3,3, -4,6, -3,4, 6,4, -5,1, -3,4, 4,-5, -7,3, -6,0, 6,2, -3,1, 5,0, -2,4, 5,-7, -6,6, -6,-4, -1,-6, -7,-5, 4,5, -5,6, -2,3, 1,3, -7,-1, -3,-6, 6,-4, 0,5, 5,5, 7,-1, 7,6, -1,-2, -4,-2, 2,2, -6,-6, 0,-1, -2,-1, -1,3, 6,-6, -5,-3, 2,3, -1,3, 6,-8, 3,-6, 6,-4, 5,1, -7,1, 3,7, -5,-6, 4,0, -7,2, 2,5, 4,3, 6,0, 2,-6, -5,-2, 0,0, -2,-3, 3,-4, 6,-6, -5,1, -1,6, 6,-5, 0,-7, -7,3, 6,-7, 2,6, -3,4, -3,4, 4,7, 6,-7, -4,-6, -5,8, 2,-6, 0,-6, 6,-3, 6,3, -4,2, 8,5, 2,-7, -6,-6, 2,-1, 5,-4, 0,-4, 4,-3, 6,-4, -1,0, 5,-6, 7,-5, -1,3, 4,-7, 4,-2, 2,0, 0,-6, 3,7, 2,6, 2,3, 3,-5, 0,-5, -2,0, 6,-7, 3,-6, 3,5, 0,-5, 6,5, -3,2, -5,0, 4,-2, 2,0, -4,2, 5,-8, 4,-1, -7,2, 1,6, 7,3, -5,-5, -2,7, -3,-4, -8,-6, -4,-5, 3,-3, 6,-3, 4,2, -5,7, -7,4, 7,2, 5,-1, -4,5, 5,-7, -1,-3, 0,-5, 5,-4, 0,4, 2,0, -2,1, -1,-4, 1,7, 0,-5, -2,-2, -6,-3, 7,6, -4,6, 7,1, -6,-3, 7,2, -3,-3, -5,-4, -4,-2, -7,3, 5,7, 4,-6, 8,6, -3,2, 6,2, -1,0, 3,4, -4,-1, -7,0, 3,5, 6,-7, 5,-3, -3,2, -1,5, -2,2, -7,-4, -1,1, 0,2, 2,-4, 3,-7, 6,-8, -3,1, -1,-4, -2,2, -3,-7, -7,-6, -1,-1, 2,6, 4,0, 4,-4, 0,-6, -2,-7, -1,-1, -7,-1, -7,5, -1,2, 2,5, 8,5, 1,-2, 5,-5, -1,2, 4,-6, -3,-3, 2,4, -1,-4, -3,-3, -5,-5, -2,-5, 7,1, 4,2, -4,-7, -8,-6, 2,-6, 3,1, -6,-2, 3,-6, -5,-7, -3,-4, -2,-6, 5,-1, -5,3, 3,-3, 6,5, -5,0, -2,4, 4,-1, 6,2, -1,7, -6,-4, 4,-7, -7,2, 7,-1, -2,7, -6,5, 1,7, -2,2, -4,-4, 1,-2, -5,0, -3,6, 4,0, 7,0, 2,-5, -2,7, 1,-7, -1,-6, -3,-2, -5,-7, -3,4, -3,-2, 5,3, 4,-2, -5,7, -6,5, 0,-2, -2,-5, 6,0, 6,-7, -1,3, 4,-4, -4,4, 0,2, -5,3, 1,7, 5,-1, 7,-5, -7,4, -4,6, -5,4, -4,4, 4,7, 8,5, -3,-6, -2,5, -6,4, 3,6, 5,5, 6,-1, -5,6, -2,0, 1,3, -2,7, -6,1, 1,-1, 5,-5, -1,6, -3,4, -4,-1, -1,7, -3,7, -5,-2, 6,3, 1,-3, 4,5, -7,-1, 0,6, 0,-2, 8,6, -6,-6, 4,-4, 4,2, 2,-6, 6,-5, -4,-6, -1,0, -4,3, 4,-6, 4,3, 2,-2, 0,5, 1,-6, 5,-6, -2,7, 8,5, -6,3, -2,4, 2,3,
        4,3, -3,-7, -4,-1, 5,5, -4,7, 4,-7, 7,-4, -4,5, -2,-2, 2,0, -6,-5, 2,1, 2,-6, 5,-3, -6,-1, 1,6, -2,4, -4,-3, 7,0, 6,4, -5,7, -4,-3, -4,-1, 4,-3, 5,8, -4,7, -7,2, 2,0, 6,-3, -7,0, -2,3, -3,-5, -5,0, -6,5, -6,2, 5,3, 5,-2, -1,-6, -5,1, 7,5, -5,0, 0,-6, -3,-7, -6,-4, 7,-1, 2,1, 2,6, -6,-1, -7,2, 1,3, -2,-3, 0,2, 5,-2, 5,2, 7,-6, -3,7, -5,-7, -3,5, 3,-2, 5,-6, -3,1, 3,-2, -6,-5, -7,0, -2,7, -3,6, -3,3, 0,6, -3,-3, 2,-7, -2,-4, 5,3, 6,7, -4,-4, 1,-5, -4,-3, 3,-5, 2,0, 0,-6, 5,-4, -7,0, -3,-4, -3,2, 0,-4, 2,4, 1,3, 2,0, 6,5, -7,-5, -2,2, -5,-6, 1,-7, 3,-4, 2,-7, 8,-6, 4,2, 6,1, 5,-6, 6,-2, -6,2, 5,6, 4,-1, -6,5, -6,-6, 7,-5, -2,4, -7,-3, 5,4, 3,-6, -2,5, -4,4, -1,2, 4,-5, -5,3, -6,3, 4,0, 6,-6, -2,-2, 7,3, -6,0, -6,-1, 3,1, 1,7, 1,6, -5,4, 5,-2, 5,8, -3,4, 0,2, -6,-3, 5,-1, -1,5, -6,5, 3,5, 0,1, 6,-6, -4,5, -7,6, -7,-1, 2,7, -5,2, -1,7, -2,-6, 0,-4, 3,-2, 5,-1, -7,2, 5,7, -5,-6, -4,2, -4,-7, 4,0, -5,-4, 5,-2, 5,3, 7,2, 2,4, 3,4, -4,5, -4,2, 6,0, 2,-4, 7,-4, 5,8, -6,-8, -6,-1, -6,-4, 3,0, -2,-1, 0,-6, 1,-2, 4,0, -5,6, 3,-1, 4,3, 2,-4, 6,8, 5,0, 7,-2, 7,-6, -4,0, -4,-4, 5,-6, 5,-7, 3,-3, -2,6, -3,-4, -5,-2, -4,3, 5,6, -3,-6, -1,3, 7,0, -3,0, 7,-3, -4,-3, -6,2, 3,-7, -1,-5, -3,-4, 2,-7, 3,4, -5,-3, 0,-1, -7,2, -7,4, -4,-3, 6,0, -3,3, -6,5, -3,4, 5,6, -5,-1, -3,4, 5,-4, -7,1, -6,-2, 6,4, -3,1, 5,2, -2,4, 7,-5, -7,4, -5,-6, 1,-6, -5,-7, 2,5, -6,4, -2,3, 1,3, -7,-3, -1,-6, 6,-2, -2,5, 3,5, 7,1, 5,8, -1,-2, -4,-2, 2,2, -4,-7, 0,-1, -2,-1, -1,3, 7,-4, -5,-5, 2,3, -1,3, 8,-6, 5,-6, 6,-2, 5,3, -7,-1, 1,7, -3,-6, 4,0, -7,0, 0,5, 4,3, 6,2, 4,-6, -5,-4, 0,0, -2,-3, 3,-4, 7,-4, -5,-1, -3,6, 6,-3, 2,-7, -7,1, 8,-5, 0,6, -3,4, -3,4, 2,7, 8,-5, -2,-6, -7,6, 4,-6, 2,-6, 6,-1, 6,5, -4,2, 6,7, 4,-7, -4,-7, 2,-1, 5,-2, 0,-4, 4,-3, 6,-2, -1,0, 6,-4, 7,-3, -1,3, 6,-6, 4,-2, 2,0, 2,-6, 1,7, 0,6, 2,3, 5,-5, 2,-5, -2,0, 8,-5, 5,-6, 1,5, 2,-5, 4,6, -3,2, -5,-2, 4,-2, 2,0, -4,2, 7,-6, 4,-1, -7,0, -1,6, 7,5, -3,-5, -4,7, -3,-4, -6,-8, -2,-5, 3,-3, 6,-1, 4,2, -7,5, -7,2, 7,4, 5,1, -5,4, 7,-5, -1,-3, 2,-5, 5,-2, 0,4, 2,0, -2,1, -1,-4, -1,7, 2,-5, -2,-2, -6,-5, 5,8, -6,5, 7,3, -6,-5, 7,4, -3,-3, -4,-5, -4,-2, -7,1, 3,7, 6,-5, 6,8, -3,2, 6,4, -1,0, 3,4, -4,-1, -7,-2, 1,5, 8,-5, 5,-1, -3,2, -3,5, -2,2, -6,-6, -1,1, 0,2, 2,-4, 5,-7, 8,-6, -3,1, -1,-4, -2,2, -1,-7, -5,-8, -1,-1, 0,6, 4,0, 4,-4, 2,-6, 0,-7, -1,-1, -7,-3, -7,3, -1,2, 0,5, 6,7, 1,-2, 5,-3, -1,2, 6,-5, -3,-3, 2,4, -1,-4, -3,-3, -3,-5, 0,-5, 7,3, 4,2, -2,-7, -6,-8, 4,-6, 3,1, -6,-4, 5,-6, -3,-7, -3,-4, 0,-6, 5,1, -5,1, 3,-3, 4,6, -5,-2, -2,4, 4,-1, 6,4, -3,7, -5,-6, 6,-6, -7,0, 7,1, -4,7, -6,3, -1,7, -2,2, -4,-4, 1,-2, -5,-2, -5,6, 4,0, 7,2, 4,-5, -4,7, 3,-7, 1,-6, -3,-2, -3,-7, -3,4, -3,-2, 5,5, 4,-2, -7,5, -6,3, 0,-2, 0,-5, 6,2, 8,-5, -1,3, 4,-4, -4,4, 0,2, -5,1, -1,7, 5,1, 7,-3, -7,2, -6,5, -5,2, -4,4, 2,7, 6,7, -1,-6, -4,5, -6,2, 1,6, 3,5, 6,1, -6,4, -2,0, 1,3, -4,7, -6,-1, 1,-1, 5,-3, -3,6, -3,4, -4,-1, -3,7, -5,7, -5,-4, 6,5, 1,-3, 2,5, -7,-3, -2,6, 0,-2, 6,8, -4,-7, 4,-4, 4,2, 4,-6, 6,-3, -2,-6, -1,0, -4,3, 6,-5, 4,3, 2,-2, -2,5, 3,-6, 6,-4, -4,7, 6,7, -6,1, -2,4, 2,3,
        3,4, -2,-8, -3,-2, 4,5, -5,6, 5,-6, 8,-3, -4,4, -1,-3, 2,1, -4,-6, 2,2, 3,-5, 6,-2, -6,-2, 0,6, -3,3, -3,-4, 7,1, 5,5, -6,5, -3,-4, -3,-2, 5,-2, 4,9, -5,6, -8,1, 2,1, 7,-2, -7,-1, -3,2, -2,-6, -5,-1, -7,4, -7,1, 4,3, 6,-1, 0,-6, -5,0, 5,6, -5,-1, 1,-6, -2,-8, -5,-5, 7,0, 2,2, 1,7, -6,-2, -8,1, 0,3, -1,-3, -1,2, 6,-1, 4,2, 8,-5, -4,6, -4,-8, -3,4, 3,-1, 6,-4, -3,0, 3,-1, -4,-6, -7,-1, -3,6, -4,5, -4,2, -1,6, -2,-4, 3,-6, -1,-4, 4,3, 5,8, -3,-5, 2,-5, -3,-4, 3,-4, 2,1, 1,-6, 6,-3, -7,-1, -2,-5, -3,1, 1,-4, 1,4, 0,3, 2,1, 4,6, -5,-6, -3,1, -4,-7, 2,-7, 4,-3, 3,-6, 9,-4, 3,3, 6,2, 6,-4, 7,-1, -7,1, 4,7, 4,0, -7,4, -5,-7, 8,-4, -3,3, -6,-4, 4,4, 4,-5, -2,4, -5,3, -2,2, 4,-4, -6,2, -7,2, 4,1, 7,-5, -1,-3, 6,4, -6,-1, -6,-2, 3,2, 0,7, 0,6, -6,3, 6,-1, 4,9, -4,3, -1,2, -5,-4, 5,0, -2,5, -7,4, 2,6, 0,1, 7,-5, -4,4, -8,5, -7,-2, 1,8, -6,1, -2,7, -1,-7, 1,-4, 3,-1, 5,0, -8,1, 4,8, -4,-7, -4,1, -3,-8, 4,1, -4,-4, 6,-1, 4,3, 6,3, 1,4, 2,5, -4,4, -4,1, 6,1, 3,-3, 8,-3, 4,9, -4,-9, -6,-2, -5,-5, 3,1, -2,-2, 1,-6, 2,-2, 4,1, -6,4, 3,0, 3,4, 3,-3, 4,9, 5,1, 8,-1, 8,-5, -4,-1, -3,-5, 6,-4, 6,-5, 4,-2, -3,5, -2,-5, -4,-2, -5,2, 4,7, -2,-7, -2,3, 7,1, -3,-1, 8,-2, -3,-4, -7,1, 4,-6, 0,-5, -2,-5, 3,-6, 2,5, -4,-3, 0,-1, -8,1, -8,3, -3,-4, 6,1, -4,2, -7,4, -4,3, 4,7, -5,-2, -4,3, 6,-3, -7,0, -5,-3, 5,5, -3,0, 4,2, -3,3, 8,-4, -8,3, -4,-7, 2,-6, -4,-8, 1,6, -7,3, -3,2, 0,3, -6,-4, 0,-6, 7,-1, -2,4, 2,6, 7,2, 4,9, 0,-2, -3,-3, 1,3, -3,-8, 0,-1, -2,-2, -2,3, 8,-3, -4,-5, 1,3, -2,3, 9,-4, 6,-4, 7,-1, 4,3, -7,-2, 0,7, -2,-7, 4,1, -7,-1, -1,5, 3,4, 5,3, 5,-5, -4,-4, 0,0, -1,-3, 4,-3, 8,-3, -5,-2, -4,5, 7,-2, 3,-6, -7,0, 9,-4, -1,6, -4,3, -4,3, 1,8, 9,-4, -1,-7, -8,5, 5,-5, 3,-5, 6,0, 4,6, -4,1, 5,8, 5,-6, -3,-8, 2,0, 6,-1, 1,-4, 5,-2, 7,-1, -1,0, 7,-3, 8,-2, -2,3, 7,-5, 4,-1, 2,1, 3,-5, 0,7, -1,6, 1,3, 5,-4, 2,-4, -2,-1, 9,-4, 6,-4, 0,5, 2,-4, 3,7, -3,1, -4,-2, 4,-1, 2,1, -4,1, 8,-5, 4,0, -7,-1, -2,6, 5,6, -2,-6, -5,6, -2,-5, -4,-9, -1,-6, 4,-2, 6,0, 3,3, -8,4, -8,1, 6,5, 5,2, -6,3, 8,-4, 0,-3, 2,-4, 6,-1, -1,4, 2,1, -2,0, 0,-4, -2,7, 2,-4, -1,-3, -4,-6, 4,9, -7,4, 6,4, -4,-6, 6,5, -2,-4, -3,-6, -3,-3, -7,0, 2,8, 7,-4, 4,9, -3,1, 5,5, -1,0, 2,5, -3,-2, -6,-3, 0,5, 9,-4, 5,0, -3,1, -3,4, -3,1, -5,-7, -1,1, -1,2, 3,-3, 6,-5, 9,-4, -3,0, 0,-4, -3,1, 0,-7, -4,-9, -1,-1, -1,6, 4,1, 5,-3, 3,-5, 1,-7, -1,-1, -6,-4, -8,2, -2,2, -1,5, 5,8, 2,-2, 6,-2, -2,2, 7,-4, -2,-4, 1,4, 0,-4, -2,-4, -2,-6, 1,-5, 6,4, 3,3, -1,-8, -4,-9, 5,-5, 3,2, -5,-5, 6,-4, -2,-8, -2,-5, 1,-6, 5,2, -5,0, 4,-2, 3,7, -4,-2, -3,3, 4,0, 5,5, -4,6, -4,-7, 7,-5, -7,-1, 7,2, -5,6, -7,2, -2,7, -3,1, -3,-5, 2,-2, -4,-2, -6,4, 4,1, 6,3, 4,-4, -5,6, 4,-6, 2,-6, -2,-3, -2,-8, -4,3, -2,-3, 4,5, 4,-1, -8,4, -7,2, 1,-2, 1,-5, 5,3, 9,-4, -2,3, 5,-3, -5,3, -1,2, -5,0, -2,7, 5,2, 8,-2, -8,1, -7,4, -6,1, -5,3, 1,8, 5,8, 0,-6, -4,4, -7,1, 0,6, 2,6, 6,2, -7,3, -2,-1, 0,3, -5,6, -6,-2, 1,-1, 6,-2, -4,5, -4,3, -3,-2, -4,6, -6,5, -4,-4, 4,6, 2,-3, 1,6, -6,-4, -3,5, 1,-2, 4,9, -3,-8, 5,-3, 3,3, 5,-5, 7,-2, -1,-7, -1,0, -5,2, 7,-4, 3,4, 3,-1, -2,4, 4,-5, 7,-3, -5,6, 5,8, -6,0, -3,3, 1,3,
        2,5, 0,-8, -3,-3, 2,6, -6,5, 6,-5, 9,-1, -5,3, -1,-3, 2,1, -3,-6, 1,2, 4,-5, 6,-1, -5,-3, -1,6, -4,2, -2,-5, 7,3, 4,6, -7,4, -2,-5, -3,-3, 5,-1, 2,9, -6,5, -8,-1, 2,1, 7,0, -7,-3, -3,2, -1,-6, -5,-2, -7,3, -7,0, 3,4, 6,0, 1,-6, -5,-1, 4,7, -5,-2, 2,-6, 0,-8, -4,-6, 7,2, 1,2, 0,7, -5,-3, -8,-1, -1,3, 0,-4, -1,2, 6,0, 4,3, 9,-3, -5,5, -2,-8, -4,3, 4,0, 6,-3, -3,-1, 4,0, -3,-6, -7,-3, -4,6, -5,4, -4,1, -2,6, -1,-4, 4,-6, 0,-4, 3,4, 3,9, -1,-5, 2,-4, -2,-5, 4,-3, 2,1, 2,-6, 7,-2, -7,-3, -1,-5, -4,0, 2,-3, 0,4, -1,3, 2,1, 3,6, -4,-7, -3,1, -3,-7, 4,-6, 5,-2, 4,-6, 10,-3, 2,4, 5,3, 6,-3, 7,0, -7,0, 3,7, 4,1, -7,3, -4,-8, 8,-2, -4,2, -5,-5, 3,5, 5,-4, -3,4, -5,1, -2,1, 5,-3, -6,1, -7,0, 3,2, 8,-4, -1,-3, 5,5, -6,-2, -5,-3, 2,2, -2,7, -1,6, -7,2, 6,0, 2,9, -5,2, -1,2, -4,-5, 5,1, -2,4, -7,3, 1,6, 0,1, 8,-4, -5,3, -9,3, -6,-4, -1,8, -6,0, -4,6, 0,-7, 2,-3, 4,0, 5,1, -8,-1, 2,8, -3,-7, -4,0, -1,-9, 3,2, -3,-5, 6,0, 3,4, 6,4, 0,4, 1,5, -5,3, -4,0, 6,2, 4,-2, 9,-1, 2,9, -3,-10, -5,-3, -4,-6, 3,2, -1,-2, 2,-6, 2,-1, 3,2, -6,3, 3,1, 2,5, 4,-2, 3,10, 5,2, 8,1, 9,-3, -3,-2, -1,-5, 6,-3, 7,-4, 4,-1, -4,5, -1,-5, -4,-3, -5,1, 3,7, 0,-7, -2,2, 7,3, -3,-2, 8,0, -2,-5, -7,0, 5,-5, 1,-5, -1,-5, 4,-6, 1,5, -3,-4, 0,-1, -8,-1, -9,1, -2,-5, 6,2, -4,1, -7,3, -5,2, 3,7, -4,-2, -5,2, 7,-2, -7,-2, -5,-4, 4,6, -3,-1, 4,3, -4,2, 8,-2, -9,1, -3,-7, 3,-5, -2,-8, 0,6, -8,1, -3,2, -1,3, -5,-5, 1,-6, 7,0, -3,4, 1,6, 6,4, 2,9, 0,-2, -2,-4, 1,3, -1,-9, 0,-1, -1,-2, -2,2, 9,-1, -2,-6, 0,4, -2,2, 10,-3, 6,-3, 7,0, 3,4, -6,-4, -2,7, 0,-7, 3,2, -7,-3, -2,5, 2,5, 5,4, 6,-4, -3,-5, 0,0, 0,-4, 5,-2, 9,-1, -4,-2, -5,4, 7,0, 4,-6, -7,-2, 9,-2, -2,6, -5,2, -5,2, -1,8, 9,-2, 0,-7, -9,3, 6,-4, 4,-5, 6,1, 3,6, -4,0, 3,9, 6,-5, -1,-9, 2,0, 6,0, 2,-3, 5,-1, 7,0, -1,0, 8,-1, 8,0, -2,2, 8,-4, 4,0, 2,1, 4,-5, -2,7, -2,6, 0,4, 6,-2, 3,-4, -2,-1, 9,-2, 6,-3, -1,5, 3,-4, 1,8, -4,0, -4,-3, 4,0, 2,1, -4,0, 9,-3, 4,1, -7,-3, -3,5, 4,7, -1,-6, -6,5, -1,-5, -3,-10, 0,-6, 4,-1, 6,1, 2,4, -8,2, -8,-1, 5,6, 4,2, -7,2, 8,-2, 1,-3, 3,-4, 6,0, -2,3, 2,1, -2,0, 1,-4, -4,6, 3,-4, -1,-3, -3,-6, 2,9, -7,3, 5,5, -3,-6, 5,6, -1,-4, -2,-7, -2,-4, -7,-2, 0,8, 7,-3, 3,10, -4,0, 4,6, -1,0, 1,5, -3,-3, -6,-4, -1,5, 9,-2, 5,1, -4,0, -4,3, -3,1, -4,-8, -1,0, -1,2, 4,-2, 7,-4, 10,-3, -3,-1, 1,-4, -3,1, 2,-7, -2,-9, 0,-1, -2,6, 3,2, 5,-1, 4,-5, 3,-7, 0,-1, -5,-5, -8,0, -2,1, -2,5, 3,9, 2,-1, 6,-1, -2,1, 7,-3, -1,-4, 0,4, 1,-4, -1,-4, -1,-6, 2,-5, 5,5, 2,4, 1,-8, -3,-10, 6,-4, 2,2, -4,-6, 6,-3, 0,-8, -1,-5, 2,-6, 4,2, -5,-1, 4,-1, 1,8, -4,-3, -4,2, 4,1, 4,6, -5,5, -3,-7, 8,-4, -7,-3, 6,4, -6,5, -7,0, -4,6, -3,1, -1,-5, 2,-1, -4,-3, -6,3, 3,2, 6,4, 5,-3, -6,5, 5,-5, 3,-5, -2,-3, 0,-8, -5,2, -2,-3, 2,6, 4,0, -8,2, -7,0, 1,-2, 2,-5, 5,4, 9,-2, -2,2, 5,-1, -5,1, -1,2, -5,-1, -4,6, 4,2, 8,0, -8,-1, -7,3, -6,0, -5,1, -1,8, 3,9, 1,-6, -5,3, -7,0, -1,6, 1,6, 5,3, -8,1, -2,-1, -1,3, -6,5, -5,-3, 1,0, 6,-1, -5,4, -5,2, -3,-3, -5,5, -7,4, -3,-5, 3,6, 2,-2, 0,6, -5,-5, -4,5, 1,-2, 3,10, -1,-9, 5,-1, 2,4, 6,-4, 7,0, 0,-7, -1,0, -5,1, 7,-3, 2,5, 3,-1, -3,4, 5,-4, 8,-1, -6,5, 3,9, -6,-1, -4,2, 0,4,
        1,5, 2,-8, -2,-3, 1,6, -7,3, 7,-3, 9,1, -6,2, 0,-3, 1,1, -2,-7, 1,2, 5,-4, 6,0, -4,-4, -3,6, -4,2, -1,-5, 6,4, 2,6, -8,3, -1,-5, -2,-3, 5,0, 0,9, -7,3, -7,-2, 1,1, 7,1, -6,-4, -3,1, 0,-6, -4,-3, -8,1, -6,-2, 2,5, 6,1, 3,-6, -5,-2, 3,8, -4,-3, 3,-5, 2,-8, -2,-6, 7,3, 1,2, -2,6, -4,-4, -7,-2, -1,3, 1,-4, -1,1, 6,1, 3,4, 9,-1, -6,4, 0,-8, -5,2, 4,1, 7,-2, -3,-1, 4,1, -2,-7, -6,-4, -5,5, -6,3, -4,0, -3,5, 0,-4, 5,-5, 1,-4, 2,5, 1,9, 0,-6, 3,-4, -1,-5, 5,-2, 1,1, 3,-5, 7,0, -6,-4, 0,-5, -4,-1, 3,-3, -1,4, -1,3, 1,1, 2,7, -3,-8, -3,0, -1,-8, 5,-5, 5,-1, 5,-5, 10,-1, 2,4, 4,4, 7,-2, 6,2, -6,-2, 1,8, 4,2, -8,1, -2,-8, 8,0, -4,2, -4,-6, 2,6, 6,-3, -4,3, -6,0, -2,1, 6,-2, -6,0, -7,-1, 3,3, 8,-2, 0,-3, 4,6, -5,-3, -4,-4, 2,3, -3,7, -3,6, -7,0, 6,1, 0,9, -5,1, -1,1, -3,-6, 5,2, -3,4, -8,1, 0,6, -1,1, 8,-2, -6,2, -9,1, -5,-5, -2,7, -6,-1, -5,5, 2,-6, 3,-3, 4,1, 5,2, -7,-2, 0,8, -1,-8, -4,-1, 1,-9, 3,3, -2,-6, 6,1, 2,5, 5,5, -1,4, 0,5, -6,2, -4,-1, 5,3, 4,-2, 9,1, 0,9, -1,-10, -4,-4, -2,-6, 2,2, -1,-2, 3,-5, 2,-1, 3,3, -7,2, 3,1, 1,5, 4,-2, 1,10, 4,3, 7,2, 9,-1, -3,-3, 0,-6, 7,-2, 8,-3, 4,0, -5,4, 0,-5, -3,-4, -5,0, 1,8, 1,-7, -3,2, 6,4, -2,-2, 8,2, -1,-5, -6,-2, 6,-4, 2,-5, 0,-5, 5,-5, 0,5, -2,-5, 1,-1, -7,-2, -9,-1, -1,-5, 5,3, -4,0, -8,1, -5,1, 1,8, -4,-3, -5,1, 7,0, -7,-3, -4,-5, 2,6, -3,-1, 3,4, -4,2, 8,0, -9,-1, -1,-8, 4,-4, 0,-8, -1,6, -8,0, -3,1, -1,3, -4,-6, 3,-6, 6,2, -4,3, 0,6, 5,5, 0,9, 1,-2, -2,-4, 0,3, 1,-9, 1,-1, -1,-2, -3,2, 9,1, -1,-6, -1,4, -3,2, 10,-1, 7,-2, 6,2, 2,5, -5,-5, -3,7, 1,-7, 3,3, -6,-4, -3,4, 1,5, 4,5, 6,-2, -2,-6, 0,0, 1,-4, 5,-1, 9,1, -4,-3, -6,3, 7,1, 5,-5, -7,-3, 9,0, -3,5, -5,1, -5,1, -2,7, 9,0, 2,-6, -9,1, 6,-2, 5,-4, 6,3, 2,7, -4,-1, 1,9, 7,-3, 1,-9, 2,1, 6,1, 3,-3, 5,0, 6,2, -1,-1, 8,0, 8,2, -3,2, 8,-2, 4,1, 1,1, 5,-4, -3,7, -3,5, -1,4, 6,-1, 4,-3, -1,-1, 9,0, 7,-2, -2,5, 4,-3, 0,8, -4,-1, -3,-4, 4,1, 1,1, -4,-1, 9,-1, 4,2, -6,-4, -4,4, 3,8, 0,-6, -7,3, 0,-5, -1,-10, 1,-6, 4,0, 6,3, 2,4, -8,0, -7,-2, 3,7, 4,3, -7,0, 8,0, 1,-3, 4,-3, 6,1, -3,3, 1,1, -2,-1, 2,-4, -5,5, 4,-3, 0,-3, -2,-7, 0,9, -8,1, 4,6, -2,-7, 3,7, 0,-4, 0,-7, -2,-4, -7,-3, -2,8, 8,-1, 1,10, -4,-1, 2,6, -1,-1, 0,5, -2,-3, -5,-5, -2,5, 9,0, 5,2, -4,-1, -5,2, -3,0, -2,-8, -1,0, -1,1, 4,-2, 8,-3, 10,-1, -3,-1, 2,-4, -3,0, 3,-7, 0,-9, 0,-1, -3,5, 3,3, 6,0, 5,-4, 4,-6, 0,-1, -4,-6, -8,-2, -2,1, -3,4, 1,9, 2,-1, 6,0, -2,1, 8,-1, 0,-4, -1,4, 2,-4, 0,-4, 0,-6, 3,-4, 4,6, 2,4, 2,-7, -1,-10, 6,-2, 2,3, -2,-6, 7,-2, 2,-8, 0,-5, 3,-5, 4,3, -5,-2, 4,0, 0,8, -3,-4, -4,2, 4,2, 2,6, -6,4, -1,-8, 8,-2, -6,-4, 5,5, -7,3, -7,-1, -5,5, -3,0, 0,-6, 2,-1, -3,-4, -7,2, 3,3, 5,5, 6,-2, -7,3, 6,-4, 4,-4, -1,-3, 2,-8, -5,1, -1,-3, 1,6, 4,1, -8,0, -7,-1, 1,-1, 3,-4, 4,5, 9,0, -3,2, 6,0, -6,0, -1,1, -5,-2, -5,5, 4,3, 8,2, -7,-2, -8,1, -6,-1, -6,0, -2,7, 1,9, 3,-6, -6,2, -6,-2, -3,6, 0,6, 4,4, -8,0, -1,-1, -1,3, -7,3, -4,-4, 1,0, 6,0, -6,3, -5,1, -2,-3, -6,4, -8,3, -2,-6, 2,7, 3,-2, -1,6, -4,-6, -5,4, 1,-1, 1,10, 1,-9, 6,0, 2,4, 6,-2, 7,1, 2,-6, -1,-1, -5,0, 8,-1, 1,5, 3,0, -4,3, 6,-3, 8,0, -7,3, 1,9, -6,-3, -4,2, -1,4,
        0,5, 3,-7, -2,-4, 0,6, -7,2, 7,-2, 8,3, -6,1, 0,-3, 1,2, 0,-7, 0,2, 5,-3, 6,2, -4,-5, -4,5, -4,1, 0,-5, 5,5, 1,7, -8,1, 0,-5, -2,-4, 5,1, -2,9, -7,2, -7,-4, 1,2, 7,3, -5,-5, -4,0, 2,-6, -4,-3, -8,-1, -6,-3, 1,5, 5,2, 4,-5, -5,-3, 1,8, -4,-3, 4,-4, 3,-7, -1,-7, 6,4, 0,2, -3,6, -4,-5, -7,-4, -2,3, 1,-3, -2,1, 5,2, 2,5, 9,1, -7,2, 1,-8, -5,1, 3,1, 7,0, -3,-2, 3,1, 0,-7, -5,-5, -6,3, -6,2, -4,-1, -4,4, 1,-4, 6,-3, 2,-4, 1,5, -1,9, 1,-6, 4,-3, 0,-5, 5,-1, 1,2, 4,-4, 7,1, -5,-5, 1,-5, -3,-1, 3,-2, -2,4, -2,3, 1,2, 0,7, -1,-8, -3,0, 1,-8, 6,-4, 5,0, 6,-3, 10,2, 1,4, 4,5, 7,0, 6,3, -6,-3, -1,8, 3,3, -8,-1, 0,-9, 8,1, -4,1, -2,-7, 1,6, 6,-2, -5,2, -6,-1, -2,0, 6,-1, -6,-2, -7,-3, 2,3, 9,0, 0,-3, 2,7, -4,-4, -4,-5, 1,3, -4,6, -4,5, -7,-1, 5,2, -2,9, -5,0, -2,1, -2,-6, 5,3, -4,3, -8,-1, -2,6, -1,1, 9,0, -6,1, -9,-1, -4,-6, -4,7, -5,-2, -6,4, 3,-6, 3,-2, 3,1, 5,3, -7,-4, -1,8, 1,-8, -4,-2, 3,-8, 2,3, -1,-6, 5,2, 1,5, 3,6, -2,4, -1,5, -6,1, -4,-2, 4,4, 4,-1, 8,3, -2,9, 2,-10, -4,-5, -1,-7, 2,2, 0,-2, 4,-4, 2,0, 2,3, -7,0, 3,2, 0,5, 4,-1, -2,10, 4,3, 7,4, 9,1, -2,-3, 1,-6, 7,0, 8,-1, 4,1, -5,3, 1,-5, -2,-5, -5,-1, -1,8, 3,-7, -3,1, 5,5, -2,-2, 7,3, 0,-5, -6,-3, 7,-2, 3,-5, 1,-5, 6,-3, -1,5, -1,-5, 1,-1, -7,-4, -8,-3, 0,-5, 4,4, -4,-1, -8,-1, -5,0, -1,8, -3,-4, -5,0, 7,1, -6,-4, -3,-5, 1,7, -3,-2, 2,5, -4,1, 8,1, -8,-3, 1,-8, 5,-4, 1,-8, -2,5, -8,-2, -4,0, -2,3, -2,-7, 4,-5, 6,3, -5,2, -2,6, 4,6, -2,9, 1,-2, -1,-4, 0,3, 3,-8, 1,-1, 0,-2, -3,1, 8,3, 0,-6, -1,3, -3,1, 10,2, 7,0, 6,3, 1,5, -4,-6, -4,6, 3,-7, 2,3, -5,-5, -3,4, 0,5, 3,5, 7,-1, -1,-6, 0,0, 1,-3, 5,0, 8,3, -3,-4, -6,2, 7,3, 6,-3, -6,-4, 9,2, -4,4, -5,0, -5,0, -4,7, 9,2, 3,-6, -9,-1, 7,-1, 5,-3, 5,4, 0,7, -4,-2, -1,9, 7,-2, 3,-8, 2,1, 5,2, 3,-2, 5,1, 6,3, -1,-1, 8,2, 7,3, -3,1, 9,0, 4,2, 1,2, 5,-3, -4,6, -4,4, -1,3, 6,0, 5,-2, -1,-2, 9,2, 7,0, -3,5, 5,-2, -2,8, -3,-1, -2,-5, 4,2, 1,2, -4,-2, 9,1, 3,3, -5,-5, -5,4, 1,8, 2,-6, -7,2, 1,-5, 2,-10, 2,-5, 4,1, 5,4, 1,4, -8,-1, -7,-4, 2,7, 3,4, -7,-1, 8,1, 2,-3, 5,-2, 5,2, -3,2, 1,2, -2,-1, 3,-3, -6,4, 5,-2, 0,-3, 0,-7, -2,9, -8,-1, 2,7, 0,-7, 2,7, 1,-4, 1,-7, -1,-4, -6,-4, -3,7, 8,1, -2,10, -3,-1, 1,7, -1,-1, -1,5, -2,-4, -3,-6, -3,5, 9,2, 5,3, -3,-1, -5,1, -3,0, 0,-9, -1,0, -2,1, 4,-1, 8,-1, 10,2, -3,-2, 3,-3, -3,0, 4,-6, 2,-9, 0,-1, -4,4, 2,3, 6,1, 5,-3, 5,-5, 0,-1, -2,-7, -7,-3, -2,0, -3,4, -1,9, 2,0, 6,2, -2,0, 8,1, 1,-4, -2,4, 3,-3, 1,-4, 2,-6, 3,-4, 2,7, 1,4, 4,-7, 2,-10, 7,-1, 1,3, -1,-7, 7,0, 3,-7, 1,-5, 4,-4, 3,4, -5,-3, 4,1, -2,8, -2,-5, -4,1, 3,3, 1,7, -7,2, 1,-8, 9,0, -5,-5, 4,6, -7,2, -7,-3, -6,4, -3,0, 1,-6, 2,0, -2,-5, -7,0, 2,3, 3,6, 6,-1, -7,2, 7,-2, 5,-4, 0,-4, 3,-7, -5,0, 0,-4, 0,6, 4,2, -8,-1, -7,-3, 2,-1, 3,-4, 3,5, 9,2, -3,1, 6,1, -6,-1, -2,1, -5,-3, -6,4, 3,4, 7,3, -7,-4, -8,-1, -5,-2, -6,-1, -4,7, -1,9, 4,-5, -6,1, -6,-3, -4,5, -2,6, 4,5, -8,-2, -1,-2, -2,3, -7,2, -4,-5, 1,0, 6,2, -6,2, -5,0, -2,-4, -7,2, -8,1, -1,-6, 0,7, 3,-1, -2,5, -2,-7, -5,3, 2,-1, -2,10, 3,-8, 6,1, 1,4, 7,-1, 7,3, 3,-6, -1,-1, -5,-1, 8,1, 0,5, 3,0, -5,2, 6,-2, 8,2, -7,2, -1,9, -5,-4, -4,1, -1,3,
        -1,5, 5,-7, -1,-4, -2,6, -8,0, 8,0, 7,4, -6,-1, 1,-3, 1,2, 1,-7, 0,2, 6,-2, 6,3, -2,-5, -5,4, -4,0, 1,-5, 4,6, 0,7, -8,-1, 1,-5, -1,-4, 4,2, -4,8, -8,0, -6,-5, 1,2, 6,4, -4,-6, -4,-1, 3,-6, -3,-4, -8,-2, -5,-4, 0,5, 5,3, 5,-4, -4,-4, -1,8, -3,-4, 5,-3, 5,-7, 0,-7, 5,6, 0,2, -4,5, -2,-5, -6,-5, -2,2, 2,-3, -2,1, 5,3, 1,5, 9,3, -7,1, 3,-8, -5,0, 3,2, 7,1, -2,-2, 3,2, 1,-7, -4,-6, -7,2, -6,1, -4,-2, -5,3, 2,-4, 7,-2, 3,-3, 0,5, -3,9, 2,-5, 5,-2, 1,-5, 5,0, 1,2, 5,-3, 7,3, -4,-6, 2,-4, -3,-2, 4,-2, -3,3, -2,2, 1,2, -1,7, 1,-8, -3,-1, 2,-8, 6,-3, 5,1, 7,-2, 9,4, 0,4, 2,5, 7,1, 5,4, -5,-4, -2,8, 3,3, -8,-2, 2,-8, 8,3, -4,0, -1,-7, -1,6, 6,-1, -5,1, -5,-2, -2,0, 6,1, -6,-3, -6,-4, 2,4, 8,2, 1,-3, 1,7, -3,-5, -2,-5, 0,3, -6,5, -5,4, -7,-3, 5,3, -4,8, -5,-1, -2,1, -1,-6, 4,4, -5,2, -8,-2, -3,6, -1,0, 8,2, -6,-1, -9,-3, -3,-6, -5,6, -5,-3, -6,3, 4,-5, 4,-2, 3,2, 4,4, -6,-5, -3,8, 2,-8, -3,-3, 4,-7, 2,4, 1,-6, 5,3, 0,5, 2,7, -3,3, -2,4, -6,-1, -3,-3, 3,5, 4,0, 7,4, -4,8, 4,-9, -2,-5, 0,-7, 1,3, 0,-2, 5,-3, 2,0, 2,4, -7,-1, 2,2, -1,5, 4,0, -4,9, 3,4, 6,5, 9,3, -2,-4, 2,-5, 7,1, 8,1, 4,2, -6,2, 2,-4, -1,-5, -4,-2, -2,8, 4,-6, -3,0, 4,6, -1,-3, 7,5, 1,-5, -5,-4, 7,-1, 4,-4, 2,-4, 7,-2, -2,4, 0,-5, 1,0, -6,-5, -7,-4, 1,-5, 3,5, -4,-2, -8,-2, -5,-1, -2,8, -2,-5, -5,-1, 7,3, -5,-6, -2,-6, 0,7, -2,-2, 1,5, -4,0, 8,3, -7,-4, 2,-8, 5,-2, 3,-8, -3,5, -7,-3, -4,-1, -2,2, -1,-7, 5,-4, 5,4, -5,1, -3,6, 3,6, -4,8, 1,-2, 0,-4, -1,3, 4,-7, 1,0, 0,-2, -3,0, 7,4, 2,-6, -2,3, -3,0, 9,4, 7,1, 5,4, 0,5, -3,-6, -6,5, 4,-6, 2,4, -4,-6, -4,3, -1,5, 2,6, 7,0, 1,-6, 0,0, 2,-3, 5,1, 7,4, -2,-5, -6,1, 6,4, 7,-2, -5,-6, 8,4, -5,3, -5,-1, -5,-1, -5,6, 8,4, 4,-5, -9,-3, 7,0, 6,-2, 4,5, -1,7, -3,-3, -3,9, 8,0, 4,-7, 2,1, 5,3, 4,-2, 4,2, 5,4, 0,-1, 7,3, 7,5, -3,0, 8,2, 3,3, 1,2, 6,-2, -6,5, -5,3, -2,3, 6,2, 5,-1, -1,-2, 8,4, 7,1, -4,4, 5,-1, -3,7, -3,-2, -1,-5, 3,3, 1,2, -3,-3, 9,3, 3,3, -4,-6, -5,2, -1,8, 3,-6, -8,0, 2,-4, 4,-9, 3,-5, 4,2, 4,5, 0,4, -8,-3, -6,-5, 0,8, 2,5, -7,-3, 8,3, 2,-2, 5,-1, 5,3, -4,2, 1,2, -2,-1, 3,-3, -6,3, 5,-1, 1,-3, 1,-7, -4,8, -8,-2, 1,7, 1,-7, 0,8, 2,-4, 3,-7, 0,-4, -5,-6, -5,7, 8,2, -4,9, -3,-2, 0,7, 0,-1, -2,4, -1,-4, -2,-7, -4,4, 8,4, 4,4, -3,-2, -5,0, -3,-1, 2,-8, -1,-1, -2,1, 4,0, 8,1, 9,4, -2,-2, 3,-3, -3,-1, 6,-5, 4,-8, 1,-1, -5,3, 2,4, 5,2, 6,-2, 6,-4, 1,-1, -1,-7, -7,-5, -2,0, -4,3, -3,9, 2,0, 6,3, -2,0, 8,2, 2,-4, -3,3, 3,-3, 2,-4, 3,-6, 4,-3, 1,7, 0,4, 5,-6, 4,-9, 7,0, 0,3, 0,-7, 7,1, 5,-7, 2,-4, 5,-3, 2,5, -4,-4, 4,2, -3,7, -1,-5, -4,0, 3,3, 0,7, -7,1, 2,-8, 8,2, -4,-6, 3,6, -8,0, -6,-4, -6,3, -3,-1, 2,-5, 2,0, -1,-5, -7,-1, 2,4, 2,7, 6,1, -8,0, 7,-1, 5,-2, 1,-4, 5,-7, -5,-1, 1,-4, -2,6, 3,3, -8,-3, -6,-4, 2,-1, 4,-3, 2,6, 8,4, -3,0, 5,2, -5,-2, -2,1, -4,-4, -6,3, 2,5, 7,5, -6,-5, -8,-2, -5,-3, -5,-2, -5,6, -3,9, 5,-4, -6,-1, -5,-4, -5,4, -3,6, 2,5, -7,-3, -1,-2, -2,2, -8,0, -2,-5, 1,1, 6,3, -6,1, -5,-1, -1,-4, -7,1, -8,-1, 1,-6, -1,7, 3,0, -3,5, -1,-7, -6,2, 2,-1, -4,9, 4,-7, 5,2, 0,4, 7,0, 6,4, 4,-5, 0,-1, -4,-2, 8,2, -1,5, 3,1, -5,1, 6,-1, 7,3, -8,0, -3,9, -4,-5, -4,0, -2,3,
        -2,5, 6,-5, 0,-4, -3,6, -7,-1, 7,1, 6,6, -6,-2, 2,-2, 0,2, 3,-7, -1,2, 6,0, 5,4, -1,-6, -5,3, -4,-1, 2,-5, 2,7, -2,6, -8,-2, 2,-5, 0,-4, 4,3, -6,7, -7,-1, -4,-6, 0,2, 5,5, -2,-7, -3,-1, 4,-5, -2,-5, -7,-4, -4,-5, -1,5, 4,4, 5,-3, -3,-4, -2,8, -2,-5, 6,-2, 6,-5, 2,-6, 3,6, -1,2, -5,4, -1,-6, -4,-6, -3,2, 3,-3, -2,0, 4,4, 0,5, 8,4, -7,-1, 5,-7, -5,-1, 3,3, 7,3, -2,-3, 3,3, 3,-7, -2,-7, -7,0, -6,-1, -4,-2, -6,2, 2,-4, 7,0, 3,-3, -1,5, -4,8, 3,-5, 5,-1, 2,-5, 5,1, 0,2, 6,-2, 6,4, -2,-7, 3,-4, -3,-3, 4,-1, -3,3, -3,2, 0,2, -3,7, 2,-8, -2,-2, 4,-7, 7,-1, 5,2, 7,0, 8,5, -1,4, 1,6, 7,3, 4,5, -4,-5, -4,7, 2,4, -7,-4, 3,-8, 7,5, -4,-1, 1,-7, -2,6, 6,1, -5,0, -5,-3, -2,-1, 6,2, -5,-4, -5,-5, 1,4, 8,3, 2,-2, -1,7, -2,-6, -1,-6, 0,3, -6,3, -5,3, -6,-4, 4,4, -6,7, -5,-2, -2,0, 1,-6, 3,4, -5,1, -7,-4, -4,5, -1,0, 8,3, -6,-2, -8,-4, -1,-7, -6,4, -4,-4, -7,1, 5,-4, 4,-1, 3,3, 3,4, -4,-6, -5,7, 4,-7, -3,-3, 6,-6, 1,4, 2,-6, 4,4, -1,5, 0,7, -3,3, -3,4, -6,-2, -3,-3, 2,6, 4,1, 6,6, -6,7, 5,-8, -1,-6, 2,-6, 1,3, 1,-2, 6,-2, 2,1, 1,4, -7,-3, 2,3, -2,5, 4,1, -5,8, 2,5, 4,6, 8,4, -1,-4, 3,-5, 7,3, 8,2, 4,2, -6,0, 3,-4, 0,-5, -4,-3, -4,7, 5,-5, -3,0, 2,7, -1,-3, 5,6, 2,-5, -4,-5, 7,1, 4,-3, 3,-4, 7,0, -3,4, 1,-5, 1,0, -4,-6, -6,-6, 2,-5, 2,6, -4,-2, -7,-4, -5,-2, -4,7, -1,-5, -5,-2, 6,4, -3,-6, 0,-6, -2,6, -2,-3, 0,5, -4,-1, 7,5, -6,-6, 4,-7, 6,-1, 5,-7, -4,4, -6,-5, -3,-1, -3,2, 1,-7, 5,-3, 4,5, -5,0, -4,5, 1,7, -6,7, 2,-1, 1,-4, -2,2, 6,-6, 1,0, 1,-2, -3,0, 6,6, 3,-6, -3,3, -3,0, 8,5, 7,3, 4,5, -1,5, -1,-7, -6,3, 5,-5, 1,4, -2,-7, -5,2, -2,5, 0,6, 6,2, 2,-6, 0,0, 3,-3, 5,2, 6,6, -1,-5, -6,-1, 5,5, 7,0, -3,-6, 7,6, -6,2, -5,-2, -5,-2, -6,4, 7,6, 5,-4, -8,-4, 6,2, 6,0, 3,5, -3,7, -3,-3, -4,8, 7,1, 6,-6, 1,2, 4,4, 4,-1, 4,3, 4,5, 0,-1, 6,5, 5,6, -3,0, 8,3, 3,3, 0,2, 6,0, -6,3, -6,2, -3,3, 6,3, 5,0, 0,-2, 7,6, 7,3, -4,3, 5,0, -5,6, -3,-3, 0,-5, 3,3, 0,2, -3,-3, 8,4, 2,4, -2,-7, -6,1, -2,8, 4,-5, -7,-1, 3,-4, 5,-8, 4,-4, 4,2, 3,5, -1,4, -7,-5, -4,-6, -1,7, 1,5, -6,-4, 7,5, 3,-2, 5,0, 4,4, -4,1, 0,2, -1,-2, 4,-2, -7,1, 5,0, 2,-2, 3,-7, -6,7, -7,-4, -1,7, 3,-7, -1,7, 2,-4, 4,-6, 1,-4, -3,-6, -6,5, 7,4, -5,8, -3,-3, -2,6, 0,-1, -3,4, 0,-4, 0,-7, -4,3, 7,6, 3,4, -3,-3, -5,-1, -2,-2, 3,-8, -1,-1, -2,0, 4,1, 8,2, 8,5, -2,-3, 4,-2, -2,-2, 6,-3, 6,-7, 1,-1, -6,2, 1,4, 5,3, 6,0, 7,-2, 1,-1, 1,-7, -5,-6, -2,-1, -5,2, -4,8, 2,1, 5,4, -2,-1, 7,4, 2,-4, -3,3, 4,-2, 2,-4, 4,-5, 5,-2, -1,7, -1,4, 6,-4, 5,-8, 6,2, 0,3, 2,-6, 7,3, 6,-5, 3,-4, 6,-2, 1,5, -3,-4, 4,2, -5,6, 0,-5, -4,-1, 2,4, -2,6, -7,-1, 4,-7, 8,3, -2,-7, 1,7, -7,-1, -5,-5, -7,1, -2,-2, 3,-5, 2,1, 0,-5, -7,-3, 1,4, 0,7, 6,2, -7,-1, 7,1, 6,-1, 1,-3, 6,-5, -5,-2, 1,-3, -3,6, 3,3, -7,-5, -5,-5, 2,0, 5,-2, 0,6, 7,6, -3,0, 5,3, -5,-3, -2,0, -3,-4, -7,1, 1,5, 5,6, -4,-6, -7,-4, -4,-4, -5,-3, -6,4, -4,8, 5,-3, -6,-2, -4,-5, -5,3, -4,5, 1,6, -6,-5, 0,-2, -3,2, -7,-1, -1,-6, 1,1, 5,4, -6,-1, -5,-2, 0,-4, -7,-1, -8,-2, 2,-6, -3,7, 3,0, -4,4, 1,-7, -6,0, 2,0, -5,8, 6,-6, 5,3, -1,4, 6,2, 5,5, 5,-4, 0,-1, -4,-3, 7,4, -2,5, 2,2, -5,0, 6,1, 6,5, -7,-1, -4,8, -3,-5, -4,-1, -3,3,
        -3,4, 7,-4, 1,-4, -4,5, -7,-3, 7,3, 5,7, -5,-3, 2,-2, 0,2, 4,-6, -1,2, 6,1, 4,5, 0,-6, -6,2, -4,-2, 3,-4, 1,7, -3,6, -7,-4, 3,-4, 1,-4, 3,4, -7,6, -7,-3, -3,-7, 0,2, 4,6, -1,-7, -3,-2, 5,-4, -1,-5, -6,-5, -3,-6, -2,5, 3,5, 6,-2, -2,-5, -4,7, -1,-5, 6,-1, 7,-4, 3,-6, 2,7, -1,2, -6,3, 0,-6, -3,-7, -3,1, 3,-2, -2,0, 3,5, -1,5, 7,6, -7,-2, 6,-6, -5,-2, 2,3, 6,4, -1,-3, 2,3, 4,-6, -1,-7, -7,-1, -6,-2, -3,-3, -6,1, 3,-3, 7,1, 4,-2, -2,5, -6,7, 4,-4, 5,0, 3,-4, 5,2, 0,2, 6,-1, 5,5, -1,-7, 4,-3, -2,-3, 4,0, -4,2, -3,1, 0,2, -4,6, 4,-7, -2,-2, 5,-6, 7,0, 4,3, 7,1, 7,7, -2,4, 0,6, 6,4, 3,6, -3,-6, -5,6, 1,4, -6,-5, 5,-7, 6,6, -4,-2, 2,-7, -3,5, 6,2, -5,-1, -4,-4, -2,-1, 5,3, -4,-5, -4,-6, 0,4, 7,5, 2,-2, -2,7, -1,-6, 0,-6, -1,3, -7,2, -6,2, -5,-5, 3,5, -7,6, -4,-3, -2,0, 2,-6, 2,5, -5,0, -6,-5, -5,4, -1,0, 7,5, -5,-3, -7,-6, 0,-7, -7,3, -3,-5, -7,0, 6,-3, 4,0, 2,3, 2,5, -3,-7, -6,6, 5,-6, -2,-4, 7,-5, 0,4, 3,-5, 3,5, -2,5, -1,7, -4,2, -4,3, -5,-3, -2,-4, 1,6, 4,2, 5,7, -7,6, 7,-7, 0,-6, 3,-6, 0,3, 1,-2, 6,-1, 2,1, 0,4, -6,-4, 1,3, -3,4, 4,2, -7,7, 1,5, 3,7, 7,6, 0,-4, 4,-4, 6,4, 7,4, 3,3, -6,-1, 4,-3, 1,-5, -3,-4, -5,6, 6,-4, -3,-1, 1,7, 0,-3, 4,7, 3,-4, -3,-6, 7,2, 5,-2, 4,-3, 7,1, -4,3, 2,-5, 1,0, -3,-7, -5,-7, 3,-4, 1,6, -3,-3, -6,-5, -4,-3, -5,6, 0,-5, -4,-3, 5,5, -2,-7, 1,-6, -3,6, -1,-3, -1,5, -4,-2, 6,6, -5,-7, 5,-6, 6,0, 6,-6, -5,3, -5,-6, -3,-2, -3,1, 2,-7, 6,-2, 3,6, -5,-1, -5,4, 0,7, -7,6, 2,-1, 2,-4, -2,2, 7,-5, 1,0, 1,-2, -3,-1, 5,7, 4,-5, -3,2, -3,-1, 7,7, 6,4, 3,6, -2,5, 0,-7, -7,2, 6,-4, 0,4, -1,-7, -5,1, -3,4, -1,6, 6,3, 3,-5, 0,0, 3,-2, 4,3, 5,7, 0,-5, -6,-2, 4,6, 7,1, -2,-7, 6,7, -6,1, -4,-3, -4,-3, -7,3, 6,7, 6,-3, -7,-6, 6,3, 6,1, 2,6, -4,6, -2,-4, -6,7, 7,3, 7,-5, 1,2, 3,5, 4,0, 3,4, 3,6, 0,-1, 5,6, 4,7, -3,-1, 7,5, 2,4, 0,2, 6,1, -7,2, -6,1, -3,2, 5,4, 5,1, 0,-2, 6,7, 6,4, -5,2, 5,1, -6,5, -2,-3, 1,-5, 2,4, 0,2, -2,-4, 7,6, 1,4, -1,-7, -6,0, -4,7, 5,-4, -7,-3, 4,-3, 7,-7, 5,-3, 3,3, 2,6, -2,4, -6,-6, -3,-7, -3,7, 0,5, -5,-5, 6,6, 3,-1, 5,1, 3,5, -4,0, 0,2, -1,-2, 4,-1, -7,0, 5,1, 2,-2, 4,-6, -7,6, -6,-5, -2,7, 4,-6, -3,7, 3,-3, 5,-5, 2,-4, -2,-7, -7,4, 6,5, -7,7, -2,-3, -3,6, 0,-1, -4,3, 1,-4, 1,-7, -5,2, 6,7, 2,5, -2,-3, -5,-2, -2,-2, 5,-7, -1,-1, -2,0, 4,2, 7,4, 7,7, -1,-3, 4,-1, -2,-2, 7,-2, 7,-6, 1,-1, -6,1, 0,4, 4,4, 6,1, 7,-1, 1,-1, 2,-7, -4,-7, -2,-1, -5,1, -6,7, 2,1, 4,5, -2,-1, 6,5, 3,-3, -4,2, 4,-1, 3,-3, 5,-4, 5,-1, -2,7, -2,4, 7,-3, 7,-7, 6,3, -1,3, 3,-6, 6,4, 7,-4, 4,-3, 6,-1, 0,5, -2,-5, 3,3, -6,5, 1,-5, -4,-2, 1,4, -3,6, -7,-2, 5,-6, 7,5, -1,-7, 0,7, -7,-3, -4,-6, -7,0, -2,-2, 4,-4, 2,1, 1,-5, -6,-4, 0,4, -1,7, 5,3, -7,-3, 7,2, 6,0, 2,-3, 7,-4, -4,-3, 2,-3, -4,5, 2,4, -6,-6, -4,-6, 2,0, 5,-1, -1,6, 6,7, -3,-1, 4,4, -4,-4, -2,0, -2,-5, -7,0, 0,5, 4,7, -3,-7, -6,-5, -3,-5, -4,-4, -7,3, -6,7, 6,-2, -5,-3, -3,-6, -6,2, -5,4, 0,6, -5,-6, 0,-2, -3,1, -7,-3, 0,-6, 1,1, 4,5, -6,-2, -4,-3, 1,-4, -7,-2, -7,-4, 3,-5, -4,6, 3,1, -5,3, 2,-7, -6,-1, 2,0, -7,7, 7,-5, 4,4, -2,4, 6,3, 4,6, 6,-3, 0,-1, -3,-4, 6,5, -3,4, 2,2, -5,-1, 6,2, 5,6, -7,-3, -6,7, -2,-6, -4,-2, -3,2,
        -4,3, 8,-2, 2,-4, -5,4, -6,-4, 6,4, 3,8, -4,-4, 2,-2, 0,2, 5,-5, -1,2, 6,2, 3,6, 1,-6, -6,1, -3,-3, 4,-3, 0,7, -4,5, -6,-5, 4,-3, 2,-4, 2,5, -8,4, -6,-4, -1,-7, 0,2, 3,7, 0,-7, -3,-3, 6,-3, 0,-5, -5,-6, -2,-6, -3,4, 2,6, 6,-1, -1,-5, -5,6, 0,-5, 6,0, 8,-2, 4,-5, 1,7, -1,2, -6,2, 1,-6, -1,-7, -3,0, 3,-1, -2,0, 2,6, -2,5, 6,7, -6,-3, 7,-5, -4,-3, 1,3, 5,5, 0,-3, 1,3, 5,-5, 0,-7, -7,-2, -5,-3, -2,-4, -6,0, 4,-2, 7,2, 4,-1, -3,4, -7,6, 5,-3, 5,1, 4,-3, 4,3, 0,2, 6,0, 4,6, 0,-7, 5,-2, -1,-3, 4,1, -4,1, -3,0, 0,2, -5,5, 5,-6, -2,-2, 6,-5, 7,1, 3,4, 7,2, 5,8, -3,3, -1,6, 5,5, 2,6, -2,-6, -6,5, 0,4, -5,-6, 6,-6, 5,7, -3,-3, 3,-6, -4,4, 5,3, -5,-2, -3,-5, -2,-1, 4,4, -3,-6, -3,-7, -1,4, 6,6, 2,-2, -3,6, 0,-6, 1,-6, -2,3, -7,1, -6,1, -4,-6, 2,6, -8,4, -3,-4, -2,0, 3,-5, 1,5, -5,-1, -5,-6, -6,3, -1,0, 6,6, -4,-4, -6,-7, 1,-7, -7,1, -2,-6, -7,-1, 6,-2, 4,1, 1,3, 1,5, -1,-7, -7,5, 6,-5, -1,-4, 8,-3, -1,4, 4,-4, 2,6, -3,4, -2,7, -4,1, -5,2, -4,-4, -1,-4, 0,6, 3,3, 3,8, -8,4, 8,-5, 1,-6, 4,-5, -1,3, 1,-2, 6,0, 2,1, -1,4, -5,-5, 0,3, -4,3, 3,3, -8,5, 0,5, 1,7, 6,7, 1,-4, 5,-3, 5,5, 6,5, 2,4, -6,-2, 5,-2, 2,-5, -2,-5, -6,5, 7,-3, -3,-2, 0,7, 1,-3, 2,8, 4,-3, -2,-6, 6,3, 5,-1, 5,-2, 7,2, -5,2, 3,-4, 1,0, -1,-7, -3,-8, 4,-3, 0,6, -2,-4, -5,-6, -3,-4, -6,5, 1,-5, -3,-4, 4,6, -1,-7, 2,-6, -4,5, 0,-3, -2,5, -3,-3, 5,7, -3,-8, 6,-5, 6,1, 7,-5, -6,2, -4,-7, -3,-3, -3,0, 3,-6, 6,-1, 2,6, -5,-2, -6,3, -1,7, -8,4, 2,-1, 3,-3, -2,2, 8,-3, 1,0, 1,-2, -3,-2, 3,8, 5,-4, -3,1, -3,-2, 5,8, 5,5, 2,6, -3,4, 1,-7, -7,1, 7,-3, -1,4, 0,-7, -5,0, -4,3, -2,6, 5,4, 4,-4, 0,0, 3,-1, 3,4, 3,8, 1,-5, -5,-3, 3,7, 7,2, -1,-7, 4,8, -6,0, -3,-4, -3,-4, -7,1, 4,8, 6,-2, -6,-7, 5,4, 6,2, 1,6, -5,5, -1,-4, -7,6, 6,4, 8,-3, 1,2, 2,6, 4,1, 2,5, 2,6, 0,-1, 4,7, 2,8, -3,-2, 6,6, 1,4, 0,2, 6,2, -7,1, -6,0, -3,1, 4,5, 5,2, 0,-2, 4,8, 5,5, -5,1, 5,2, -7,4, -1,-3, 2,-5, 1,4, 0,2, -1,-4, 6,7, 0,4, 0,-7, -6,-1, -5,6, 6,-3, -6,-4, 5,-2, 8,-5, 6,-2, 2,4, 1,6, -3,3, -5,-7, -1,-7, -4,6, -1,5, -4,-6, 5,7, 3,0, 5,2, 2,6, -4,-1, 0,2, -1,-2, 4,0, -7,-1, 5,2, 2,-2, 5,-5, -8,4, -5,-6, -3,6, 5,-5, -4,6, 4,-2, 6,-4, 3,-3, -1,-7, -8,2, 5,6, -8,5, -1,-3, -4,5, 0,-1, -5,2, 2,-4, 2,-7, -5,1, 4,8, 1,5, -1,-3, -4,-3, -2,-2, 6,-6, -1,-1, -2,0, 3,3, 6,5, 5,8, 0,-3, 4,0, -2,-2, 7,-1, 8,-4, 1,-1, -6,0, -1,4, 3,5, 6,2, 7,0, 1,-1, 3,-6, -2,-8, -2,-1, -5,0, -7,6, 2,1, 3,6, -2,-1, 5,6, 4,-2, -4,1, 4,0, 4,-2, 6,-3, 5,0, -3,6, -3,3, 7,-1, 8,-5, 5,4, -2,3, 4,-5, 5,5, 8,-2, 5,-2, 6,0, -1,5, -1,-5, 2,4, -7,4, 2,-5, -3,-3, 0,4, -4,5, -6,-3, 6,-5, 6,6, 0,-7, -1,7, -6,-4, -3,-7, -7,-1, -2,-2, 5,-3, 2,1, 2,-5, -5,-5, -1,4, -2,7, 4,4, -6,-4, 6,3, 6,1, 3,-3, 8,-2, -3,-4, 3,-3, -5,4, 1,4, -5,-7, -3,-7, 2,0, 5,0, -2,6, 4,8, -3,-2, 3,5, -3,-5, -2,0, -1,-5, -7,-1, -1,5, 2,8, -1,-7, -5,-6, -2,-6, -3,-5, -7,1, -7,6, 6,-1, -4,-4, -2,-6, -6,1, -6,3, -1,6, -4,-7, 0,-2, -3,0, -6,-4, 1,-6, 1,1, 3,6, -5,-3, -3,-4, 2,-4, -6,-3, -6,-5, 4,-4, -5,5, 3,2, -6,2, 3,-6, -6,-2, 2,0, -8,5, 8,-3, 3,5, -3,3, 5,4, 3,7, 6,-2, 0,-1, -2,-5, 5,6, -4,3, 2,2, -5,-2, 5,3, 4,7, -6,-4, -7,6, -1,-6, -3,-3, -3,1,
        -4,2, 8,-1, 3,-3, -6,3, -5,-6, 5,6, 2,8, -3,-5, 3,-1, -1,2, 6,-4, -2,1, 5,3, 2,6, 2,-5, -6,-1, -3,-3, 4,-2, -2,7, -5,4, -5,-7, 4,-2, 3,-3, 1,5, -9,3, -5,-6, 0,-8, -1,2, 1,7, 2,-7, -2,-3, 6,-2, 1,-5, -3,-7, 0,-7, -4,4, 1,6, 6,1, 0,-5, -7,5, 1,-5, 6,2, 8,-1, 5,-4, -1,7, -2,1, -7,0, 2,-5, 0,-8, -3,0, 4,-1, -2,-1, 1,6, -3,4, 4,8, -6,-5, 8,-3, -4,-4, 1,4, 4,6, 0,-3, 1,4, 6,-4, 2,-7, -6,-4, -5,-4, -2,-4, -6,-2, 4,-2, 6,4, 4,0, -4,4, -8,4, 5,-2, 5,2, 4,-2, 4,4, -1,2, 6,2, 3,7, 2,-7, 5,-1, -1,-4, 4,2, -4,0, -3,0, -1,2, -6,4, 7,-5, -1,-3, 7,-3, 6,3, 2,4, 6,4, 4,9, -3,3, -2,5, 4,6, 0,7, 0,-7, -7,3, -1,4, -3,-7, 7,-4, 3,8, -3,-3, 5,-6, -5,3, 5,4, -4,-3, -2,-5, -1,-2, 3,5, -2,-6, -1,-7, -2,4, 4,7, 3,-1, -5,6, 2,-6, 2,-5, -2,2, -7,-1, -6,-1, -3,-7, 1,6, -9,3, -2,-4, -2,-1, 4,-5, 0,5, -5,-2, -3,-7, -6,2, -1,0, 4,7, -3,-5, -4,-8, 3,-6, -8,0, -1,-6, -6,-3, 7,0, 4,2, 1,4, 0,5, 0,-8, -8,3, 7,-3, 0,-4, 8,-2, -2,4, 5,-3, 1,6, -4,4, -4,6, -4,0, -5,1, -3,-5, 0,-4, -2,6, 3,3, 2,8, -9,3, 9,-4, 2,-5, 5,-4, -1,3, 2,-1, 6,2, 1,2, -2,4, -4,-6, 0,3, -4,2, 3,3, -9,4, -1,5, 0,8, 4,8, 2,-4, 5,-2, 4,6, 5,7, 2,4, -5,-3, 5,-1, 3,-4, -1,-5, -7,3, 7,-1, -2,-2, -2,7, 1,-3, 1,8, 4,-2, 0,-7, 6,5, 5,0, 5,-1, 6,4, -5,1, 4,-4, 1,0, 0,-8, -2,-8, 4,-2, -2,6, -2,-4, -3,-7, -2,-4, -7,3, 2,-5, -2,-4, 3,7, 1,-7, 3,-5, -5,4, 0,-3, -3,4, -3,-3, 3,8, -2,-8, 7,-3, 5,2, 8,-3, -6,1, -2,-8, -2,-3, -3,0, 5,-6, 6,1, 0,7, -4,-3, -6,2, -3,6, -9,3, 2,0, 3,-3, -3,1, 8,-2, 1,0, 2,-1, -2,-2, 2,8, 6,-3, -4,1, -2,-2, 4,9, 4,6, 0,7, -4,4, 3,-6, -7,-1, 7,-1, -2,4, 2,-7, -5,-1, -4,2, -3,5, 4,5, 5,-3, 0,0, 4,-1, 2,4, 2,8, 2,-5, -5,-4, 1,7, 6,4, 1,-7, 3,9, -6,-2, -2,-4, -2,-4, -8,0, 3,9, 7,0, -4,-8, 4,5, 5,3, -1,6, -6,4, 0,-4, -8,4, 5,6, 8,-2, 0,2, 1,6, 4,2, 1,5, 0,7, 0,-1, 2,8, 1,8, -2,-2, 4,7, 0,4, -1,2, 5,3, -7,-1, -6,-2, -4,1, 3,6, 4,3, 1,-2, 3,9, 4,6, -5,0, 4,3, -8,2, -1,-4, 3,-4, 0,4, -1,2, 0,-4, 4,8, -1,4, 2,-7, -5,-2, -7,5, 6,-2, -5,-6, 5,-1, 9,-4, 6,-1, 2,4, -1,6, -3,3, -3,-8, 0,-8, -6,5, -2,5, -3,-7, 3,8, 3,0, 4,3, 1,6, -4,-2, -1,2, 0,-2, 4,1, -6,-3, 4,3, 3,-1, 6,-4, -9,3, -3,-7, -5,6, 6,-4, -6,5, 4,-2, 7,-3, 3,-3, 1,-7, -8,1, 3,7, -9,4, -1,-4, -5,4, 0,-1, -5,1, 3,-3, 4,-6, -5,0, 3,9, 0,5, -1,-4, -4,-4, -1,-3, 7,-4, -1,-1, -2,-1, 3,3, 5,7, 4,9, 0,-3, 4,1, -1,-3, 7,1, 9,-3, 1,-1, -6,-2, -2,4, 2,5, 5,3, 7,2, 1,-1, 5,-6, -1,-8, -1,-2, -5,-1, -8,4, 1,2, 2,6, -1,-2, 3,7, 4,-2, -4,0, 4,1, 4,-2, 6,-2, 5,1, -5,6, -3,3, 8,0, 9,-4, 4,5, -2,2, 5,-4, 4,6, 8,-1, 5,-1, 6,2, -2,5, 0,-5, 2,4, -8,2, 3,-4, -3,-3, -1,4, -5,4, -6,-5, 7,-3, 4,7, 2,-7, -3,6, -5,-6, -1,-7, -6,-3, -1,-3, 5,-2, 1,2, 3,-4, -4,-6, -2,4, -4,6, 3,5, -5,-6, 6,5, 5,2, 3,-2, 8,-1, -2,-4, 3,-2, -6,3, 0,4, -3,-8, -1,-7, 2,1, 5,1, -3,5, 3,9, -2,-2, 2,5, -2,-5, -2,-1, 0,-5, -6,-3, -2,5, 1,8, 0,-8, -3,-7, -1,-6, -2,-5, -8,0, -8,4, 6,1, -3,-5, 0,-7, -6,-1, -6,2, -2,5, -2,-8, 1,-2, -3,0, -5,-6, 2,-5, 1,1, 2,6, -5,-4, -2,-4, 3,-3, -6,-5, -5,-7, 5,-3, -6,4, 2,2, -6,1, 5,-6, -5,-3, 2,1, -9,4, 8,-2, 2,5, -3,3, 4,5, 1,7, 7,0, 0,-1, -1,-5, 3,7, -4,2, 1,3, -4,-3, 5,4, 2,8, -5,-6, -8,4, 1,-6, -3,-3, -4,1,
        -5,1, 8,1, 3,-3, -6,2, -4,-7, 4,7, 0,9, -2,-5, 3,0, -1,2, 7,-3, -2,1, 4,4, 0,6, 4,-5, -6,-2, -2,-4, 5,-1, -3,6, -6,3, -3,-7, 5,-1, 3,-3, 0,5, -9,1, -4,-7, 2,-7, -1,2, 0,7, 3,-6, -1,-3, 6,0, 2,-5, -2,-8, 1,-7, -5,3, -1,6, 6,2, 1,-5, -7,3, 2,-5, 5,3, 8,1, 6,-3, -2,7, -2,1, -7,-1, 4,-5, 2,-7, -3,-1, 4,0, -2,-1, -1,6, -4,3, 2,9, -4,-6, 8,-1, -3,-5, 0,4, 3,7, 1,-3, 0,4, 7,-3, 3,-6, -5,-5, -4,-5, -1,-4, -5,-3, 4,-1, 5,5, 4,1, -5,3, -9,2, 6,-1, 4,3, 5,-1, 3,5, -1,2, 5,3, 1,7, 3,-6, 5,0, 0,-4, 3,2, -4,-1, -3,-1, -1,2, -7,3, 7,-3, 0,-3, 8,-2, 6,4, 1,5, 5,5, 2,10, -4,2, -4,5, 3,7, -1,7, 1,-7, -8,2, -2,4, -2,-8, 8,-3, 1,8, -2,-4, 6,-4, -5,2, 4,5, -3,-4, -1,-6, -1,-2, 2,5, 0,-6, 0,-7, -2,3, 3,8, 3,0, -6,4, 3,-5, 4,-5, -3,2, -7,-2, -6,-2, -1,-7, -1,6, -9,1, -1,-5, -2,-1, 5,-4, -1,5, -4,-3, -2,-8, -6,0, -1,-1, 3,8, -2,-5, -2,-9, 4,-6, -7,-2, 1,-6, -6,-4, 7,1, 3,2, 0,4, -1,5, 2,-7, -8,1, 8,-2, 1,-4, 9,0, -2,3, 5,-2, -1,6, -5,3, -5,5, -4,-1, -5,0, -2,-5, 1,-4, -3,5, 2,4, 0,9, -9,1, 10,-2, 4,-5, 6,-3, -2,2, 2,-1, 5,3, 1,2, -2,3, -3,-7, -1,3, -5,1, 2,4, -10,2, -2,5, -2,7, 2,9, 2,-3, 6,-1, 3,7, 3,7, 1,4, -4,-4, 5,0, 4,-3, 0,-5, -8,2, 7,0, -2,-3, -3,6, 2,-2, -1,8, 5,-1, 1,-7, 4,6, 5,1, 5,0, 5,5, -5,0, 5,-3, 1,1, 2,-7, 0,-9, 5,-1, -3,5, -1,-4, -2,-8, -1,-5, -8,2, 3,-4, -1,-5, 1,7, 2,-7, 4,-4, -6,3, 1,-3, -4,3, -2,-4, 1,8, 0,-9, 8,-2, 5,4, 8,-1, -6,-1, -1,-8, -1,-3, -3,-1, 6,-4, 6,2, -1,7, -3,-4, -6,0, -4,6, -9,1, 2,0, 4,-2, -3,0, 9,0, 1,1, 2,-1, -2,-3, 0,9, 6,-2, -4,0, -2,-3, 2,10, 3,7, -1,7, -5,3, 4,-6, -7,-2, 7,0, -2,3, 3,-6, -5,-2, -5,1, -4,4, 3,6, 5,-2, 0,0, 4,0, 1,5, 0,9, 3,-4, -4,-5, 0,7, 5,5, 2,-7, 1,9, -5,-3, -1,-5, -1,-5, -7,-2, 1,9, 7,1, -2,-9, 3,6, 4,4, -2,6, -7,3, 1,-4, -9,2, 4,7, 9,0, 0,2, -1,6, 3,2, 0,5, -1,7, 1,-1, 1,8, -1,8, -2,-3, 3,8, -1,4, -1,2, 4,4, -7,-2, -5,-3, -4,0, 2,6, 3,4, 1,-2, 1,9, 3,7, -5,-1, 3,4, -8,1, 0,-4, 4,-3, -1,4, -1,2, 1,-4, 2,9, -2,4, 3,-6, -5,-4, -7,3, 6,0, -4,-7, 5,0, 10,-2, 6,1, 1,4, -2,6, -4,2, -1,-8, 2,-7, -7,4, -3,4, -1,-7, 1,8, 3,1, 3,4, -1,6, -3,-2, -1,2, 0,-2, 4,2, -6,-4, 3,4, 3,0, 7,-3, -9,1, -2,-8, -6,4, 7,-3, -7,4, 4,-1, 7,-1, 4,-2, 2,-7, -8,-1, 2,8, -10,2, 0,-4, -6,3, 1,-1, -5,0, 3,-3, 5,-5, -5,-1, 1,9, -1,5, 0,-4, -3,-5, 0,-3, 8,-3, 0,-1, -2,-1, 2,4, 3,7, 2,10, 1,-3, 4,2, 0,-3, 7,2, 9,-1, 1,0, -5,-3, -2,3, 1,6, 4,4, 6,3, 1,0, 6,-4, 1,-8, -1,-2, -5,-2, -9,2, 1,2, 0,6, -1,-2, 2,8, 4,-1, -4,-1, 4,2, 4,-1, 6,0, 5,2, -6,4, -4,2, 7,2, 10,-2, 3,6, -3,2, 6,-3, 3,7, 8,1, 5,0, 5,3, -3,4, 1,-5, 1,4, -8,1, 4,-3, -2,-4, -2,4, -6,3, -4,-6, 8,-2, 3,8, 3,-6, -4,6, -4,-7, 0,-7, -6,-4, 0,-3, 6,-1, 1,2, 4,-3, -3,-7, -2,3, -5,5, 2,5, -4,-7, 4,6, 5,4, 3,-1, 8,1, -1,-5, 3,-1, -6,2, -1,4, -1,-8, 0,-7, 2,1, 5,2, -4,4, 1,9, -2,-3, 1,6, -1,-6, -2,-1, 1,-5, -6,-4, -3,4, -1,8, 2,-7, -2,-8, 1,-6, -1,-6, -7,-2, -9,2, 6,2, -2,-5, 1,-7, -6,-2, -6,0, -4,5, -1,-8, 1,-2, -3,-1, -4,-7, 4,-5, 0,1, 0,6, -4,-5, -1,-5, 3,-3, -4,-6, -3,-7, 5,-2, -7,3, 2,3, -6,-1, 6,-4, -4,-4, 2,1, -10,2, 9,0, 1,6, -4,2, 3,6, 0,7, 7,1, 1,-1, 0,-5, 2,8, -5,1, 0,3, -3,-4, 4,5, 1,8, -4,-7, -9,2, 2,-6, -2,-4, -4,0,
        -5,0, 8,3, 4,-2, -6,0, -2,-7, 2,7, -2,8, -1,-6, 3,0, -1,1, 7,-1, -2,1, 3,5, -1,6, 4,-4, -6,-3, -1,-4, 5,0, -5,5, -6,2, -2,-8, 5,0, 4,-2, -1,5, -9,-1, -2,-7, 3,-7, -1,1, -2,7, 5,-5, -1,-4, 6,1, 3,-4, 0,-8, 2,-6, -5,2, -2,6, 6,3, 2,-5, -8,2, 3,-4, 5,4, 8,3, 6,-2, -4,6, -2,1, -6,-2, 4,-4, 3,-7, -3,-2, 3,1, -1,-1, -2,6, -4,3, 0,9, -3,-7, 8,0, -2,-5, -1,3, 1,7, 2,-3, -1,3, 7,-1, 5,-5, -4,-6, -3,-6, 0,-4, -5,-4, 4,0, 4,6, 4,2, -5,2, -9,0, 6,0, 3,4, 5,0, 2,5, -1,1, 5,4, 0,7, 5,-5, 5,1, 1,-3, 3,3, -4,-2, -3,-2, -1,1, -7,1, 8,-2, 0,-3, 8,0, 5,5, 0,5, 4,6, -1,10, -4,1, -4,4, 1,7, -2,6, 2,-6, -8,0, -2,3, 0,-8, 9,-1, 0,8, -1,-4, 7,-3, -6,1, 3,6, -3,-4, 0,-6, -1,-2, 1,6, 1,-6, 2,-7, -3,3, 1,9, 3,0, -7,3, 4,-5, 4,-4, -3,1, -6,-4, -6,-3, 0,-7, -2,6, -9,-1, 0,-5, -1,-1, 6,-3, -2,5, -3,-4, 0,-8, -6,-1, -1,-1, 1,9, -1,-6, 0,-9, 5,-5, -7,-3, 2,-6, -5,-5, 6,2, 3,3, -1,3, -2,5, 3,-7, -8,0, 8,0, 2,-4, 8,2, -3,3, 6,-1, -2,6, -5,2, -6,4, -4,-2, -5,-1, -1,-6, 2,-4, -4,5, 1,4, -2,8, -9,-1, 10,1, 4,-4, 6,-2, -2,2, 2,-1, 5,4, 1,2, -3,3, -1,-7, -2,3, -5,0, 1,4, -10,-1, -3,4, -3,7, 0,9, 3,-3, 6,0, 1,7, 2,8, 0,4, -3,-5, 5,1, 4,-3, 1,-5, -8,0, 7,2, -1,-3, -5,5, 2,-2, -3,8, 5,0, 2,-6, 3,7, 5,2, 5,1, 4,6, -5,-1, 5,-2, 1,1, 3,-7, 2,-8, 5,0, -4,5, 0,-4, 0,-8, 0,-5, -8,0, 4,-3, 0,-5, 0,7, 4,-6, 5,-3, -6,2, 2,-3, -4,3, -1,-4, 0,8, 2,-8, 8,0, 4,4, 8,0, -6,-2, 1,-8, -1,-4, -3,-2, 7,-3, 6,3, -2,6, -3,-4, -6,-1, -5,5, -9,-1, 2,1, 4,-1, -3,0, 8,2, 1,1, 2,-1, -1,-3, -2,8, 6,0, -3,-1, -1,-3, -1,10, 1,7, -2,6, -5,2, 5,-5, -6,-4, 7,2, -3,3, 5,-5, -4,-3, -5,0, -5,3, 2,6, 6,-1, 0,0, 3,1, 0,5, -2,8, 4,-3, -3,-6, -2,7, 4,6, 4,-6, -1,9, -5,-4, 0,-5, 0,-5, -7,-3, -1,9, 6,2, 0,-9, 2,6, 3,5, -3,6, -7,1, 2,-4, -9,0, 2,7, 8,2, -1,2, -2,6, 3,3, -1,5, -2,6, 1,-1, -1,8, -3,8, -1,-3, 1,9, -2,4, -1,1, 3,5, -6,-4, -5,-4, -3,-1, 0,6, 3,4, 1,-1, -1,9, 1,7, -5,-2, 3,4, -8,-1, 1,-3, 4,-3, -2,4, -1,1, 2,-4, 0,9, -2,3, 5,-5, -4,-4, -8,2, 6,1, -2,-7, 5,1, 10,1, 6,2, 0,4, -3,6, -4,1, 0,-8, 3,-7, -7,2, -4,3, 0,-7, 0,8, 3,2, 3,4, -2,6, -3,-3, -1,1, 1,-2, 3,2, -5,-5, 3,4, 3,0, 7,-1, -9,-1, 0,-8, -7,3, 7,-1, -7,2, 4,0, 7,0, 4,-1, 4,-6, -8,-3, 0,8, -10,-1, 1,-3, -6,2, 1,-1, -5,-1, 4,-2, 6,-4, -5,-2, -1,9, -2,5, 1,-3, -2,-5, 0,-3, 9,-1, 0,-1, -1,-1, 1,4, 2,8, -1,10, 2,-3, 3,2, 0,-3, 6,4, 9,1, 1,0, -5,-4, -3,3, 0,6, 3,5, 5,5, 1,0, 7,-3, 3,-8, -1,-2, -4,-3, -9,0, 1,2, -1,6, -1,-2, 0,8, 4,0, -4,-2, 3,2, 4,0, 6,1, 4,3, -7,3, -4,1, 7,3, 10,1, 2,6, -3,1, 6,-2, 1,7, 8,3, 5,1, 5,4, -4,3, 2,-5, 0,4, -8,-1, 4,-3, -1,-4, -2,3, -6,2, -3,-7, 8,0, 1,9, 5,-5, -5,5, -2,-7, 2,-7, -5,-5, 0,-3, 6,0, 1,2, 4,-3, -1,-7, -3,3, -6,4, 1,6, -2,-7, 3,7, 4,4, 4,-1, 8,3, 0,-5, 4,-1, -6,0, -2,4, 0,-8, 2,-7, 1,1, 4,3, -5,3, -1,9, -1,-3, 0,6, 0,-6, -1,-1, 2,-5, -5,-5, -4,3, -3,8, 3,-7, 0,-8, 2,-6, 0,-6, -7,-3, -9,0, 6,3, -1,-6, 2,-6, -6,-3, -6,-1, -4,4, 1,-8, 1,-1, -3,-2, -2,-7, 4,-4, 0,1, -1,6, -3,-6, 0,-5, 4,-2, -3,-7, -2,-8, 6,-1, -7,1, 1,3, -6,-2, 7,-3, -3,-5, 1,1, -10,-1, 8,2, 0,6, -4,1, 2,6, -2,7, 6,2, 1,-1, 1,-5, 0,8, -5,0, 0,3, -3,-4, 3,6, -1,8, -2,-7, -9,0, 3,-6, -1,-4, -3,-1,
        -5,-1, 7,4, 4,-1, -6,-1, -1,-8, 1,8, -4,8, 0,-6, 3,1, -2,1, 7,0, -2,0, 2,6, -2,6, 5,-3, -5,-4, 0,-4, 5,1, -6,4, -7,0, 0,-8, 5,1, 4,-1, -2,5, -9,-3, -1,-8, 5,-6, -2,1, -3,6, 6,-4, 0,-4, 6,2, 4,-3, 1,-8, 4,-6, -5,1, -3,5, 5,4, 3,-4, -8,0, 4,-3, 4,5, 7,4, 7,0, -5,5, -2,0, -6,-4, 5,-3, 5,-6, -2,-2, 3,2, -1,-2, -3,5, -5,2, -2,9, -2,-7, 8,2, -1,-5, -2,3, 0,7, 2,-2, -2,3, 7,0, 6,-4, -3,-7, -1,-6, 1,-4, -4,-5, 4,1, 3,7, 4,2, -5,1, -9,-2, 5,1, 2,4, 5,1, 1,5, -2,1, 4,5, -2,7, 6,-4, 5,2, 2,-3, 2,3, -4,-2, -2,-2, -2,1, -7,0, 8,0, 1,-3, 8,1, 4,6, -1,5, 3,7, -3,10, -4,0, -5,3, 0,7, -4,6, 4,-6, -8,-1, -3,3, 1,-8, 9,1, -2,8, 0,-4, 7,-2, -6,0, 1,6, -2,-5, 1,-5, 0,-2, 0,6, 2,-6, 3,-6, -3,2, -1,9, 3,1, -7,2, 5,-4, 5,-3, -3,1, -5,-5, -5,-4, 2,-7, -3,5, -9,-3, 1,-5, -1,-2, 6,-1, -3,4, -2,-4, 1,-8, -6,-2, 0,-1, -1,9, 0,-6, 2,-9, 6,-4, -6,-5, 3,-5, -4,-6, 6,4, 2,3, -2,3, -3,4, 5,-6, -8,-2, 8,1, 2,-4, 8,4, -3,2, 6,0, -3,5, -5,1, -7,3, -4,-2, -5,-2, 0,-6, 2,-4, -5,4, 0,4, -4,8, -9,-3, 10,3, 5,-3, 7,0, -3,2, 2,0, 4,5, 0,2, -3,2, 0,-7, -2,2, -5,-1, 0,4, -10,-3, -4,3, -5,6, -2,9, 3,-2, 5,1, 0,7, 0,8, -1,4, -2,-6, 5,2, 5,-2, 2,-5, -8,-1, 6,3, -1,-3, -6,4, 3,-2, -4,7, 5,1, 4,-6, 2,7, 4,3, 5,2, 3,7, -5,-2, 5,-1, 0,1, 5,-6, 4,-8, 5,1, -5,4, 1,-4, 1,-8, 1,-5, -8,-1, 4,-2, 1,-5, -2,7, 5,-5, 6,-2, -7,0, 2,-2, -5,2, 0,-4, -2,8, 4,-8, 8,1, 3,5, 8,2, -5,-3, 3,-7, 0,-4, -2,-2, 7,-2, 5,4, -4,6, -2,-5, -6,-2, -6,4, -9,-3, 2,1, 4,0, -3,-1, 8,4, 0,1, 2,0, -1,-3, -4,8, 6,1, -3,-2, -1,-3, -3,10, 0,7, -4,6, -5,1, 6,-4, -5,-5, 6,3, -3,2, 6,-4, -3,-4, -5,-1, -6,2, 0,7, 6,0, 0,0, 3,2, -1,5, -4,8, 4,-2, -1,-6, -3,6, 3,7, 5,-5, -3,9, -4,-5, 1,-5, 1,-5, -6,-5, -3,9, 6,4, 2,-9, 0,7, 2,6, -4,5, -7,0, 2,-4, -9,-2, 1,8, 8,4, -1,2, -3,5, 2,3, -2,5, -4,6, 1,0, -3,7, -4,7, -1,-3, -1,9, -2,4, -2,1, 2,6, -5,-5, -4,-5, -3,-2, -1,6, 2,5, 2,-1, -3,9, 0,7, -4,-3, 2,5, -7,-3, 2,-3, 5,-2, -2,4, -2,1, 2,-4, -2,9, -3,3, 6,-4, -3,-5, -8,0, 6,2, -1,-8, 5,2, 10,3, 5,3, -1,4, -4,5, -4,0, 2,-8, 5,-6, -8,1, -4,2, 2,-7, -2,8, 2,2, 2,5, -3,5, -2,-3, -2,1, 1,-2, 3,3, -4,-6, 2,5, 3,1, 7,0, -9,-3, 1,-8, -7,2, 7,0, -8,1, 4,1, 7,2, 4,0, 5,-5, -7,-4, -1,8, -10,-3, 2,-3, -7,0, 1,0, -5,-2, 4,-1, 7,-3, -4,-3, -3,9, -3,4, 2,-3, -1,-5, 1,-3, 9,1, 0,-1, -1,-2, 0,4, 0,8, -3,10, 2,-2, 3,3, 1,-3, 5,5, 9,3, 1,0, -4,-5, -3,2, -1,5, 2,6, 4,6, 1,0, 7,-2, 4,-7, 0,-2, -3,-4, -9,-2, 0,2, -2,6, 0,-2, -1,8, 4,1, -4,-2, 3,3, 4,1, 6,2, 3,4, -7,2, -4,0, 6,5, 10,3, 0,7, -3,1, 7,0, 0,7, 7,4, 5,2, 4,5, -4,2, 3,-4, -1,4, -7,-3, 5,-2, 0,-4, -3,3, -7,0, -2,-7, 8,1, -1,9, 6,-4, -6,4, -1,-8, 3,-6, -4,-6, 1,-3, 5,1, 0,2, 5,-2, 0,-7, -3,2, -7,3, 0,6, -1,-8, 2,7, 3,5, 4,0, 7,4, 1,-5, 4,0, -6,-1, -2,4, 2,-8, 3,-6, 1,2, 3,4, -6,2, -3,9, -1,-3, -1,5, 1,-5, -1,-2, 3,-4, -4,-6, -4,2, -4,7, 5,-6, 1,-8, 3,-5, 1,-5, -6,-5, -9,-2, 5,4, 0,-6, 4,-6, -5,-4, -6,-2, -5,3, 3,-7, 2,-1, -2,-2, -1,-8, 5,-3, 0,1, -2,6, -1,-6, 1,-5, 4,-1, -2,-7, 0,-8, 6,0, -7,0, 1,3, -5,-3, 7,-2, -2,-6, 1,2, -10,-3, 8,4, -1,5, -4,0, 0,7, -3,6, 6,4, 1,0, 2,-5, -1,8, -5,-1, -1,3, -2,-5, 1,6, -3,7, -1,-8, -9,-2, 4,-5, 0,-4, -3,-2,
        -5,-2, 6,5, 4,0, -6,-2, 1,-8, -1,8, -5,7, 1,-6, 3,1, -2,1, 7,2, -2,0, 1,6, -4,5, 6,-2, -4,-5, 1,-4, 5,2, -6,3, -7,-1, 2,-8, 5,2, 4,0, -3,4, -8,-5, 1,-8, 6,-5, -2,1, -4,6, 6,-3, 1,-3, 5,4, 4,-2, 3,-7, 5,-5, -5,0, -4,4, 4,5, 4,-3, -8,-2, 4,-2, 3,5, 6,5, 7,1, -6,4, -2,0, -5,-5, 6,-2, 6,-5, -2,-3, 3,2, -1,-2, -4,4, -5,1, -4,9, 0,-7, 8,4, 0,-5, -2,3, -2,7, 3,-2, -2,3, 7,2, 6,-3, -1,-7, 0,-6, 2,-4, -3,-5, 4,2, 1,7, 3,3, -5,0, -9,-4, 5,3, 2,5, 5,2, 0,5, -2,1, 3,5, -3,6, 6,-3, 4,3, 2,-3, 1,4, -3,-3, -2,-3, -2,1, -7,-2, 8,2, 1,-3, 7,3, 2,7, -2,5, 1,7, -4,9, -4,-1, -6,2, -2,7, -5,5, 5,-5, -7,-3, -3,2, 3,-7, 8,3, -4,8, 1,-4, 7,0, -6,-1, 0,6, -1,-5, 3,-5, 0,-2, -1,6, 4,-5, 4,-6, -4,1, -3,8, 3,1, -7,0, 5,-3, 6,-2, -3,0, -4,-6, -4,-5, 3,-6, -4,4, -8,-5, 2,-5, -1,-2, 6,0, -4,3, -2,-5, 3,-7, -5,-4, 0,-1, -3,8, 1,-6, 4,-9, 7,-2, -5,-6, 4,-4, -2,-7, 5,5, 1,4, -2,3, -4,3, 6,-5, -8,-4, 7,3, 3,-3, 7,5, -4,1, 6,1, -4,4, -5,0, -7,1, -3,-3, -4,-3, 1,-6, 3,-3, -5,3, -1,4, -5,7, -8,-5, 9,4, 6,-2, 7,1, -3,1, 2,0, 3,5, 0,2, -4,1, 2,-7, -3,2, -5,-2, -1,4, -9,-4, -4,2, -6,5, -4,9, 4,-1, 5,3, -2,7, -2,8, -2,4, -1,-6, 4,3, 5,-1, 3,-4, -7,-3, 6,4, 0,-3, -6,3, 3,-1, -5,6, 5,2, 5,-5, 0,7, 3,4, 4,3, 1,7, -4,-3, 5,0, 0,1, 6,-5, 5,-7, 5,2, -5,3, 2,-4, 3,-7, 2,-5, -7,-3, 5,-2, 2,-5, -3,6, 6,-4, 6,-1, -7,-1, 3,-2, -5,1, 1,-4, -4,8, 5,-7, 7,3, 2,6, 8,4, -4,-4, 4,-7, 1,-3, -2,-3, 7,0, 4,5, -5,5, -1,-5, -5,-4, -7,2, -8,-5, 2,2, 4,1, -3,-1, 7,5, 0,1, 2,0, 0,-3, -5,7, 6,2, -3,-2, 0,-3, -4,9, -2,7, -5,5, -5,0, 7,-2, -4,-6, 6,4, -4,1, 6,-3, -2,-4, -5,-2, -6,1, -1,7, 6,1, 0,0, 3,2, -2,5, -5,7, 5,-2, 0,-6, -4,6, 1,7, 6,-4, -5,8, -3,-5, 2,-5, 2,-5, -5,-6, -5,8, 5,5, 4,-9, -1,7, 1,6, -5,4, -7,-2, 3,-3, -9,-4, -1,8, 7,5, -2,2, -4,4, 1,4, -3,4, -5,5, 1,0, -4,7, -5,6, 0,-3, -3,8, -3,3, -2,1, 1,6, -4,-6, -3,-5, -3,-2, -2,6, 1,5, 2,-1, -5,8, -2,7, -3,-4, 1,5, -7,-4, 2,-3, 5,-1, -3,3, -2,1, 3,-3, -4,9, -3,2, 6,-3, -2,-6, -8,-2, 5,4, 1,-8, 4,3, 9,4, 4,4, -2,4, -5,4, -4,-1, 4,-8, 6,-5, -8,-1, -5,2, 3,-6, -4,8, 2,3, 1,5, -4,4, -1,-4, -2,1, 2,-2, 2,3, -2,-7, 1,5, 3,1, 7,2, -8,-5, 3,-7, -7,0, 7,2, -8,-1, 4,2, 6,3, 4,1, 6,-4, -6,-5, -3,7, -9,-4, 2,-3, -7,-1, 1,0, -4,-3, 4,0, 7,-1, -3,-4, -5,8, -4,3, 2,-3, 0,-5, 1,-3, 8,3, 1,-1, -1,-2, -1,4, -2,8, -4,9, 3,-2, 2,3, 1,-3, 4,6, 8,5, 1,1, -3,-5, -4,1, -3,5, 1,6, 3,6, 1,1, 7,0, 5,-6, 0,-2, -2,-4, -9,-4, 0,2, -4,5, 0,-2, -3,7, 4,2, -3,-3, 2,3, 4,2, 5,4, 2,4, -7,0, -4,-1, 5,6, 9,4, -1,7, -3,0, 7,1, -2,7, 6,5, 4,3, 3,5, -5,2, 4,-3, -2,4, -7,-4, 5,-1, 1,-4, -3,2, -7,-1, 0,-7, 7,3, -3,8, 6,-3, -7,2, 1,-8, 4,-6, -2,-7, 1,-3, 5,3, 0,2, 5,-1, 2,-7, -4,1, -7,1, -1,6, 1,-8, 0,7, 2,6, 3,1, 6,5, 2,-5, 3,1, -6,-2, -3,3, 4,-8, 4,-6, 1,2, 2,4, -6,1, -5,8, 0,-3, -3,5, 3,-5, -1,-2, 4,-3, -2,-7, -5,2, -5,6, 6,-5, 3,-7, 4,-4, 3,-5, -5,-6, -9,-4, 4,5, 1,-6, 5,-5, -4,-5, -5,-4, -6,2, 4,-7, 2,-1, -2,-3, 1,-8, 6,-2, -1,1, -4,5, 0,-6, 2,-5, 4,0, 0,-7, 2,-8, 6,1, -7,-2, 0,3, -4,-4, 7,0, -1,-6, 1,2, -9,-4, 7,5, -3,5, -4,-1, -1,7, -4,6, 5,5, 1,0, 3,-4, -3,7, -5,-2, -1,3, -1,-5, 0,6, -4,7, 1,-8, -9,-4, 5,-4, 1,-4, -3,-2,
        -4,-3, 5,7, 4,1, -5,-3, 2,-7, -2,7, -6,6, 2,-5, 2,2, -2,0, 6,3, -2,-1, 0,6, -5,5, 6,-1, -3,-6, 2,-4, 4,3, -7,2, -6,-2, 3,-7, 4,3, 4,1, -4,3, -7,-6, 2,-7, 7,-4, -2,0, -6,5, 7,-2, 2,-3, 5,5, 5,-2, 4,-6, 6,-4, -5,-1, -5,4, 3,6, 5,-3, -7,-3, 5,-2, 2,6, 5,7, 6,2, -7,3, -2,-1, -4,-6, 6,-1, 7,-4, -1,-3, 2,3, 0,-2, -5,4, -5,0, -5,8, 1,-7, 7,5, 1,-5, -3,2, -3,6, 3,-1, -3,2, 6,3, 7,-2, 0,-7, 1,-6, 3,-3, -2,-6, 3,3, 0,7, 2,4, -5,-1, -8,-5, 4,4, 1,5, 4,3, -1,5, -2,0, 2,6, -4,5, 7,-2, 3,4, 3,-2, 0,4, -2,-4, -1,-3, -2,0, -6,-3, 7,3, 2,-2, 6,4, 1,7, -3,4, 0,7, -6,8, -4,-2, -6,1, -3,6, -6,4, 6,-4, -6,-4, -4,1, 4,-6, 7,4, -5,7, 2,-4, 7,1, -5,-2, -1,6, 0,-5, 4,-4, 1,-2, -2,5, 5,-5, 6,-5, -4,0, -4,7, 2,2, -7,-1, 6,-2, 6,-1, -3,-1, -3,-7, -3,-6, 4,-5, -5,4, -7,-6, 3,-4, 0,-2, 6,1, -5,3, -1,-5, 4,-6, -5,-5, 0,-1, -4,7, 2,-5, 5,-8, 7,-1, -4,-7, 5,-4, -1,-7, 4,6, 0,4, -3,2, -5,3, 7,-4, -7,-5, 6,4, 4,-2, 6,6, -4,0, 5,2, -5,4, -5,-1, -7,0, -2,-4, -3,-4, 2,-5, 4,-2, -6,2, -2,4, -6,6, -7,-6, 8,6, 6,-1, 6,2, -3,0, 2,1, 2,6, -1,2, -4,0, 3,-6, -3,1, -4,-3, -2,4, -8,-6, -5,2, -7,4, -5,8, 4,0, 4,4, -3,6, -3,7, -3,3, 0,-6, 3,4, 5,0, 4,-3, -6,-4, 5,6, 1,-3, -7,2, 3,0, -7,5, 4,3, 6,-4, -1,7, 3,5, 3,4, 0,7, -3,-4, 5,1, 0,1, 7,-4, 6,-6, 4,3, -6,2, 3,-3, 4,-6, 3,-4, -6,-4, 5,-1, 3,-4, -4,5, 7,-3, 6,0, -6,-2, 3,-1, -5,0, 2,-4, -5,7, 6,-6, 6,4, 1,6, 7,5, -4,-5, 5,-6, 2,-3, -1,-3, 7,1, 3,6, -6,4, 0,-5, -5,-5, -7,1, -7,-6, 1,2, 4,2, -2,-2, 6,6, 0,1, 2,1, 1,-3, -6,6, 5,3, -2,-3, 1,-3, -6,8, -3,6, -6,4, -5,-1, 7,-1, -3,-7, 5,6, -4,0, 7,-2, -2,-5, -4,-3, -6,0, -2,6, 5,2, 0,0, 2,3, -3,4, -6,6, 5,-1, 1,-6, -6,5, 0,7, 7,-3, -6,7, -2,-6, 3,-4, 3,-4, -4,-7, -6,7, 4,6, 5,-8, -2,6, 0,6, -6,3, -6,-3, 4,-2, -8,-5, -2,7, 6,6, -2,1, -5,4, 0,4, -4,3, -6,4, 1,0, -5,6, -7,5, 1,-3, -4,7, -4,2, -2,0, 0,6, -3,-7, -2,-6, -2,-3, -3,5, 0,5, 2,0, -6,7, -3,6, -3,-5, 0,5, -6,-5, 3,-2, 5,0, -4,2, -2,0, 4,-2, -5,8, -4,1, 7,-2, -1,-6, -7,-3, 5,5, 2,-7, 3,4, 8,6, 4,5, -3,3, -6,3, -4,-2, 5,-7, 7,-4, -7,-2, -5,1, 4,-5, -5,7, 1,3, 0,5, -5,4, 0,-4, -2,0, 2,-1, 1,4, -1,-7, 0,5, 2,2, 6,3, -7,-6, 4,-6, -7,-1, 6,3, -7,-2, 3,3, 5,4, 4,2, 7,-3, -5,-7, -4,6, -8,-6, 3,-2, -6,-2, 1,0, -3,-4, 4,1, 7,0, -3,-5, -6,7, -5,3, 3,-2, 1,-5, 2,-2, 7,4, 1,-1, 0,-2, -2,4, -3,7, -6,8, 3,-1, 1,4, 2,-2, 3,7, 7,6, 1,1, -2,-6, -4,0, -4,4, 0,6, 2,7, 1,1, 7,1, 7,-5, 1,-2, -2,-5, -8,-5, -1,2, -5,5, 1,-2, -4,6, 3,3, -2,-4, 1,4, 3,3, 5,5, 2,5, -7,-1, -4,-2, 4,7, 8,6, -2,6, -3,-1, 6,2, -3,6, 5,7, 3,4, 2,6, -5,1, 5,-3, -3,3, -6,-5, 5,0, 2,-4, -4,1, -6,-2, 1,-7, 6,4, -4,7, 7,-2, -7,1, 2,-7, 6,-5, -1,-7, 2,-2, 4,4, -1,2, 5,0, 3,-6, -4,0, -7,0, -2,5, 2,-7, -1,7, 1,6, 3,2, 5,7, 3,-4, 3,2, -5,-3, -4,2, 5,-7, 6,-5, 0,2, 2,5, -6,0, -6,7, 1,-3, -4,4, 4,-4, 0,-2, 5,-3, -1,-7, -5,1, -7,5, 7,-4, 4,-6, 5,-4, 4,-4, -4,-7, -8,-5, 3,6, 2,-5, 6,-4, -3,-6, -5,-5, -6,1, 5,-6, 2,0, -1,-3, 2,-7, 6,-1, -1,1, -5,5, 1,-6, 3,-4, 4,1, 1,-7, 3,-7, 5,2, -6,-3, -1,3, -4,-5, 7,1, 0,-6, 0,2, -8,-6, 6,6, -4,4, -4,-2, -2,6, -6,5, 4,6, 1,0, 4,-3, -4,6, -4,-3, -2,2, 0,-5, -1,6, -5,6, 2,-7, -8,-5, 6,-3, 2,-4, -2,-3,
        -4,-3, 3,7, 4,1, -5,-5, 4,-7, -4,7, -7,4, 4,-5, 2,2, -2,0, 6,5, -2,-1, -2,6, -5,3, 6,1, -1,-6, 2,-4, 4,3, -7,0, -6,-4, 5,-7, 4,3, 4,1, -4,3, -5,-8, 4,-7, 7,-2, -2,0, -6,3, 7,0, 2,-3, 3,5, 5,0, 6,-5, 6,-2, -5,-3, -5,2, 1,6, 5,-1, -7,-5, 5,0, 0,6, 3,7, 6,4, -7,1, -2,-1, -2,-6, 6,1, 7,-2, -1,-3, 2,3, 0,-2, -5,2, -5,-2, -7,6, 3,-7, 5,7, 3,-5, -3,2, -5,6, 3,-1, -3,2, 6,5, 7,0, 2,-7, 3,-6, 3,-3, 0,-6, 3,3, -2,7, 2,4, -5,-3, -6,-7, 4,4, -1,5, 4,3, -3,5, -2,0, 0,6, -5,4, 7,0, 3,4, 3,-2, 0,4, -2,-4, -1,-3, -2,0, -6,-5, 7,5, 2,-2, 5,6, -1,7, -3,4, -2,7, -8,6, -4,-2, -6,-1, -5,6, -6,2, 6,-2, -5,-6, -4,1, 6,-5, 6,6, -7,5, 2,-4, 7,3, -5,-4, -3,6, 2,-5, 4,-4, 1,-2, -4,5, 5,-3, 6,-3, -4,0, -6,6, 2,2, -7,-3, 6,0, 6,1, -3,-1, -1,-7, -1,-6, 5,-4, -5,2, -5,-8, 3,-4, 0,-2, 6,3, -5,1, 1,-5, 6,-5, -3,-5, 0,-1, -6,6, 4,-5, 7,-6, 7,1, -2,-7, 5,-2, 1,-7, 2,6, 0,4, -3,2, -5,1, 7,-2, -5,-7, 5,6, 4,-2, 4,7, -4,0, 5,4, -5,2, -5,-3, -7,-2, -2,-4, -3,-4, 4,-5, 4,-2, -6,0, -2,4, -7,4, -5,-8, 6,8, 6,1, 6,4, -3,0, 2,1, 0,6, -1,2, -4,0, 5,-6, -3,1, -4,-3, -2,4, -6,-8, -5,0, -7,2, -7,6, 4,0, 4,4, -5,6, -5,7, -3,3, 2,-6, 3,4, 5,2, 4,-3, -5,-6, 3,6, 1,-3, -7,0, 3,0, -7,3, 4,3, 6,-2, -3,7, 1,5, 3,4, -2,7, -3,-4, 5,3, 0,1, 7,-2, 7,-4, 4,3, -6,0, 3,-3, 6,-5, 3,-4, -5,-6, 5,1, 3,-4, -5,4, 7,-1, 6,2, -6,-4, 3,-1, -5,-2, 2,-4, -7,5, 7,-4, 5,6, -1,6, 5,7, -2,-5, 6,-4, 2,-3, -1,-3, 7,3, 1,6, -6,2, 2,-5, -3,-5, -7,-1, -5,-8, 1,2, 4,2, -2,-2, 4,7, 0,1, 2,1, 1,-3, -7,4, 5,5, -2,-3, 1,-3, -8,6, -5,6, -6,2, -5,-3, 7,1, -1,-7, 3,6, -4,0, 7,0, 0,-5, -4,-3, -6,-2, -4,6, 5,4, 0,0, 2,3, -3,4, -7,4, 5,1, 3,-6, -6,3, -2,7, 7,-1, -8,5, 0,-6, 3,-4, 3,-4, -2,-7, -8,5, 2,6, 7,-6, -4,6, -2,6, -6,1, -6,-5, 4,-2, -6,-7, -4,7, 4,7, -2,1, -5,2, 0,4, -4,3, -6,2, 1,0, -6,4, -7,3, 1,-3, -6,6, -4,2, -2,0, -2,6, -1,-7, 0,-6, -2,-3, -5,5, -2,5, 2,0, -8,5, -5,6, -1,-5, -2,5, -4,-6, 3,-2, 5,2, -4,2, -2,0, 4,-2, -7,6, -4,1, 7,0, 1,-6, -7,-5, 3,5, 4,-7, 3,4, 6,8, 2,5, -3,3, -6,1, -4,-2, 7,-5, 7,-2, -7,-4, -5,-1, 5,-4, -7,5, 1,3, -2,5, -5,2, 0,-4, -2,0, 2,-1, 1,4, 1,-7, -2,5, 2,2, 6,5, -5,-8, 6,-5, -7,-3, 6,5, -7,-4, 3,3, 4,5, 4,2, 7,-1, -3,-7, -6,5, -6,-8, 3,-2, -6,-4, 1,0, -3,-4, 4,1, 7,2, -1,-5, -8,5, -5,1, 3,-2, 3,-5, 2,-2, 6,6, 1,-1, 0,-2, -2,4, -5,7, -8,6, 3,-1, 1,4, 2,-2, 1,7, 5,8, 1,1, 0,-6, -4,0, -4,4, -2,6, 0,7, 1,1, 7,3, 7,-3, 1,-2, 0,-5, -6,-7, -1,2, -5,3, 1,-2, -6,5, 3,3, -2,-4, 1,4, 3,3, 3,5, 0,5, -7,-3, -4,-2, 2,7, 6,8, -4,6, -3,-1, 6,4, -5,6, 3,7, 3,4, 0,6, -5,-1, 5,-1, -3,3, -4,-6, 5,2, 2,-4, -4,1, -6,-4, 3,-7, 5,6, -6,6, 7,0, -7,-1, 4,-7, 6,-3, 1,-7, 2,-2, 4,4, -1,2, 5,2, 5,-6, -4,0, -7,-2, -4,5, 4,-7, -3,7, -1,6, 3,2, 3,7, 3,-4, 3,2, -5,-5, -4,2, 7,-5, 6,-3, 0,2, 0,5, -6,-2, -8,5, 1,-3, -4,4, 4,-4, 0,-2, 5,-1, 1,-7, -5,-1, -7,3, 7,-2, 6,-5, 5,-2, 4,-4, -2,-7, -6,-7, 1,6, 4,-5, 6,-2, -1,-6, -3,-5, -6,-1, 6,-4, 2,0, -1,-3, 4,-7, 6,1, -1,1, -5,3, 3,-6, 3,-4, 4,1, 3,-7, 5,-7, 5,4, -6,-5, -1,3, -2,-5, 7,3, 2,-6, 0,2, -6,-8, 4,7, -4,4, -4,-2, -4,6, -6,3, 2,6, 1,0, 4,-3, -6,5, -4,-3, -2,2, 2,-5, -3,6, -6,4, 4,-7, -6,-7, 6,-1, 2,-4, -2,-3,
        -3,-4, 2,8, 3,2, -4,-5, 5,-6, -5,6, -8,3, 4,-4, 1,3, -2,-1, 4,6, -2,-2, -3,5, -6,2, 6,2, 0,-6, 3,-3, 3,4, -7,-1, -5,-5, 6,-5, 3,4, 3,2, -5,2, -4,-9, 5,-6, 8,-1, -2,-1, -7,2, 7,1, 3,-2, 2,6, 5,1, 7,-4, 7,-1, -4,-3, -6,1, 0,6, 5,0, -5,-6, 5,1, -1,6, 2,8, 5,5, -7,0, -2,-2, -1,-7, 6,2, 8,-1, 0,-3, 1,3, 1,-2, -6,1, -4,-2, -8,5, 4,-6, 4,8, 3,-4, -3,1, -6,4, 3,0, -3,1, 4,6, 7,1, 3,-6, 4,-5, 4,-2, 1,-6, 2,4, -3,6, 1,4, -4,-3, -5,-8, 3,5, -2,5, 3,4, -3,4, -2,-1, -1,6, -6,3, 7,1, 2,5, 3,-1, -1,4, -1,-4, 0,-3, -2,-1, -4,-6, 5,6, 3,-1, 4,7, -2,7, -4,3, -3,6, -9,4, -3,-3, -6,-2, -6,4, -7,1, 7,-1, -4,-7, -4,0, 7,-4, 5,7, -8,4, 3,-3, 6,4, -4,-4, -4,5, 2,-4, 5,-3, 2,-2, -4,4, 6,-2, 7,-2, -4,-1, -7,5, 1,3, -6,-4, 6,1, 6,2, -3,-2, 0,-7, 0,-6, 6,-3, -6,1, -4,-9, 4,-3, 1,-2, 5,4, -5,0, 2,-5, 7,-4, -2,-6, 0,-1, -7,5, 4,-4, 8,-5, 7,2, -1,-8, 6,-1, 2,-7, 1,7, -1,4, -3,1, -5,0, 8,-1, -4,-8, 4,7, 4,-1, 3,8, -4,-1, 4,4, -6,1, -4,-3, -6,-3, -1,-4, -2,-5, 4,-4, 4,-1, -6,-1, -3,3, -8,3, -4,-9, 4,9, 6,2, 5,5, -3,-1, 2,2, -1,6, -2,2, -4,-1, 6,-4, -3,0, -3,-4, -3,3, -4,-9, -5,-1, -8,1, -8,5, 4,1, 3,5, -6,4, -6,5, -4,2, 3,-5, 2,5, 4,2, 5,-2, -4,-7, 2,7, 2,-3, -7,-1, 3,1, -8,2, 3,4, 7,-1, -4,6, 0,5, 2,5, -3,6, -2,-5, 4,3, 0,1, 8,-1, 8,-3, 3,4, -6,-1, 4,-2, 7,-4, 4,-3, -4,-7, 5,2, 4,-3, -6,3, 7,0, 5,3, -5,-5, 3,0, -4,-2, 3,-3, -8,4, 8,-3, 4,7, -2,6, 4,8, -1,-6, 7,-3, 3,-2, 0,-3, 6,4, 0,6, -7,1, 2,-4, -2,-6, -7,-2, -4,-9, 0,2, 3,3, -1,-3, 3,8, 0,1, 2,2, 2,-3, -8,3, 4,5, -1,-3, 2,-3, -9,4, -6,4, -7,1, -4,-3, 7,2, 0,-7, 2,7, -4,-1, 7,1, 1,-5, -3,-4, -5,-3, -5,5, 4,4, 0,0, 1,3, -4,3, -8,3, 5,2, 4,-5, -7,2, -3,6, 7,0, -9,4, 1,-6, 4,-3, 4,-3, -1,-8, -9,4, 1,7, 8,-5, -5,5, -3,5, -6,0, -4,-6, 4,-1, -5,-8, -5,6, 3,8, -2,0, -6,1, -1,4, -5,2, -7,1, 1,0, -7,3, -8,2, 2,-3, -7,5, -4,1, -2,-1, -3,5, 0,-7, 1,-6, -1,-3, -5,4, -2,4, 2,1, -9,4, -6,4, 0,-5, -2,4, -3,-7, 3,-1, 4,2, -4,1, -2,-1, 4,-1, -8,5, -4,0, 7,1, 2,-6, -5,-6, 2,6, 5,-6, 2,5, 4,9, 1,6, -4,2, -6,0, -3,-3, 8,-4, 8,-1, -6,-5, -5,-2, 6,-3, -8,4, 0,3, -2,4, -6,1, 1,-4, -2,-1, 2,0, 0,4, 2,-7, -2,4, 1,3, 4,6, -4,-9, 7,-4, -6,-4, 4,6, -6,-5, 2,4, 3,6, 3,3, 7,0, -2,-8, -7,4, -4,-9, 3,-1, -5,-5, 1,0, -2,-5, 3,2, 6,3, 0,-5, -9,4, -5,0, 3,-1, 3,-4, 3,-1, 5,7, 1,-1, 1,-2, -3,3, -6,5, -9,4, 3,0, 0,4, 3,-1, 0,7, 4,9, 1,1, 1,-6, -4,-1, -5,3, -3,5, -1,7, 1,1, 6,4, 8,-2, 2,-2, 1,-5, -5,-8, -2,2, -6,2, 2,-2, -7,4, 2,4, -1,-4, 0,4, 2,4, 2,6, -1,5, -6,-4, -3,-3, 1,8, 4,9, -5,5, -3,-2, 5,5, -6,4, 2,8, 2,5, -1,6, -5,-2, 5,0, -4,2, -3,-7, 4,2, 3,-3, -4,0, -5,-5, 4,-6, 4,7, -7,5, 7,1, -7,-2, 5,-6, 7,-2, 2,-7, 3,-1, 3,5, -2,2, 4,2, 6,-4, -4,-1, -6,-3, -4,4, 5,-6, -4,6, -2,6, 2,3, 2,8, 4,-3, 2,3, -4,-5, -4,1, 8,-4, 7,-2, -1,2, -1,5, -5,-3, -9,4, 2,-3, -5,3, 5,-3, 1,-2, 5,0, 2,-7, -5,-2, -8,2, 8,-1, 7,-4, 6,-1, 5,-3, -1,-8, -5,-8, 0,6, 4,-4, 7,-1, 0,-6, -2,-6, -6,-2, 7,-3, 2,1, 0,-3, 5,-6, 6,2, -1,1, -6,2, 4,-5, 4,-3, 3,2, 4,-6, 6,-5, 4,4, -4,-6, -2,3, -1,-6, 6,4, 3,-5, -1,2, -4,-9, 3,8, -5,3, -3,-3, -5,5, -7,2, 1,7, 1,0, 5,-2, -7,4, -3,-4, -3,1, 2,-4, -4,5, -7,3, 5,-6, -5,-8, 6,0, 3,-3, -1,-3,
        -2,-5, 0,8, 3,3, -2,-6, 6,-5, -6,5, -9,1, 5,-3, 1,3, -2,-1, 3,6, -1,-2, -4,5, -6,1, 5,3, 1,-6, 4,-2, 2,5, -7,-3, -4,-6, 7,-4, 2,5, 3,3, -5,1, -2,-9, 6,-5, 8,1, -2,-1, -7,0, 7,3, 3,-2, 1,6, 5,2, 7,-3, 7,0, -3,-4, -6,0, -1,6, 5,1, -4,-7, 5,2, -2,6, 0,8, 4,6, -7,-2, -1,-2, 0,-7, 5,3, 8,1, 1,-3, 0,4, 1,-2, -6,0, -4,-3, -9,3, 5,-5, 2,8, 4,-3, -4,0, -6,3, 3,1, -4,0, 3,6, 7,3, 4,-6, 5,-4, 4,-1, 2,-6, 1,4, -4,6, 0,4, -3,-4, -3,-9, 1,5, -2,4, 2,5, -4,3, -2,-1, -2,6, -7,2, 7,3, 1,5, 4,0, -2,3, 0,-4, 1,-3, -2,-1, -3,-6, 4,7, 3,-1, 3,7, -4,6, -5,2, -4,6, -10,3, -2,-4, -5,-3, -6,3, -7,0, 7,0, -3,-7, -4,-1, 7,-3, 4,8, -8,2, 4,-2, 5,5, -3,-5, -5,4, 3,-4, 5,-1, 2,-1, -5,3, 6,-1, 7,0, -3,-2, -8,4, 1,3, -5,-5, 6,2, 5,3, -2,-2, 2,-7, 1,-6, 7,-2, -6,0, -2,-9, 5,-2, 1,-2, 4,5, -5,-1, 2,-4, 7,-3, -1,-6, 0,-1, -8,4, 5,-3, 9,-3, 6,4, 1,-8, 6,0, 4,-6, 0,7, -2,3, -4,0, -5,-1, 8,1, -2,-8, 3,7, 4,0, 1,9, -3,-2, 3,5, -6,0, -3,-4, -6,-4, 0,-4, -1,-5, 5,-3, 4,0, -6,-2, -4,2, -9,1, -2,-9, 3,10, 5,3, 4,6, -3,-2, 1,2, -2,6, -2,1, -3,-2, 6,-3, -3,-1, -2,-5, -4,2, -3,-10, -5,-2, -8,-1, -9,3, 3,2, 1,5, -6,3, -7,4, -4,1, 4,-5, 1,5, 4,3, 5,-1, -3,-7, 0,7, 2,-2, -7,-3, 3,2, -8,0, 2,5, 7,0, -5,5, -1,5, 1,5, -4,6, -1,-5, 3,4, 0,1, 8,1, 9,-1, 2,5, -6,-2, 4,-1, 7,-3, 5,-2, -3,-7, 4,2, 5,-2, -7,2, 7,2, 5,4, -4,-6, 3,1, -4,-3, 4,-2, -8,2, 9,-1, 3,7, -3,5, 2,8, 0,-6, 8,-1, 3,-2, 1,-3, 5,5, -1,6, -7,0, 3,-4, -1,-6, -6,-4, -2,-9, 0,2, 2,4, -1,-3, 1,9, 0,1, 1,2, 2,-2, -9,1, 2,6, 0,-4, 2,-2, -10,3, -6,3, -7,0, -3,-4, 6,4, 2,-7, 0,7, -3,-2, 7,3, 2,-5, -2,-5, -5,-4, -6,4, 3,5, 0,0, 0,4, -5,2, -9,1, 4,2, 5,-4, -7,0, -4,6, 7,2, -9,2, 2,-6, 5,-2, 5,-2, 1,-8, -9,2, 0,7, 9,-3, -6,4, -4,5, -6,-1, -3,-6, 4,0, -3,-9, -6,5, 1,9, -2,0, -6,0, -2,3, -5,1, -7,0, 1,0, -8,1, -8,0, 2,-2, -8,4, -4,0, -2,-1, -4,5, 2,-7, 2,-6, 0,-4, -6,2, -3,4, 2,1, -9,2, -6,3, 1,-5, -3,4, -1,-8, 4,0, 4,3, -4,0, -2,-1, 4,0, -9,3, -4,-1, 7,3, 3,-5, -4,-7, 1,6, 6,-5, 1,5, 3,10, 0,6, -4,1, -6,-1, -2,-4, 8,-2, 8,1, -5,-6, -4,-2, 7,-2, -8,2, -1,3, -3,4, -6,0, 2,-3, -2,-1, 2,0, -1,4, 4,-6, -3,4, 1,3, 3,6, -2,-9, 7,-3, -5,-5, 3,6, -5,-6, 1,4, 2,7, 2,4, 7,2, 0,-8, -7,3, -3,-10, 4,0, -4,-6, 1,0, -1,-5, 3,3, 6,4, 1,-5, -9,2, -5,-1, 4,0, 4,-3, 3,-1, 4,8, 1,0, 1,-2, -4,2, -7,4, -10,3, 3,1, -1,4, 3,-1, -2,7, 2,9, 0,1, 2,-6, -3,-2, -5,1, -4,5, -3,7, 0,1, 5,5, 8,0, 2,-1, 2,-5, -3,-9, -2,1, -6,1, 2,-1, -7,3, 1,4, 0,-4, -1,4, 1,4, 1,6, -2,5, -5,-5, -2,-4, -1,8, 3,10, -6,4, -2,-2, 4,6, -6,3, 0,8, 1,5, -2,6, -4,-2, 5,1, -4,1, -1,-8, 4,3, 4,-2, -4,-1, -4,-6, 5,-5, 3,7, -8,4, 7,3, -6,-4, 6,-5, 7,0, 4,-6, 3,-1, 1,5, -2,1, 4,3, 6,-3, -3,-2, -6,-4, -5,3, 6,-5, -5,5, -3,5, 2,3, 0,8, 5,-2, 2,3, -2,-6, -4,0, 8,-2, 7,0, -1,2, -2,5, -5,-4, -9,2, 2,-2, -5,1, 5,-1, 1,-2, 5,1, 4,-6, -4,-2, -8,0, 8,1, 7,-3, 6,0, 5,-1, 1,-8, -3,-9, -1,6, 5,-3, 7,0, 1,-6, -1,-6, -5,-3, 8,-1, 2,1, 1,-3, 6,-5, 5,3, -1,0, -6,1, 5,-4, 5,-2, 3,3, 5,-5, 7,-4, 3,5, -3,-6, -2,2, 0,-6, 5,5, 4,-5, -1,2, -3,-10, 1,9, -5,1, -2,-4, -6,4, -7,0, 0,7, 1,0, 5,-1, -7,3, -2,-5, -3,1, 3,-4, -5,4, -8,1, 6,-5, -3,-9, 6,1, 4,-2, 0,-4,
        -1,-5, -2,8, 2,3, -1,-6, 7,-3, -7,3, -9,-1, 6,-2, 0,3, -1,-1, 2,7, -1,-2, -5,4, -6,0, 4,4, 3,-6, 4,-2, 1,5, -6,-4, -2,-6, 8,-3, 1,5, 2,3, -5,0, 0,-9, 7,-3, 7,2, -1,-1, -7,-1, 6,4, 3,-1, 0,6, 4,3, 8,-1, 6,2, -2,-5, -6,-1, -3,6, 5,2, -3,-8, 4,3, -3,5, -2,8, 2,6, -7,-3, -1,-2, 2,-6, 4,4, 7,2, 1,-3, -1,4, 1,-1, -6,-1, -3,-4, -9,1, 6,-4, 0,8, 5,-2, -4,-1, -7,2, 3,1, -4,-1, 2,7, 6,4, 5,-5, 6,-3, 4,0, 3,-5, 0,4, -5,5, -1,4, -2,-5, -1,-9, 0,6, -3,4, 1,5, -5,2, -1,-1, -3,5, -7,0, 6,4, 0,5, 4,1, -3,3, 1,-4, 1,-3, -1,-1, -2,-7, 3,8, 3,0, 1,8, -5,5, -5,1, -5,5, -10,1, -2,-4, -4,-4, -7,2, -6,-2, 6,2, -1,-8, -4,-2, 8,-1, 2,8, -8,0, 4,-2, 4,6, -2,-6, -6,3, 4,-3, 6,0, 2,-1, -6,2, 6,0, 7,1, -3,-3, -8,2, 0,3, -4,-6, 5,3, 4,4, -2,-3, 3,-7, 3,-6, 7,0, -6,-1, 0,-9, 5,-1, 1,-1, 3,6, -5,-2, 3,-4, 8,-1, 0,-6, 1,-1, -8,2, 6,-2, 9,-1, 5,5, 2,-7, 6,1, 5,-5, -2,6, -3,3, -4,-1, -5,-2, 7,2, 0,-8, 1,8, 4,1, -1,9, -3,-3, 2,6, -6,-1, -2,-5, -5,-5, 1,-4, 0,-5, 6,-2, 4,1, -5,-3, -4,2, -9,-1, 0,-9, 1,10, 4,4, 2,6, -2,-2, 1,2, -3,5, -2,1, -3,-3, 7,-2, -3,-1, -1,-5, -4,2, -1,-10, -4,-3, -7,-2, -9,1, 3,3, 0,6, -7,2, -8,3, -4,0, 5,-4, 0,5, 3,4, 5,0, -1,-8, -1,7, 3,-2, -6,-4, 2,2, -8,-2, 1,5, 6,2, -6,4, -2,5, 0,5, -5,5, 0,-5, 2,5, -1,1, 7,2, 9,1, 1,5, -5,-3, 4,0, 8,-1, 5,-1, -1,-8, 4,3, 5,-1, -7,0, 7,3, 4,5, -2,-6, 3,1, -3,-4, 4,-2, -8,0, 9,1, 1,8, -4,4, 0,8, 1,-6, 8,0, 3,-1, 1,-3, 4,6, -3,6, -6,-2, 4,-3, 0,-6, -5,-5, 0,-9, -1,2, 2,4, 0,-3, -1,9, -1,1, 1,2, 3,-2, -9,-1, 1,6, 1,-4, 3,-2, -10,1, -7,2, -6,-2, -2,-5, 5,5, 3,-7, -1,7, -3,-3, 6,4, 3,-4, -1,-5, -4,-5, -6,2, 2,6, 0,0, -1,4, -5,1, -9,-1, 4,3, 6,-3, -7,-1, -5,5, 7,3, -9,0, 3,-5, 5,-1, 5,-1, 2,-7, -9,0, -2,6, 9,-1, -6,2, -5,4, -6,-3, -2,-7, 4,1, -1,-9, -7,3, -1,9, -2,-1, -6,-1, -3,3, -5,0, -6,-2, 1,1, -8,0, -8,-2, 3,-2, -8,2, -4,-1, -1,-1, -5,4, 3,-7, 3,-5, 1,-4, -6,1, -4,3, 1,1, -9,0, -7,2, 2,-5, -4,3, 0,-8, 4,1, 3,4, -4,-1, -1,-1, 4,1, -9,1, -4,-2, 6,4, 4,-4, -3,-8, 0,6, 7,-3, 0,5, 1,10, -1,6, -4,0, -6,-3, -2,-4, 8,0, 7,2, -3,-7, -4,-3, 7,0, -8,0, -1,3, -4,3, -6,-1, 3,-3, -1,-1, 2,1, -2,4, 5,-5, -4,3, 0,3, 2,7, 0,-9, 8,-1, -4,-6, 2,7, -3,-7, 0,4, 0,7, 2,4, 7,3, 2,-8, -8,1, -1,-10, 4,1, -2,-6, 1,1, 0,-5, 2,3, 5,5, 2,-5, -9,0, -5,-2, 4,1, 5,-2, 3,0, 2,8, 1,0, 1,-1, -4,2, -8,3, -10,1, 3,1, -2,4, 3,0, -3,7, 0,9, 0,1, 3,-5, -3,-3, -6,0, -5,4, -4,6, 0,1, 4,6, 8,2, 2,-1, 3,-4, -1,-9, -2,1, -6,0, 2,-1, -8,1, 0,4, 1,-4, -2,4, 0,4, 0,6, -3,4, -4,-6, -2,-4, -2,7, 1,10, -6,2, -2,-3, 2,6, -7,2, -2,8, 0,5, -3,5, -4,-3, 5,2, -4,0, 0,-8, 3,4, 4,-2, -4,-2, -2,-6, 6,-4, 1,8, -8,2, 6,4, -5,-5, 7,-3, 7,1, 5,-5, 3,0, 0,6, -2,1, 3,4, 7,-2, -3,-3, -5,-5, -6,2, 7,-3, -6,4, -4,4, 1,3, -2,8, 5,-1, 1,3, -1,-6, -4,-1, 8,0, 7,1, -1,1, -3,4, -4,-5, -9,0, 3,-2, -6,0, 6,0, 1,-1, 5,2, 5,-5, -4,-3, -8,-2, 7,2, 8,-1, 6,1, 6,0, 2,-7, -1,-9, -3,6, 6,-2, 6,2, 3,-6, 0,-6, -4,-4, 8,0, 1,1, 1,-3, 7,-3, 4,4, -1,0, -6,0, 6,-3, 5,-1, 2,3, 6,-4, 8,-3, 2,6, -2,-7, -3,2, 1,-6, 4,6, 5,-4, -1,1, -1,-10, -1,9, -6,0, -2,-4, -6,2, -7,-1, -2,6, 1,1, 5,0, -8,1, -1,-5, -3,0, 4,-3, -6,3, -8,0, 7,-3, -1,-9, 6,3, 4,-2, 1,-4,
        0,-5, -3,7, 2,4, 0,-6, 7,-2, -7,2, -8,-3, 6,-1, 0,3, -1,-2, 0,7, 0,-2, -5,3, -6,-2, 4,5, 4,-5, 4,-1, 0,5, -5,-5, -1,-7, 8,-1, 0,5, 2,4, -5,-1, 2,-9, 7,-2, 7,4, -1,-2, -7,-3, 5,5, 4,0, -2,6, 4,3, 8,1, 6,3, -1,-5, -5,-2, -4,5, 5,3, -1,-8, 4,3, -4,4, -3,7, 1,7, -6,-4, 0,-2, 3,-6, 4,5, 7,4, 2,-3, -1,3, 2,-1, -5,-2, -2,-5, -9,-1, 7,-2, -1,8, 5,-1, -3,-1, -7,0, 3,2, -3,-1, 0,7, 5,5, 6,-3, 6,-2, 4,1, 4,-4, -1,4, -6,3, -2,4, -1,-5, 1,-9, -1,6, -4,3, 0,5, -5,1, -1,-2, -4,4, -7,-1, 5,5, -1,5, 3,1, -3,2, 2,-4, 2,-3, -1,-2, 0,-7, 1,8, 3,0, -1,8, -6,4, -5,0, -6,3, -10,-2, -1,-4, -4,-5, -7,0, -6,-3, 6,3, 1,-8, -3,-3, 8,1, 0,9, -8,-1, 4,-1, 2,7, -1,-6, -6,2, 5,-2, 6,1, 2,0, -6,1, 6,2, 7,3, -2,-3, -9,0, 0,3, -2,-7, 4,4, 4,5, -1,-3, 4,-6, 4,-5, 7,1, -5,-2, 2,-9, 5,0, 2,-1, 2,6, -5,-3, 4,-3, 8,1, 2,-6, 1,-1, -9,0, 6,-1, 9,1, 4,6, 4,-7, 5,2, 6,-4, -3,6, -3,2, -3,-1, -5,-3, 7,4, 1,-8, -1,8, 4,2, -3,8, -2,-3, 1,6, -5,-2, -1,-5, -3,-6, 2,-4, 1,-5, 6,-1, 4,2, -4,-4, -4,1, -8,-3, 2,-9, -2,10, 4,5, 1,7, -2,-2, 0,2, -4,4, -2,0, -2,-3, 7,0, -3,-2, 0,-5, -4,1, 2,-10, -4,-3, -7,-4, -9,-1, 2,3, -1,6, -7,0, -8,1, -4,-1, 5,-3, -1,5, 2,5, 5,1, 1,-8, -3,7, 3,-1, -5,-5, 2,2, -7,-3, 0,5, 6,3, -7,2, -3,5, -1,5, -6,3, 1,-5, 1,5, -1,1, 7,4, 8,3, 0,5, -4,-4, 4,1, 8,1, 5,0, 1,-8, 3,4, 5,0, -7,-1, 6,4, 3,5, -1,-7, 3,2, -2,-5, 4,-1, -8,-1, 8,3, -1,8, -5,4, -1,8, 2,-5, 8,2, 4,0, 2,-3, 2,7, -4,5, -6,-3, 5,-2, 2,-6, -4,-6, 2,-9, -1,2, 1,4, 0,-3, -3,8, -1,1, 0,2, 3,-1, -8,-3, 0,6, 1,-3, 3,-1, -10,-2, -7,0, -6,-3, -1,-5, 4,6, 4,-6, -3,7, -2,-3, 5,5, 3,-4, 0,-5, -3,-5, -7,1, 1,6, 0,0, -1,3, -5,0, -8,-3, 3,4, 6,-2, -7,-3, -6,3, 6,4, -9,-2, 4,-4, 5,0, 5,0, 4,-7, -9,-2, -3,6, 9,1, -7,1, -5,3, -5,-4, 0,-7, 4,2, 1,-9, -7,2, -3,8, -2,-1, -5,-2, -3,2, -5,-1, -6,-3, 1,1, -8,-2, -7,-3, 3,-1, -9,0, -4,-2, -1,-2, -5,3, 4,-6, 4,-4, 1,-3, -6,0, -5,2, 1,2, -9,-2, -7,0, 3,-5, -5,2, 2,-8, 3,1, 2,5, -4,-2, -1,-2, 4,2, -9,-1, -3,-3, 5,5, 5,-4, -1,-8, -2,6, 7,-2, -1,5, -2,10, -2,5, -4,-1, -5,-4, -1,-4, 8,1, 7,4, -2,-7, -3,-4, 7,1, -8,-1, -2,3, -5,2, -5,-2, 3,-2, -1,-2, 2,1, -3,3, 6,-4, -5,2, 0,3, 0,7, 2,-9, 8,1, -2,-7, 0,7, -2,-7, -1,4, -1,7, 1,4, 6,4, 3,-7, -8,-1, 2,-10, 3,1, -1,-7, 1,1, 1,-5, 2,4, 3,6, 3,-5, -9,-2, -5,-3, 3,1, 5,-1, 3,0, 0,9, 1,0, 2,-1, -4,1, -8,1, -10,-2, 3,2, -3,3, 3,0, -4,6, -2,9, 0,1, 4,-4, -2,-3, -6,-1, -5,3, -5,5, 0,1, 2,7, 7,3, 2,0, 3,-4, 1,-9, -2,0, -6,-2, 2,0, -8,-1, -1,4, 2,-4, -3,3, -1,4, -2,6, -3,4, -2,-7, -1,-4, -4,7, -2,10, -7,1, -1,-3, 1,7, -7,0, -3,7, -1,5, -4,4, -3,-4, 5,3, -4,-1, 2,-8, 2,5, 4,-1, -3,-3, -1,-7, 7,-2, -1,8, -9,0, 5,5, -4,-6, 7,-2, 7,3, 6,-4, 3,0, -1,6, -2,0, 2,5, 7,0, -2,-3, -3,-6, -6,1, 7,-2, -7,2, -5,4, 0,4, -3,7, 5,0, 0,4, 0,-6, -4,-2, 8,1, 7,3, -2,1, -3,4, -3,-5, -9,-2, 3,-1, -6,-1, 6,1, 2,-1, 5,3, 6,-4, -3,-4, -7,-3, 7,4, 8,1, 5,2, 6,1, 4,-7, 1,-9, -4,5, 6,-1, 6,3, 4,-5, 2,-6, -4,-5, 8,2, 1,2, 2,-3, 7,-2, 4,5, -1,0, -6,-2, 6,-2, 5,0, 2,4, 7,-2, 8,-1, 1,6, 0,-7, -3,1, 2,-5, 2,7, 5,-3, -2,1, 2,-10, -3,8, -6,-1, -1,-4, -7,1, -7,-3, -3,6, 1,1, 5,1, -8,-1, 0,-5, -3,0, 5,-2, -6,2, -8,-2, 7,-2, 1,-9, 5,4, 4,-1, 1,-3,
        1,-5, -5,7, 1,4, 2,-6, 8,0, -8,0, -7,-4, 6,1, -1,3, -1,-2, -1,7, 0,-2, -6,2, -6,-3, 2,5, 5,-4, 4,0, -1,5, -4,-6, 0,-7, 8,1, -1,5, 1,4, -4,-2, 4,-8, 8,0, 6,5, -1,-2, -6,-4, 4,6, 4,1, -3,6, 3,4, 8,2, 5,4, 0,-5, -5,-3, -5,4, 4,4, 1,-8, 3,4, -5,3, -5,7, 0,7, -5,-6, 0,-2, 4,-5, 2,5, 6,5, 2,-2, -2,3, 2,-1, -5,-3, -1,-5, -9,-3, 7,-1, -3,8, 5,0, -3,-2, -7,-1, 2,2, -3,-2, -1,7, 4,6, 7,-2, 6,-1, 4,2, 5,-3, -2,4, -7,2, -3,3, 0,-5, 3,-9, -2,5, -5,2, -1,5, -5,0, -1,-2, -5,3, -7,-3, 4,6, -2,4, 3,2, -4,2, 3,-3, 2,-2, -1,-2, 1,-7, -1,8, 3,1, -2,8, -6,3, -5,-1, -7,2, -9,-4, 0,-4, -2,-5, -7,-1, -5,-4, 5,4, 2,-8, -3,-3, 8,2, -2,8, -8,-3, 4,0, 1,7, 1,-6, -6,1, 5,-1, 5,2, 2,0, -6,-1, 6,3, 6,4, -2,-4, -8,-2, -1,3, -1,-7, 3,5, 2,5, 0,-3, 6,-5, 5,-4, 7,3, -5,-3, 4,-8, 5,1, 2,-1, 1,6, -4,-4, 5,-2, 8,2, 3,-6, 1,0, -8,-2, 6,1, 9,3, 3,6, 5,-6, 5,3, 6,-3, -4,5, -4,2, -3,-2, -4,-4, 6,5, 3,-8, -2,8, 3,3, -4,7, -2,-4, -1,6, -5,-3, 0,-5, -2,-7, 3,-3, 2,-4, 6,1, 3,3, -3,-5, -4,0, -7,-4, 4,-8, -4,9, 2,5, 0,7, -1,-3, 0,2, -5,3, -2,0, -2,-4, 7,1, -2,-2, 1,-5, -4,0, 4,-9, -3,-4, -6,-5, -9,-3, 2,4, -2,5, -7,-1, -8,-1, -4,-2, 6,-2, -2,4, 1,5, 4,2, 2,-8, -4,6, 3,0, -4,-6, 1,3, -7,-5, -1,5, 5,4, -7,1, -4,4, -2,4, -7,2, 2,-4, 0,5, -1,0, 6,5, 7,4, -1,5, -3,-5, 4,2, 8,2, 5,1, 2,-8, 2,5, 5,1, -7,-3, 5,6, 2,6, 0,-7, 2,2, -1,-5, 4,0, -8,-3, 7,4, -2,8, -5,2, -3,8, 3,-5, 7,3, 4,1, 2,-2, 1,7, -5,4, -5,-4, 5,-1, 3,-6, -3,-6, 4,-8, -1,2, 0,4, 1,-3, -4,7, -1,0, 0,2, 3,0, -7,-4, -2,6, 2,-3, 3,0, -9,-4, -7,-1, -5,-4, 0,-5, 3,6, 6,-5, -4,6, -2,-4, 4,6, 4,-3, 1,-5, -2,-6, -7,0, -1,6, 0,0, -2,3, -5,-1, -7,-4, 2,5, 6,-1, -6,-4, -7,2, 5,6, -8,-4, 5,-3, 5,1, 5,1, 5,-6, -8,-4, -4,5, 9,3, -7,0, -6,2, -4,-5, 1,-7, 3,3, 3,-9, -8,0, -4,7, -2,-1, -5,-3, -4,2, -4,-2, -5,-4, 0,1, -7,-3, -7,-5, 3,0, -8,-2, -3,-3, -1,-2, -6,2, 6,-5, 5,-3, 2,-3, -6,-2, -5,1, 1,2, -8,-4, -7,-1, 4,-4, -5,1, 3,-7, 3,2, 1,5, -3,-3, -1,-2, 3,3, -9,-3, -3,-3, 4,6, 5,-2, 1,-8, -3,6, 8,0, -2,4, -4,9, -3,5, -4,-2, -4,-5, 0,-4, 8,3, 6,5, 0,-8, -2,-5, 7,3, -8,-3, -2,2, -5,1, -5,-3, 4,-2, -1,-2, 2,1, -3,3, 6,-3, -5,1, -1,3, -1,7, 4,-8, 8,2, -1,-7, -1,7, 0,-8, -2,4, -3,7, 0,4, 5,6, 5,-7, -8,-2, 4,-9, 3,2, 0,-7, 0,1, 2,-4, 1,4, 2,7, 4,-4, -8,-4, -4,-4, 3,2, 5,0, 3,1, -2,8, 1,1, 2,-1, -4,0, -8,-1, -9,-4, 2,2, -3,3, 3,1, -6,5, -4,8, -1,1, 5,-3, -2,-4, -5,-2, -6,2, -6,4, -1,1, 1,7, 7,5, 2,0, 4,-3, 3,-9, -2,0, -6,-3, 2,0, -8,-2, -2,4, 3,-3, -3,3, -2,4, -3,6, -4,3, -1,-7, 0,-4, -5,6, -4,9, -7,0, 0,-3, 0,7, -7,-1, -5,7, -2,4, -5,3, -2,-5, 4,4, -4,-2, 3,-7, 1,5, 4,0, -3,-3, 0,-7, 7,-1, -2,8, -8,-2, 4,6, -3,-6, 8,0, 6,4, 6,-3, 3,1, -2,5, -2,0, 1,5, 7,1, -2,-4, -2,-7, -6,-1, 8,0, -7,1, -5,2, -1,4, -5,7, 5,1, -1,4, 2,-6, -3,-3, 8,3, 6,4, -2,1, -4,3, -2,-6, -8,-4, 3,0, -5,-2, 5,2, 2,-1, 4,4, 6,-3, -2,-5, -7,-5, 6,5, 8,2, 5,3, 5,2, 5,-6, 3,-9, -5,4, 6,1, 5,4, 5,-4, 3,-6, -2,-5, 7,3, 1,2, 2,-2, 8,0, 2,5, -1,-1, -6,-3, 6,-1, 5,1, 1,4, 7,-1, 8,1, -1,6, 1,-7, -3,0, 3,-5, 1,7, 6,-2, -2,1, 4,-9, -4,7, -5,-2, 0,-4, -7,0, -6,-4, -4,5, 0,1, 4,2, -8,-2, 1,-5, -3,-1, 5,-1, -6,1, -7,-3, 8,0, 3,-9, 4,5, 4,0, 2,-3,
        2,-5, -6,5, 0,4, 3,-6, 7,1, -7,-1, -6,-6, 6,2, -2,2, 0,-2, -3,7, 1,-2, -6,0, -5,-4, 1,6, 5,-3, 4,1, -2,5, -2,-7, 2,-6, 8,2, -2,5, 0,4, -4,-3, 6,-7, 7,1, 4,6, 0,-2, -5,-5, 2,7, 3,1, -4,5, 2,5, 7,4, 4,5, 1,-5, -4,-4, -5,3, 3,4, 2,-8, 2,5, -6,2, -6,5, -2,6, -3,-6, 1,-2, 5,-4, 1,6, 4,6, 3,-2, -3,3, 2,0, -4,-4, 0,-5, -8,-4, 7,1, -5,7, 5,1, -3,-3, -7,-3, 2,3, -3,-3, -3,7, 2,7, 7,0, 6,1, 4,2, 6,-2, -2,4, -7,0, -3,3, 1,-5, 4,-8, -3,5, -5,1, -2,5, -5,-1, 0,-2, -6,2, -6,-4, 2,7, -3,4, 3,3, -4,1, 3,-3, 3,-2, 0,-2, 3,-7, -2,8, 2,2, -4,7, -7,1, -5,-2, -7,0, -8,-5, 1,-4, -1,-6, -7,-3, -4,-5, 4,5, 4,-7, -2,-4, 7,4, -3,8, -7,-5, 4,1, -1,7, 2,-6, -6,-1, 5,0, 5,3, 2,1, -6,-2, 5,4, 5,5, -1,-4, -8,-3, -2,2, 1,-7, 2,6, 1,6, 0,-3, 6,-3, 5,-3, 6,4, -4,-4, 6,-7, 5,2, 2,0, -1,6, -3,-4, 5,-1, 7,4, 4,-5, 1,0, -8,-3, 6,2, 8,4, 1,7, 6,-4, 4,4, 7,-1, -5,4, -4,1, -3,-3, -3,-4, 4,6, 5,-7, -4,7, 3,3, -6,6, -1,-4, -2,6, -4,-4, 1,-5, 0,-7, 3,-3, 3,-4, 6,2, 3,3, -2,-6, -4,-1, -6,-6, 6,-7, -5,8, 1,6, -2,6, -1,-3, -1,2, -6,2, -2,-1, -1,-4, 7,3, -2,-3, 2,-5, -4,-1, 5,-8, -2,-5, -4,-6, -8,-4, 1,4, -3,5, -7,-3, -8,-2, -4,-2, 6,0, -3,4, 0,5, 4,3, 4,-7, -5,5, 3,0, -2,-7, 1,3, -5,-6, -2,5, 4,5, -7,-1, -4,3, -3,4, -7,0, 3,-4, -1,5, -1,0, 4,6, 6,6, -2,5, -2,-6, 4,2, 7,4, 5,2, 4,-7, 1,5, 5,2, -6,-4, 3,6, 0,6, 2,-6, 2,3, 0,-5, 4,1, -7,-5, 6,6, -4,7, -6,1, -5,7, 4,-4, 6,5, 3,1, 3,-2, -1,7, -5,3, -4,-5, 5,0, 4,-5, -1,-7, 6,-7, -2,1, -1,4, 2,-2, -6,6, -1,0, -1,2, 3,0, -6,-6, -3,6, 3,-3, 3,0, -8,-5, -7,-3, -4,-5, 1,-5, 1,7, 6,-3, -5,5, -1,-4, 2,7, 5,-2, 2,-5, 0,-6, -6,-2, -2,6, 0,0, -3,3, -5,-2, -6,-6, 1,5, 6,1, -5,-5, -7,0, 3,6, -7,-6, 6,-2, 5,2, 5,2, 6,-4, -7,-6, -5,4, 8,4, -6,-2, -6,0, -3,-5, 3,-7, 3,3, 4,-8, -7,-1, -6,6, -1,-2, -4,-4, -4,1, -4,-3, -4,-5, 0,1, -6,-5, -5,-6, 3,0, -8,-3, -3,-3, 0,-2, -6,0, 6,-3, 6,-2, 3,-3, -6,-3, -5,0, 0,2, -7,-6, -7,-3, 4,-3, -5,0, 5,-6, 3,3, 0,5, -3,-3, 0,-2, 3,3, -8,-4, -2,-4, 2,7, 6,-1, 2,-8, -4,5, 7,1, -3,4, -5,8, -4,4, -4,-2, -3,-5, 1,-4, 7,5, 4,6, 1,-7, -1,-5, 6,4, -7,-5, -3,2, -5,0, -4,-4, 4,-1, 0,-2, 1,2, -4,2, 7,-1, -5,0, -2,2, -3,7, 6,-7, 7,4, 1,-7, -3,7, 1,-7, -2,4, -4,6, -1,4, 3,6, 6,-5, -7,-4, 5,-8, 3,3, 2,-6, 0,1, 3,-4, 0,4, 0,7, 4,-3, -7,-6, -3,-4, 3,3, 5,1, 2,2, -3,8, 1,1, 2,0, -4,-1, -8,-2, -8,-5, 2,3, -4,2, 2,2, -6,3, -6,7, -1,1, 6,-2, -1,-4, -5,-3, -6,0, -7,2, -1,1, -1,7, 5,6, 2,1, 5,-2, 4,-8, -2,-1, -5,-4, 2,1, -7,-4, -2,4, 3,-3, -4,2, -2,4, -4,5, -5,2, 1,-7, 1,-4, -6,4, -5,8, -6,-2, 0,-3, -2,6, -7,-3, -6,5, -3,4, -6,2, -1,-5, 3,4, -4,-2, 5,-6, 0,5, 4,1, -2,-4, 2,-6, 7,1, -4,7, -8,-3, 2,7, -1,-7, 7,1, 5,5, 7,-1, 2,2, -3,5, -2,-1, 0,5, 7,3, -1,-4, 0,-7, -6,-2, 7,1, -7,-1, -6,1, -1,3, -6,5, 5,2, -1,3, 3,-6, -3,-3, 7,5, 5,5, -2,0, -5,2, 0,-6, -7,-6, 3,0, -5,-3, 5,3, 2,0, 3,4, 7,-1, -1,-5, -5,-6, 4,6, 7,4, 4,4, 5,3, 6,-4, 4,-8, -5,3, 6,2, 4,5, 5,-3, 4,-5, -1,-6, 6,5, 0,2, 3,-2, 7,1, 1,6, -1,-1, -5,-4, 6,1, 5,2, 0,4, 7,1, 8,2, -2,6, 3,-7, -3,0, 4,-4, -1,7, 6,0, -2,0, 5,-8, -6,6, -5,-3, 1,-4, -6,-2, -5,-5, -5,4, 0,1, 4,3, -7,-4, 2,-5, -2,-2, 5,0, -6,-1, -6,-5, 7,1, 4,-8, 3,5, 4,1, 3,-3,
    };

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void OrbDetector::AdaptiveNonMaximalSuppresion(mage::temp::vector<cv::KeyPoint>& keypoints, 
    unsigned int numToKeep, int threshold, mage::thread_memory memory)
{
    SCOPE_TIMER(OrbDetector::AdaptiveNonMaximalSuppresion);
    int globalMaxR2;
    int minX, maxX, minY, maxY;
    float minStrength;

    const int numX = m_numCellsX;
    const int numY = m_numCellsY;
       
    unsigned int numBefore = gsl::narrow_cast<unsigned int>(keypoints.size());

    static const float ROBUST_EPS = 0.002f;

    struct KeyPointItem
    {
        KeyPointItem() :
            x(0),y(0), strength(0.0f), r(0), idx(0), next(nullptr)
        {
        }
                
        int x;
        int y;
        float strength;
        int r;
        int idx;
        KeyPointItem *next; // intrusive list to avoid overhead from generic template.
    };

    assert(numX*numY >= 1 && "Must atleast have one grid cell.");
    assert(numToKeep >= 2 && "Number of wanted features should be greater than one.");

    if (numToKeep > numBefore)
    {
        return;
    }

    mage::temp::vector<KeyPointItem> keypointItems = memory.stack_vector<KeyPointItem>(numBefore);
    keypointItems.resize(numBefore);

    minX = maxX = gsl::narrow_cast<int>(keypoints[0].pt.x);
    minY = maxY = gsl::narrow_cast<int>(keypoints[0].pt.y);
    minStrength = keypoints[0].response;
    for (unsigned int i = 0; i < numBefore; i++)
    {
        keypointItems[i].idx = i;
        keypointItems[i].strength = keypoints[i].response;
        keypointItems[i].x = gsl::narrow_cast<int>(keypoints[i].pt.x);
        keypointItems[i].y = gsl::narrow_cast<int>(keypoints[i].pt.y);
        keypointItems[i].r = 0;

        minX = std::min(minX, keypointItems[i].x);
        minY = std::min(minY, keypointItems[i].y);
        maxX = std::max(maxX, keypointItems[i].x);
        maxY = std::max(maxY, keypointItems[i].y);
        minStrength = std::min(minStrength, keypointItems[i].strength);
    }

    // When we have low min response we want to prioritize the strong
    // features instead of spatially distribution (high robustness factor).
    // When we have high response let distribution of features have more influence (low robustness factor).
    assert(m_maxRobustFactorANMS >= m_minRobustFactorANMS && "Range must be greater or equal to zero.");
    float robustnessFactor;
    float robustnessFactorInv;
    {
        float val = mira::clamp<float>(minStrength - threshold, 0.0f, m_strongResponseANMS - static_cast<float>(threshold));
        float range = std::max<float>(0.0f, m_maxRobustFactorANMS - m_minRobustFactorANMS);
        robustnessFactor = m_maxRobustFactorANMS - (val / (m_strongResponseANMS - threshold))*range;
        robustnessFactorInv = 1.0f / robustnessFactor;
    }

    // Insert into grid cells.
    mage::temp::vector<KeyPointItem*> cells = memory.stack_vector<KeyPointItem*>(numX * numY);
    cells.resize(numX*numY);

    for (unsigned int i = 0; i < numBefore; i++)
    {
        int cellX = (keypointItems[i].x - minX) * numX / (maxX + 1 - minX);
        int cellY = (keypointItems[i].y - minY) * numY / (maxY + 1 - minY);
        int bIndex = cellY * numX + cellX;

        // insertion sort, largest first.
        if (cells[bIndex] == nullptr)
        {
            cells[bIndex] = &keypointItems[i];
            continue;
        }

        if (cells[bIndex]->strength < keypointItems[i].strength)
        {
            keypointItems[i].next = cells[bIndex];
            cells[bIndex] = &keypointItems[i];
            continue;
        }

        KeyPointItem *insertAfter = cells[bIndex];
        while (insertAfter->next != nullptr && insertAfter->next->strength > keypointItems[i].strength)
        {
            insertAfter = insertAfter->next;
        }

        keypointItems[i].next = insertAfter->next;
        insertAfter->next = &keypointItems[i];
    }

    // Distance to search for new points, calculated from
    // the number of points desired.
    //
    // nx * d = w
    // ny * d = h
    // nx * ny = N = number of points
    //
    // N * d*d = w * h
    // d = sqrt( w * h / N )
    globalMaxR2 = gsl::narrow_cast<int>(((static_cast<double>(maxX - minX))*(static_cast<double>(maxY - minY)) / static_cast<double>(numToKeep)));

    int minCellDelta2;
    {
        int minCellDeltaX = std::max((maxX - minX) / numX, 1);
        int minCellDeltaY = std::max((maxY - minY) / numY, 1);
        minCellDelta2 = std::min(minCellDeltaY, minCellDeltaX)*std::min(minCellDeltaY, minCellDeltaX);
    }

    for (int cy = 0; cy < numY; cy++)
    {
        for (int cx = 0; cx < numX; cx++)
        {
            int bIndex = cy * numX + cx;

            auto firstItem = cells[bIndex];
            for (KeyPointItem *item = firstItem; item != nullptr; item = item->next)
            {
                int minR2 = globalMaxR2;
                float s;

                s = (item->strength >= 0) ? (item->strength * robustnessFactor + ROBUST_EPS) : (item->strength * robustnessFactorInv + ROBUST_EPS);

                for (int d = 0; std::max(0, d - 1)*std::max(0, d - 1)*minCellDelta2 < minR2; d++)
                {
                    for (int yy = -d; yy <= d; yy++)
                    {
                            
                        int cYY = yy + cy;

                        if (cYY < 0 || cYY >= numY)
                        {
                            continue;
                        }

                        for (int xx = -d; xx <= d; xx++)
                        {
                            int cXX = xx + cx;

                            if (cXX < 0 || cXX >= numX || std::max(std::abs(xx), std::abs(yy)) != d)
                            {
                                continue;
                            }

                            // Check if there are stronger keypoints, if so
                            // potentially update this items suppression radius.
                            KeyPointItem *otherItem = cells[cYY * numX + cXX];
                            while (otherItem != nullptr && otherItem->strength > s)
                            {
                                int dx = item->x - otherItem->x;
                                int dy = item->y - otherItem->y;
                                int r = dx * dx + dy * dy;
                                if (r < minR2)
                                {
                                    minR2 = r;
                                }

                                otherItem = otherItem->next;
                            } // while otherItem
                        } // xx
                    } // yy
                }//dd

                item->r = minR2;

            }// cell
        }// bx
    }//by

    // Find the suppression radius (2nd on strength) that results in the wanted number of keypoints.
    std::nth_element(keypointItems.begin(),
        keypointItems.begin() + numToKeep, keypointItems.end(), [&](const KeyPointItem& lhs, const KeyPointItem& rhs)
    {
        if (lhs.r > rhs.r)
        {
            return true;
        }
        else if (lhs.r < rhs.r)
        {
            return false;
        }

        if (lhs.strength > rhs.strength)
        {
            return true;
        }
        else if (lhs.strength < rhs.strength)
        {
            return false;
        }

        return lhs.idx < rhs.idx;
    });

    mage::temp::vector<KeyPoint> anmsPts = memory.stack_vector<KeyPoint>(numToKeep);
    for (unsigned int i = 0; i < numToKeep; i++)
    {
        anmsPts.emplace_back(keypoints[keypointItems[i].idx]);
    }

    keypoints = anmsPts;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

OrbDetector::OrbDetector(
    unsigned int gaussianKernelSize,
    unsigned int nfeatures,
    float scaleFactor,
    unsigned int nlevels,
    unsigned int patchSize,
    unsigned int fastThreshold,
    bool useOrientation,
    float featureFactorANMS,
    float featureStrengthANMS,
    int strongResponseANMS,
    float minRobustFactor,
    float maxRobustFactor,
    int numCellsX,
    int numCellsY) :
    m_gaussianKernelSize(gaussianKernelSize),
    m_nfeatures(nfeatures),
    m_scaleFactor(scaleFactor),
    m_nlevels(nlevels),
    m_patchSize(patchSize),
    m_fastThreshold(fastThreshold),
    m_useOrientation(useOrientation),
    m_featureFactorANMS(featureFactorANMS),
    m_featureStrengthANMS(featureStrengthANMS),
    m_strongResponseANMS(strongResponseANMS),
    m_minRobustFactorANMS(minRobustFactor),
    m_maxRobustFactorANMS(maxRobustFactor),
    m_numCellsX(numCellsX),
    m_numCellsY(numCellsY)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void OrbDetector::ICAngles(
    const Mat& img,
    gsl::span<const Rect> layerinfo,
    gsl::span<const int> u_max,
    int half_k,
    gsl::span<KeyPoint> pts)
{
    int step = (int)img.step1();

    for (ptrdiff_t ptidx = 0; ptidx < pts.size(); ptidx++)
    {
        const auto& point = pts[ptidx];
        const Rect& layer = layerinfo[point.octave];
        const uchar* center = &img.at<uchar>(cvRound(point.pt.y) + layer.y, cvRound(point.pt.x) + layer.x);

        int m_01 = 0, m_10 = 0;

        // Treat the center line differently, v=0
        for (int u = -half_k; u <= half_k; ++u)
            m_10 += u * center[u];

        // Go line by line in the circular patch
        for (int v = 1; v <= half_k; ++v)
        {
            // Proceed over the two lines
            int v_sum = 0;
            int d = u_max[v];
            for (int u = -d; u <= d; ++u)
            {
                int val_plus = center[u + v*step], val_minus = center[u - v*step];
                v_sum += (val_plus - val_minus);
                m_10 += u * (val_plus + val_minus);
            }
            m_01 += v * v_sum;
        }

        pts[ptidx].angle = fastAtan2((float)m_01, (float)m_10);
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace
{
    inline int GetComputeOrbDescriptorsValue(const size_t idx, const Point* pattern, const uchar* center, const float a, const float b, const int step)
    {
        float x = pattern[idx].x * a - pattern[idx].y * b;
        float y = pattern[idx].x * b + pattern[idx].y * a;

        return *(center + cvRound(y)*step + cvRound(x));
    }
}

void OrbDetector::ComputeOrbDescriptors(
    const Mat& imagePyramid,
    gsl::span<const Rect> layerInfo,
    gsl::span<const float> layerScale,
    gsl::span<const KeyPoint> keypoints,
    gsl::span<mage::ORBDescriptor> descriptors,
    gsl::span<const Point> _pattern,
    size_t dsize)
{
    const int step = gsl::narrow_cast<int>(imagePyramid.step);

    for (ptrdiff_t j = 0; j < keypoints.size(); j++)
    {
        const KeyPoint& kpt = keypoints[j];
        const Rect& layer = layerInfo[kpt.octave];
        float scale = 1.f / layerScale[kpt.octave];
        float angle = kpt.angle;

        angle *= (float)(CV_PI / mira::HALF_CIRCLE_DEGREES<float>);
        float a = (float)cos(angle), b = (float)sin(angle);

        const uchar* center = &imagePyramid.at<uchar>(cvRound(kpt.pt.y*scale) + layer.y, cvRound(kpt.pt.x*scale) + layer.x);
        const Point* pattern = _pattern.data();
        uchar* desc = descriptors[j].Data();

        for (size_t i = 0; i < dsize; ++i, pattern += 16)
        {
            int val = 0;

            mira::static_for<8>([&](size_t bit)
            {
                int t0 = GetComputeOrbDescriptorsValue(bit * 2, pattern, center, a, b, step);
                int t1 = GetComputeOrbDescriptorsValue(bit * 2 + 1, pattern, center, a, b, step);

                val |= (t0 < t1) << bit;
            });

            desc[i] = static_cast<uchar>(val);
        }
    }
}

namespace
{
    inline int GetComputeOrbDescriptorsPrerotatedValue(const size_t idx, const signed char* pattern, const uchar* center, const int step)
    {
        return *(center + pattern[idx + 1] * step + pattern[idx]);
    }
}

void OrbDetector::ComputeOrbDescriptorsPrerotated(
    const Mat& imagePyramid,
    gsl::span<const Rect> layerInfo,
    gsl::span<const float> layerScale,
    gsl::span<const KeyPoint> keypoints,
    gsl::span<mage::ORBDescriptor> descriptors,
    const signed char* _patternRotated,
    size_t dsize)
{
    SCOPE_TIMER(OrbDetector::ComputeOrbDescriptorsPrerotated);
    // TODO PERF:  experiment with sorting the keypoints on Y, and/or on angleIncrement.  The goal is to increase
    // L1 cache hits, which are about 64K.  patternRotated is 30K, and each 32 scanline block is 16K.

    int step = (int)imagePyramid.step;
    size_t j, i, nkeypoints = keypoints.size();

    for (j = 0; j < nkeypoints; j++)
    {
        const KeyPoint& kpt = keypoints[j];
        const Rect& layer = layerInfo[kpt.octave];
        float scale = 1.f / layerScale[kpt.octave];
        float angle = kpt.angle;

        assert(angle >= 0 && angle <= 360);
        int angleIncrement = cvRound(angle / ROTATION_INCREMENT_DEGREES) % ROTATION_INCREMENT_COUNT;
        assert(angleIncrement >= 0 && angleIncrement < ROTATION_INCREMENT_COUNT);

        const uchar* center = &imagePyramid.at<uchar>(cvRound(kpt.pt.y*scale) + layer.y,
            cvRound(kpt.pt.x*scale) + layer.x);

        const signed char* pattern = _patternRotated + (angleIncrement * 1024);
        uchar *desc = descriptors[j].Data();

        for (i = 0; i < dsize; ++i, pattern += 32)
        {
            int val = 0;
            mira::static_for<8>([&](size_t bit)
            {
                int t0 = GetComputeOrbDescriptorsPrerotatedValue(4 * bit, pattern, center, step);
                int t1 = GetComputeOrbDescriptorsPrerotatedValue(4 * bit + 2, pattern, center, step);

                val |= (t0 < t1) << bit;
            });

            desc[i] = static_cast<uchar>(val);
        }
    }
}

void OrbDetector::MakeRandomPattern(int patchSize, Point* pattern, int npoints)
{
    RNG rng(0x34985739); // we always start with a fixed seed,
                         // to make patterns the same on each run
    for (int i = 0; i < npoints; i++)
    {
        pattern[i].x = rng.uniform(-patchSize / 2, patchSize / 2 + 1);
        pattern[i].y = rng.uniform(-patchSize / 2, patchSize / 2 + 1);
    }
}

namespace
{
    inline float getScale(int level, double scaleFactor)
    {
        return (float)std::pow(scaleFactor, (double)(level));
    }

    using GreaterKeypointResponse = mira::greater_member<KeyPoint, &KeyPoint::response>;

    void RetainBestFeatures(mage::temp::vector<KeyPoint>& keypoints,
        int minThreshold, int maxNum, int minNum, float responseFactor, mage::thread_memory memory)
    {
        auto histogram = memory.stack_vector<unsigned int>(256);
        histogram.resize(256, 0);
        
        size_t minNumThreshold = minThreshold;

        assert(minThreshold > 0);

        for (size_t i = 0; i < keypoints.size(); i++)
        {
            // Keypoint::response is represented as float, however we use fast score which is a uchar.
            uchar val = gsl::narrow_cast<uchar>(mira::clamp(keypoints[i].response, 0.0f, 255.0f));
            histogram[val]++;
        }

        // Integrate histogram until min number of features have been found,
        // this will give us the weakest response among the number of features
        // we want in the end.
        int numFeatures = 0;
        for (int i = static_cast<int>(histogram.size() - 1); i >= minThreshold; i--)
        {
            numFeatures += histogram[i];
            if (numFeatures >= minNum)
            {
                minNumThreshold = i;
                break;
            }
        }

        // Min num threshold gives us the minimum number of wanted keypoints.
        // Now we want to select more but we do not want dig too deepso we limit
        // using the responseFactor.
        numFeatures = 0;
        for (int i = static_cast<int>(histogram.size() - 1); i >= std::max((int)(minNumThreshold*responseFactor), minThreshold); i--)
        {
            numFeatures += histogram[i];
            if (numFeatures >= maxNum)
            {
                break;
            }
        }

        std::nth_element(keypoints.begin(), keypoints.begin() + numFeatures, keypoints.end(), GreaterKeypointResponse{});
        keypoints.resize(numFeatures);
    }

    void RunByImageBorder(mage::temp::vector<cv::KeyPoint>& keypoints, const Size &imageSize, int borderSize)
    {
        if (borderSize > 0)
        {
            if (imageSize.height <= borderSize * 2 || imageSize.width <= borderSize * 2)
            {
                keypoints.clear();
            }
            else
            {
                cv::Rect r(Point(borderSize, borderSize), Point(imageSize.width - borderSize, imageSize.height - borderSize));

                keypoints.erase(std::remove_if(keypoints.begin(), keypoints.end(),
                    [&r](const KeyPoint& keyPt)
                    {
                        return !r.contains(keyPt.pt);
                    }),
                    keypoints.end());
            }
        }
    }
}

void OrbDetector::ComputeKeyPoints(const Mat& imagePyramid,
    gsl::span<const Rect> layerInfo,
    gsl::span<const float> layerScale,
    mage::thread_memory memory,
    ImageData& result)
{
    SCOPE_TIMER(OrbDetector::ComputeKeyPoints);
    int nfeatures = m_nfeatures;
    float scaleFactor = m_scaleFactor;
    int patchSize = m_patchSize;
    int fastThreshold = m_fastThreshold;
    size_t nlevels = layerInfo.size();
    mage::temp::vector<int> nfeaturesPerLevel = memory.stack_vector<int>();
    nfeaturesPerLevel.resize(nlevels);

    assert(nlevels != 0);

    // fill the extractors and descriptors for the corresponding scales
    float factor = 1.0f / scaleFactor;
    float ndesiredFeaturesPerScale = nfeatures * (1 - factor) / (1 - (float)std::pow((double)factor, (double)nlevels));

    int sumFeatures = 0;
    for (size_t level = 0; level < nlevels - 1; level++)
    {
        nfeaturesPerLevel[level] = cvRound(ndesiredFeaturesPerScale);
        sumFeatures += nfeaturesPerLevel[level];
        ndesiredFeaturesPerScale *= factor;
    }
    nfeaturesPerLevel[nlevels - 1] = std::max(nfeatures - sumFeatures, 0);

    // pre-compute the end of a row in a circular patch
    int halfPatchSize = patchSize / 2;

    mage::temp::buffer<int> umax = memory.stack_buffer<int>(halfPatchSize + 2);

    int v, v0, vmax = cvFloor(halfPatchSize * std::sqrt(2.f) / 2 + 1);
    int vmin = cvCeil(halfPatchSize * std::sqrt(2.f) / 2);
    for (v = 0; v <= vmax; ++v)
        umax[v] = cvRound(std::sqrt((double)halfPatchSize * halfPatchSize - v * v));

    // Make sure we are symmetric
    for (v = halfPatchSize, v0 = 0; v >= vmin; --v)
    {
        while (umax[v0] == umax[v0 + 1])
            ++v0;
        umax[v] = v0;
        ++v0;
    }

    mage::temp::vector<KeyPoint> keypoints = memory.stack_vector<KeyPoint>(10 * nfeaturesPerLevel[0]);
    
    // some precomputed values for FAST
    uchar threshold_tab[512];
    for (int t = -255; t <= 255; t++)
    {
        threshold_tab[t + 255] = (uchar)(t < -fastThreshold ? 1 : t > fastThreshold ? 2 : 0);
    }

    for (size_t level = 0; level < nlevels; level++)
    {
        Mat img = imagePyramid(layerInfo[level]);
        keypoints.clear();

        // Extract features.
        {
            FAST(img, keypoints, fastThreshold, true, threshold_tab, memory);

            // Remove keypoints that are to close to the border for description calculations.
            // If we are using orientation then the patch will be rotated hence we use
            // the hypotenus of half the patch size.
            RunByImageBorder(keypoints, img.size(), m_useOrientation ? cvCeil(halfPatchSize*sqrt(2.0f)) : halfPatchSize);
            for (auto &keypoint : keypoints)
            {
                keypoint.octave = gsl::narrow_cast<int>(level);
                keypoint.size = patchSize * layerScale[level];
            }
        }

        // Supress keypoints in respect to response and spatially distribution.
        if (keypoints.size() > (size_t)nfeaturesPerLevel[level])
        {
            int maxNumFeatures = gsl::narrow_cast<int>(nfeaturesPerLevel[level] * m_featureFactorANMS);

            RetainBestFeatures(keypoints, fastThreshold, maxNumFeatures, nfeaturesPerLevel[level], m_featureStrengthANMS, memory);
            AdaptiveNonMaximalSuppresion(keypoints, nfeaturesPerLevel[level], m_fastThreshold, memory);
        }

        if (!keypoints.empty() && result.Insert(keypoints) == 0) // we've reached our max keypoint count
        {
            // this should never happen as we make sure to only keep
            // the right number of keypoints per level.
            assert(false);
            break;
        }
    }
    
    if (result.GetFeatureCount() == 0)
    {
        return;
    }

    auto allKeypoints = result.GetKeypoints();
    if (m_useOrientation) //BUG: remove unusued feature Bug 12405142
    {
        ICAngles(imagePyramid, layerInfo, umax, halfPatchSize, allKeypoints);
    }
    else
    {
        for (auto& kp : allKeypoints)
        {
            kp.angle = 0;
        }
    }

    for (auto &keypoint : allKeypoints)
    {
        float scale = layerScale[keypoint.octave];
        keypoint.pt *= scale;
    }
}


/** Compute the ORB_Impl features and descriptors on an image
* @param img the image to compute the features and descriptors on
* @param keypoints the resulting keypoints
* @param descriptors the resulting descriptors
* @param useProvidedKeypoints if true, the keypoints are not computed
* @param doKescriptors if true, also computes the descriptors
*/
void OrbDetector::DetectAndCompute(
    mage::thread_memory memory,
    ImageData& imageData,
    const cv::Mat& srcImage)
{
    CV_Assert(m_patchSize >= 2);
    SCOPE_TIMER(OrbDetector::DetectAndCompute);
    
    CV_Assert(srcImage.type() == CV_8UC1);

    cv::Mat image = srcImage;

    mage::temp::buffer<unsigned char> blurBuffer = memory.stack_buffer<unsigned char>(image.size().width * image.size().height);

    int level, nLevels = this->m_nlevels;

    mage::temp::buffer<Rect> layerInfo = memory.stack_buffer<Rect>(nLevels);
    mage::temp::buffer<int> layerOfs = memory.stack_buffer<int>(nLevels);
    mage::temp::buffer<float> layerScale = memory.stack_buffer<float>(nLevels);

    int level_dy = image.rows;
    Point level_ofs(0, 0);
    cv::Size bufSize((image.cols + 15) & -16, 0);

    for (level = 0; level < nLevels; level++)
    {
        float scale = getScale(level, m_scaleFactor);
        layerScale[level] = scale;
        cv::Size sz(cvRound(image.cols / scale), cvRound(image.rows / scale));
        cv::Size wholeSize(sz.width, sz.height);
        if (level_ofs.x + wholeSize.width > bufSize.width)
        {
            level_ofs = Point(0, level_ofs.y + level_dy);
            level_dy = wholeSize.height;
        }

        Rect linfo(level_ofs.x, level_ofs.y, sz.width, sz.height);
        layerInfo[level] = linfo;
        layerOfs[level] = linfo.y*bufSize.width + linfo.x;
        level_ofs.x += wholeSize.width;
    }
    bufSize.height = level_ofs.y + level_dy;

    mage::temp::buffer<uint8_t> pyramidMemory = memory.stack_buffer<uint8_t>(bufSize.area());
    Mat imagePyramid{ bufSize, CV_8U, pyramidMemory.begin() };

    Mat prevImg = image;

    {
        SCOPE_TIMER(OrbDetector::ComputeScalePyramids);
        // Pre-compute the scale pyramids
        for (level = 0; level < nLevels; ++level)
        {
            Rect linfo = layerInfo[level];
            cv::Size sz(linfo.width, linfo.height);
            cv::Size wholeSize(sz.width, sz.height);
            Rect wholeLinfo = Rect(linfo.x, linfo.y, wholeSize.width, wholeSize.height);
            Mat extImg = imagePyramid(wholeLinfo);

            // Compute the resized image
            if (level != 0)
            {
                resize(prevImg, extImg, sz, 0, 0, INTER_LINEAR);
            }
            else
            {
                // first level
                image.copyTo(extImg);
            }
            prevImg = extImg;
        }
    }

    // Get keypoints, those will be far enough from the border that no check
    // will be required for the descriptor.
    ComputeKeyPoints(imagePyramid, layerInfo, layerScale, memory, imageData);
    
    if (imageData.GetFeatureCount() == 0)
    {
        return;
    }

    if (m_gaussianKernelSize > 1)
    {
        SCOPE_TIMER(OrbDetector::GaussianBlur);
        assert(m_gaussianKernelSize % 2 == 1 && "kernel must be odd");
        for (level = 0; level < nLevels; level++)
        {
            // preprocess the resized image
            Mat workingMat = imagePyramid(layerInfo[level]);

            //boxFilter(workingMat, workingMat, workingMat.depth(), Size(5, 5), Point(-1, -1), true, BORDER_REFLECT_101);
            GaussianBlur(workingMat, workingMat, cv::Size(m_gaussianKernelSize, m_gaussianKernelSize), 2, 2, BORDER_REFLECT_101);
        }
    }

    if (m_patchSize == 31)
    {
        ComputeOrbDescriptorsPrerotated(imagePyramid, layerInfo, layerScale,
            { imageData.GetKeypoints().data(), (ptrdiff_t)imageData.GetKeypoints().size() }, { imageData.GetDescriptors().data(), (ptrdiff_t)imageData.GetDescriptors().size() }, bit_pattern_31_rotated, DESCRIPTOR_SIZE);
    }
    else if (m_patchSize == 15)
    {
        ComputeOrbDescriptorsPrerotated(imagePyramid, layerInfo, layerScale,
            { imageData.GetKeypoints().data(), (ptrdiff_t)imageData.GetKeypoints().size() }, { imageData.GetDescriptors().data(), (ptrdiff_t)imageData.GetDescriptors().size() }, bit_pattern_15_rotated, DESCRIPTOR_SIZE);
    }
    else
    {
        const int npoints = 512;
        Point patternbuf[npoints];
        MakeRandomPattern(m_patchSize, patternbuf, npoints);

        ComputeOrbDescriptors(imagePyramid, layerInfo, layerScale,
            { imageData.GetKeypoints().data(), (ptrdiff_t)imageData.GetKeypoints().size() }, { imageData.GetDescriptors().data(), (ptrdiff_t)imageData.GetDescriptors().size() }, patternbuf, DESCRIPTOR_SIZE);
    }
}

namespace
{
    void makeOffsets(int pixel[25], int rowStride, int patternSize)
    {
        static const int offsets16[][2] =
        {
            { 0,  3 },{ 1,  3 },{ 2,  2 },{ 3,  1 },{ 3, 0 },{ 3, -1 },{ 2, -2 },{ 1, -3 },
            { 0, -3 },{ -1, -3 },{ -2, -2 },{ -3, -1 },{ -3, 0 },{ -3,  1 },{ -2,  2 },{ -1,  3 }
        };

        static const int offsets12[][2] =
        {
            { 0,  2 },{ 1,  2 },{ 2,  1 },{ 2, 0 },{ 2, -1 },{ 1, -2 },
            { 0, -2 },{ -1, -2 },{ -2, -1 },{ -2, 0 },{ -2,  1 },{ -1,  2 }
        };

        static const int offsets8[][2] =
        {
            { 0,  1 },{ 1,  1 },{ 1, 0 },{ 1, -1 },
            { 0, -1 },{ -1, -1 },{ -1, 0 },{ -1,  1 }
        };

        const int(*offsets)[2] = patternSize == 16 ? offsets16 :
            patternSize == 12 ? offsets12 :
            patternSize == 8 ? offsets8 : 0;

        CV_Assert(pixel && offsets);

        int k = 0;
        for (; k < patternSize; k++)
            pixel[k] = offsets[k][0] + offsets[k][1] * rowStride;
        for (; k < 25; k++)
            pixel[k] = pixel[k - patternSize];
    }

    template<size_t patternSize>
    int cornerScore(const uchar* ptr, const int pixel[], int threshold);

    template<>
    int cornerScore<16>(const uchar* ptr, const int pixel[], int threshold)
    {
        const int K = 8, N = K * 3 + 1;
        int k, v = ptr[0];
        short d[N];
        for (k = 0; k < N; k++)
            d[k] = (short)(v - ptr[pixel[k]]);

#if CV_SSE2
        __m128i q0 = _mm_set1_epi16(-1000), q1 = _mm_set1_epi16(1000);
        for (k = 0; k < 16; k += 8)
        {
            __m128i v0 = _mm_loadu_si128((__m128i*)(d + k + 1));
            __m128i v1 = _mm_loadu_si128((__m128i*)(d + k + 2));
            __m128i a = _mm_min_epi16(v0, v1);
            __m128i b = _mm_max_epi16(v0, v1);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 3));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 4));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 5));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 6));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 7));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 8));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k));
            q0 = _mm_max_epi16(q0, _mm_min_epi16(a, v0));
            q1 = _mm_min_epi16(q1, _mm_max_epi16(b, v0));
            v0 = _mm_loadu_si128((__m128i*)(d + k + 9));
            q0 = _mm_max_epi16(q0, _mm_min_epi16(a, v0));
            q1 = _mm_min_epi16(q1, _mm_max_epi16(b, v0));
        }
        q0 = _mm_max_epi16(q0, _mm_sub_epi16(_mm_setzero_si128(), q1));
        q0 = _mm_max_epi16(q0, _mm_unpackhi_epi64(q0, q0));
        q0 = _mm_max_epi16(q0, _mm_srli_si128(q0, 4));
        q0 = _mm_max_epi16(q0, _mm_srli_si128(q0, 2));
        threshold = (short)_mm_cvtsi128_si32(q0) - 1;
#elif CV_NEON
        // This code snippet was used in an Intel how-to article.
        // https://software.intel.com/en-us/android/articles/porting-low-level-parts-of-android-native-applications-to-intel-architecture-based

        int16x8_t q0 = vdupq_n_s16(-1000), q1 = vdupq_n_s16(1000);
        int16x8_t zero = vdupq_n_s16(0);
        for (k = 0; k < 16; k += 8)
        {
            int16x8_t v0 = vld1q_s16((const int16_t*)(d + k + 1));
            int16x8_t v1 = vld1q_s16((const int16_t*)(d + k + 2));
            int16x8_t a = vminq_s16(v0, v1);
            int16x8_t b = vmaxq_s16(v0, v1);
            v0 = vld1q_s16((const int16_t*)(d + k + 3));
            a = vminq_s16(a, v0);
            b = vmaxq_s16(b, v0);
            v0 = vld1q_s16((const int16_t*)(d + k + 4));
            a = vminq_s16(a, v0);
            b = vmaxq_s16(b, v0);
            v0 = vld1q_s16((const int16_t*)(d + k + 5));
            a = vminq_s16(a, v0);
            b = vmaxq_s16(b, v0);
            v0 = vld1q_s16((const int16_t*)(d + k + 6));
            a = vminq_s16(a, v0);
            b = vmaxq_s16(b, v0);
            v0 = vld1q_s16((const int16_t*)(d + k + 7));
            a = vminq_s16(a, v0);
            b = vmaxq_s16(b, v0);
            v0 = vld1q_s16((const int16_t*)(d + k + 8));
            a = vminq_s16(a, v0);
            b = vmaxq_s16(b, v0);
            v0 = vld1q_s16((const int16_t*)(d + k));
            q0 = vmaxq_s16(q0, vminq_s16(a, v0));
            q1 = vminq_s16(q1, vmaxq_s16(b, v0));
            v0 = vld1q_s16((const int16_t*)(d + k + 9));
            q0 = vmaxq_s16(q0, vminq_s16(a, v0));
            q1 = vminq_s16(q1, vmaxq_s16(b, v0));
        }
        q0 = vmaxq_s16(q0, vsubq_s16(zero, q1));
        int16x4_t a_hi = vget_high_s16(q0);
        q1 = vcombine_s16(a_hi, a_hi);
        q0 = vmaxq_s16(q0, q1);

        // this is _mm_srli_si128(q0, 4)
        q1 = vextq_s16(q0, zero, 2);

        q0 = vmaxq_s16(q0, q1);

        // this is _mm_srli_si128(q0, 2)
        q1 = vextq_s16(q0, zero, 1);
        q0 = vmaxq_s16(q0, q1);

        // read the result
        int16_t __declspec(align(16)) x[8];
        vst1q_s16(x, q0);

        threshold = x[0] - 1;

#else
        int a0 = threshold;
        for (k = 0; k < 16; k += 2)
        {
            int a = std::min((int)d[k + 1], (int)d[k + 2]);
            a = std::min(a, (int)d[k + 3]);
            if (a <= a0)
                continue;
            a = std::min(a, (int)d[k + 4]);
            a = std::min(a, (int)d[k + 5]);
            a = std::min(a, (int)d[k + 6]);
            a = std::min(a, (int)d[k + 7]);
            a = std::min(a, (int)d[k + 8]);
            a0 = std::max(a0, std::min(a, (int)d[k]));
            a0 = std::max(a0, std::min(a, (int)d[k + 9]));
        }

        int b0 = -a0;
        for (k = 0; k < 16; k += 2)
        {
            int b = std::max((int)d[k + 1], (int)d[k + 2]);
            b = std::max(b, (int)d[k + 3]);
            b = std::max(b, (int)d[k + 4]);
            b = std::max(b, (int)d[k + 5]);
            if (b >= b0)
                continue;
            b = std::max(b, (int)d[k + 6]);
            b = std::max(b, (int)d[k + 7]);
            b = std::max(b, (int)d[k + 8]);

            b0 = std::min(b0, std::max(b, (int)d[k]));
            b0 = std::min(b0, std::max(b, (int)d[k + 9]));
        }

        threshold = -b0 - 1;
#endif

#if VERIFY_CORNERS
        testCorner(ptr, pixel, K, N, threshold);
#endif
        return threshold;
    }

    template<>
    int cornerScore<12>(const uchar* ptr, const int pixel[], int threshold)
    {
        const int K = 6, N = K * 3 + 1;
        int k, v = ptr[0];
        short d[N + 4];
        for (k = 0; k < N; k++)
            d[k] = (short)(v - ptr[pixel[k]]);
#if CV_SSE2
        for (k = 0; k < 4; k++)
            d[N + k] = d[k];

        __m128i q0 = _mm_set1_epi16(-1000), q1 = _mm_set1_epi16(1000);
        for (k = 0; k < 16; k += 8)
        {
            __m128i v0 = _mm_loadu_si128((__m128i*)(d + k + 1));
            __m128i v1 = _mm_loadu_si128((__m128i*)(d + k + 2));
            __m128i a = _mm_min_epi16(v0, v1);
            __m128i b = _mm_max_epi16(v0, v1);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 3));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 4));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 5));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k + 6));
            a = _mm_min_epi16(a, v0);
            b = _mm_max_epi16(b, v0);
            v0 = _mm_loadu_si128((__m128i*)(d + k));
            q0 = _mm_max_epi16(q0, _mm_min_epi16(a, v0));
            q1 = _mm_min_epi16(q1, _mm_max_epi16(b, v0));
            v0 = _mm_loadu_si128((__m128i*)(d + k + 7));
            q0 = _mm_max_epi16(q0, _mm_min_epi16(a, v0));
            q1 = _mm_min_epi16(q1, _mm_max_epi16(b, v0));
        }
        q0 = _mm_max_epi16(q0, _mm_sub_epi16(_mm_setzero_si128(), q1));
        q0 = _mm_max_epi16(q0, _mm_unpackhi_epi64(q0, q0));
        q0 = _mm_max_epi16(q0, _mm_srli_si128(q0, 4));
        q0 = _mm_max_epi16(q0, _mm_srli_si128(q0, 2));
        threshold = (short)_mm_cvtsi128_si32(q0) - 1;
#else
        int a0 = threshold;
        for (k = 0; k < 12; k += 2)
        {
            int a = std::min((int)d[k + 1], (int)d[k + 2]);
            if (a <= a0)
                continue;
            a = std::min(a, (int)d[k + 3]);
            a = std::min(a, (int)d[k + 4]);
            a = std::min(a, (int)d[k + 5]);
            a = std::min(a, (int)d[k + 6]);
            a0 = std::max(a0, std::min(a, (int)d[k]));
            a0 = std::max(a0, std::min(a, (int)d[k + 7]));
        }

        int b0 = -a0;
        for (k = 0; k < 12; k += 2)
        {
            int b = std::max((int)d[k + 1], (int)d[k + 2]);
            b = std::max(b, (int)d[k + 3]);
            b = std::max(b, (int)d[k + 4]);
            if (b >= b0)
                continue;
            b = std::max(b, (int)d[k + 5]);
            b = std::max(b, (int)d[k + 6]);

            b0 = std::min(b0, std::max(b, (int)d[k]));
            b0 = std::min(b0, std::max(b, (int)d[k + 7]));
        }

        threshold = -b0 - 1;
#endif

#if VERIFY_CORNERS
        testCorner(ptr, pixel, K, N, threshold);
#endif
        return threshold;
    }

    template<>
    int cornerScore<8>(const uchar* ptr, const int pixel[], int threshold)
    {
        const int K = 4, N = K * 3 + 1;
        int k, v = ptr[0];
        short d[N];
        for (k = 0; k < N; k++)
            d[k] = (short)(v - ptr[pixel[k]]);

#if CV_SSE2
        __m128i v0 = _mm_loadu_si128((__m128i*)(d + 1));
        __m128i v1 = _mm_loadu_si128((__m128i*)(d + 2));
        __m128i a = _mm_min_epi16(v0, v1);
        __m128i b = _mm_max_epi16(v0, v1);
        v0 = _mm_loadu_si128((__m128i*)(d + 3));
        a = _mm_min_epi16(a, v0);
        b = _mm_max_epi16(b, v0);
        v0 = _mm_loadu_si128((__m128i*)(d + 4));
        a = _mm_min_epi16(a, v0);
        b = _mm_max_epi16(b, v0);
        v0 = _mm_loadu_si128((__m128i*)(d));
        __m128i q0 = _mm_min_epi16(a, v0);
        __m128i q1 = _mm_max_epi16(b, v0);
        v0 = _mm_loadu_si128((__m128i*)(d + 5));
        q0 = _mm_max_epi16(q0, _mm_min_epi16(a, v0));
        q1 = _mm_min_epi16(q1, _mm_max_epi16(b, v0));
        q0 = _mm_max_epi16(q0, _mm_sub_epi16(_mm_setzero_si128(), q1));
        q0 = _mm_max_epi16(q0, _mm_unpackhi_epi64(q0, q0));
        q0 = _mm_max_epi16(q0, _mm_srli_si128(q0, 4));
        q0 = _mm_max_epi16(q0, _mm_srli_si128(q0, 2));
        threshold = (short)_mm_cvtsi128_si32(q0) - 1;
#else
        int a0 = threshold;
        for (k = 0; k < 8; k += 2)
        {
            int a = std::min((int)d[k + 1], (int)d[k + 2]);
            if (a <= a0)
                continue;
            a = std::min(a, (int)d[k + 3]);
            a = std::min(a, (int)d[k + 4]);
            a0 = std::max(a0, std::min(a, (int)d[k]));
            a0 = std::max(a0, std::min(a, (int)d[k + 5]));
        }

        int b0 = -a0;
        for (k = 0; k < 8; k += 2)
        {
            int b = std::max((int)d[k + 1], (int)d[k + 2]);
            b = std::max(b, (int)d[k + 3]);
            if (b >= b0)
                continue;
            b = std::max(b, (int)d[k + 4]);

            b0 = std::min(b0, std::max(b, (int)d[k]));
            b0 = std::min(b0, std::max(b, (int)d[k + 5]));
        }

        threshold = -b0 - 1;
#endif

#if VERIFY_CORNERS
        testCorner(ptr, pixel, K, N, threshold);
#endif
        return threshold;
    }

#pragma warning (push)
#pragma warning (disable:4127) // conditional expression is constant for: if (patternSize == 16)

    template<int patternSize>
    void FAST_t(const cv::Mat& img, mage::temp::vector<KeyPoint>& keypoints, int threshold, bool nonmax_suppression, uchar* threshold_tab, mage::thread_memory& memory)
    {
        const int K = patternSize / 2, N = patternSize + K + 1;
#if CV_SSE2 || CV_NEON
        const int quarterPatternSize = patternSize / 4;
        (void)quarterPatternSize;
#endif
        int i, j, k, pixel[25];
        makeOffsets(pixel, (int)img.step, patternSize);

        threshold = std::min(std::max(threshold, 0), 255);

#if CV_SSE2
        __m128i delta = _mm_set1_epi8(-128), t = _mm_set1_epi8((char)threshold), K16 = _mm_set1_epi8((char)K);
        (void)K16;
        (void)delta;
        (void)t;
#elif CV_NEON
        int8x16_t delta = vdupq_n_s8(-128), t = vdupq_n_s8((char)threshold), K16 = vdupq_n_s8((char)K);
        (void)K16;
        (void)delta;
        (void)t;
#endif

        auto _buf = memory.stack_buffer<uchar>((img.cols + 16) * 3 * (sizeof(short) + sizeof(uchar)) + 128);
        uchar* buf[3];
        buf[0] = _buf.begin(); buf[1] = buf[0] + img.cols; buf[2] = buf[1] + img.cols;
        short* cpbuf[3];
        cpbuf[0] = (short*)alignPtr(buf[2] + img.cols, sizeof(short)) + 1;
        cpbuf[1] = cpbuf[0] + img.cols + 1;
        cpbuf[2] = cpbuf[1] + img.cols + 1;
        memset(buf[0], 0, img.cols * 3);

        for (i = 3; i < img.rows - 2; i++)
        {
            const uchar* ptr = img.ptr<uchar>(i) + 3;
            uchar* curr = buf[(i - 3) % 3];
            short* cornerpos = cpbuf[(i - 3) % 3];
            memset(curr, 0, img.cols);

#if VERIFY_SIMD
            uchar currSIMD[2048];
            memset(currSIMD, 0, 2048);
            uchar* currReal = curr;
            curr = currSIMD;
            const uchar* ptrReal = ptr;
#endif

            int ncorners = 0;

            if (i < img.rows - 3)
            {
                j = 3;
#if CV_SSE2
                if (patternSize == 16)
                {
                    for (; j < (img.cols - 16 - 3); j += 16, ptr += 16)
                    {
                        __m128i m0, m1;
                        __m128i v0 = _mm_loadu_si128((const __m128i*)ptr);
                        __m128i v1 = _mm_xor_si128(_mm_subs_epu8(v0, t), delta);
                        v0 = _mm_xor_si128(_mm_adds_epu8(v0, t), delta);

                        __m128i x0 = _mm_sub_epi8(_mm_loadu_si128((const __m128i*)(ptr + pixel[0])), delta);
                        __m128i x1 = _mm_sub_epi8(_mm_loadu_si128((const __m128i*)(ptr + pixel[quarterPatternSize])), delta);
                        __m128i x2 = _mm_sub_epi8(_mm_loadu_si128((const __m128i*)(ptr + pixel[2 * quarterPatternSize])), delta);
                        __m128i x3 = _mm_sub_epi8(_mm_loadu_si128((const __m128i*)(ptr + pixel[3 * quarterPatternSize])), delta);
                        m0 = _mm_and_si128(_mm_cmpgt_epi8(x0, v0), _mm_cmpgt_epi8(x1, v0));
                        m1 = _mm_and_si128(_mm_cmpgt_epi8(v1, x0), _mm_cmpgt_epi8(v1, x1));
                        m0 = _mm_or_si128(m0, _mm_and_si128(_mm_cmpgt_epi8(x1, v0), _mm_cmpgt_epi8(x2, v0)));
                        m1 = _mm_or_si128(m1, _mm_and_si128(_mm_cmpgt_epi8(v1, x1), _mm_cmpgt_epi8(v1, x2)));
                        m0 = _mm_or_si128(m0, _mm_and_si128(_mm_cmpgt_epi8(x2, v0), _mm_cmpgt_epi8(x3, v0)));
                        m1 = _mm_or_si128(m1, _mm_and_si128(_mm_cmpgt_epi8(v1, x2), _mm_cmpgt_epi8(v1, x3)));
                        m0 = _mm_or_si128(m0, _mm_and_si128(_mm_cmpgt_epi8(x3, v0), _mm_cmpgt_epi8(x0, v0)));
                        m1 = _mm_or_si128(m1, _mm_and_si128(_mm_cmpgt_epi8(v1, x3), _mm_cmpgt_epi8(v1, x0)));
                        m0 = _mm_or_si128(m0, m1);
                        int mask = _mm_movemask_epi8(m0);
                        if (mask == 0)
                            continue;
                        if ((mask & 255) == 0)
                        {
                            j -= 8;
                            ptr -= 8;
                            continue;
                        }

                        __m128i c0 = _mm_setzero_si128(), c1 = c0, max0 = c0, max1 = c0;
                        for (k = 0; k < N; k++)
                        {
                            __m128i x = _mm_xor_si128(_mm_loadu_si128((const __m128i*)(ptr + pixel[k])), delta);
                            m0 = _mm_cmpgt_epi8(x, v0);
                            m1 = _mm_cmpgt_epi8(v1, x);

                            c0 = _mm_and_si128(_mm_sub_epi8(c0, m0), m0);
                            c1 = _mm_and_si128(_mm_sub_epi8(c1, m1), m1);

                            max0 = _mm_max_epu8(max0, c0);
                            max1 = _mm_max_epu8(max1, c1);
                        }

                        max0 = _mm_max_epu8(max0, max1);
                        int m = _mm_movemask_epi8(_mm_cmpgt_epi8(max0, K16));

                        for (k = 0; m > 0 && k < 16; k++, m >>= 1)
                            if (m & 1)
                            {
#if !VERIFY_SIMD
                                cornerpos[ncorners++] = (short)(j + k);
#endif
                                if (nonmax_suppression)
                                    curr[j + k] = (uchar)cornerScore<patternSize>(ptr + k, pixel, threshold);
                            }
                    }
                }
#elif CV_NEON
                if (patternSize == 16)
                {
                    for (; j < img.cols - 16 - 3; j += 16, ptr += 16)
                    {
                        int8x16_t m0, m1;
                        int8x16_t v0 = vld1q_u8((const uchar*)ptr);
                        int8x16_t v1 = veorq_s8(vqsubq_u8(v0, t), delta);
                        v0 = veorq_u8(vqaddq_u8(v0, t), delta);

                        int8x16_t x0 = vsubq_s8(vld1q_u8((const uchar*)(ptr + pixel[0])), delta);
                        int8x16_t x1 = vsubq_s8(vld1q_u8((const uchar*)(ptr + pixel[quarterPatternSize])), delta);
                        int8x16_t x2 = vsubq_s8(vld1q_u8((const uchar*)(ptr + pixel[2 * quarterPatternSize])), delta);
                        int8x16_t x3 = vsubq_s8(vld1q_u8((const uchar*)(ptr + pixel[3 * quarterPatternSize])), delta);
                        m0 = vandq_s8(vcgtq_s8(x0, v0), vcgtq_s8(x1, v0));
                        m1 = vandq_s8(vcgtq_s8(v1, x0), vcgtq_s8(v1, x1));
                        m0 = vorrq_s8(m0, vandq_s8(vcgtq_s8(x1, v0), vcgtq_s8(x2, v0)));
                        m1 = vorrq_s8(m1, vandq_s8(vcgtq_s8(v1, x1), vcgtq_s8(v1, x2)));
                        m0 = vorrq_s8(m0, vandq_s8(vcgtq_s8(x2, v0), vcgtq_s8(x3, v0)));
                        m1 = vorrq_s8(m1, vandq_s8(vcgtq_s8(v1, x2), vcgtq_s8(v1, x3)));
                        m0 = vorrq_s8(m0, vandq_s8(vcgtq_s8(x3, v0), vcgtq_s8(x0, v0)));
                        m1 = vorrq_s8(m1, vandq_s8(vcgtq_s8(v1, x3), vcgtq_s8(v1, x0)));
                        m0 = vorrq_s8(m0, m1);

                        bool lowerBitsZero = m0.n128_i32[0] == 0 && m0.n128_i32[1] == 0;
                        bool topBitsZero = m0.n128_i32[2] == 0 && m0.n128_i32[3] == 0;
                        if (topBitsZero && lowerBitsZero)
                        {
                            continue;
                        }
                        if (lowerBitsZero)
                        {
                            j -= 8;
                            ptr -= 8;
                            continue;
                        }

                        int8x16_t c0 = vdupq_n_s8(0), c1 = c0, max0 = c0, max1 = c0;
                        for (k = 0; k < N; k++)
                        {
                            int8x16_t x = veorq_s8(vld1q_u8((const uchar*)(ptr + pixel[k])), delta);
                            m0 = vcgtq_s8(x, v0);
                            m1 = vcgtq_s8(v1, x);

                            c0 = vandq_s8(vsubq_s8(c0, m0), m0);
                            c1 = vandq_s8(vsubq_s8(c1, m1), m1);

                            max0 = vmaxq_u8(max0, c0);
                            max1 = vmaxq_u8(max1, c1);
                        }

                        max0 = vmaxq_u8(max0, max1);

                        int8_t __declspec(align(16)) m[16];
                        vst1q_s8(m, vcgtq_s8(max0, K16));

                        for (k = 0; k < 16; k++)
                            if (m[k] != 0)
                            {
#if !VERIFY_SIMD
                                cornerpos[ncorners++] = (short)(j + k);
#endif
                                if (nonmax_suppression)
                                    curr[j + k] = (uchar)cornerScore<patternSize>(ptr + k, pixel, threshold);
                            }
                    }
                }
#endif

#if VERIFY_SIMD
                int simdEntriesWritten = j;
                j = 3;
                curr = currReal;
                ptr = ptrReal;
#endif

                for (; j < img.cols - 3; j++, ptr++)
                {
                    int v = ptr[0];
                    const uchar* tab = &threshold_tab[0] - v + 255;
                    int d = tab[ptr[pixel[0]]] | tab[ptr[pixel[8]]];

                    if (d == 0)
                        continue;

                    d &= tab[ptr[pixel[2]]] | tab[ptr[pixel[10]]];
                    d &= tab[ptr[pixel[4]]] | tab[ptr[pixel[12]]];
                    d &= tab[ptr[pixel[6]]] | tab[ptr[pixel[14]]];

                    if (d == 0)
                        continue;

                    d &= tab[ptr[pixel[1]]] | tab[ptr[pixel[9]]];
                    d &= tab[ptr[pixel[3]]] | tab[ptr[pixel[11]]];
                    d &= tab[ptr[pixel[5]]] | tab[ptr[pixel[13]]];
                    d &= tab[ptr[pixel[7]]] | tab[ptr[pixel[15]]];

                    if (d & 1)
                    {
                        int vt = v - threshold, count = 0;

                        for (k = 0; k < N; k++)
                        {
                            int x = ptr[pixel[k]];
                            if (x < vt)
                            {
                                if (++count > K)
                                {
                                    cornerpos[ncorners++] = (short)j;
                                    if (nonmax_suppression)
                                        curr[j] = (uchar)cornerScore<patternSize>(ptr, pixel, threshold);
                                    break;
                                }
                            }
                            else
                                count = 0;
                        }
                    }

                    if (d & 2)
                    {
                        int vt = v + threshold, count = 0;

                        for (k = 0; k < N; k++)
                        {
                            int x = ptr[pixel[k]];
                            if (x > vt)
                            {
                                if (++count > K)
                                {
                                    cornerpos[ncorners++] = (short)j;
                                    if (nonmax_suppression)
                                        curr[j] = (uchar)cornerScore<patternSize>(ptr, pixel, threshold);
                                    break;
                                }
                            }
                            else
                                count = 0;
                        }
                    }
                }

#if VERIFY_SIMD
                for (int q = 0; q < simdEntriesWritten; q++)
                {
                    assert(curr[q] == currSIMD[q]);
                }
#endif
            }

            cornerpos[-1] = gsl::narrow_cast<short>(ncorners);

            if (i == 3)
                continue;

            const uchar* prev = buf[(i - 4 + 3) % 3];
            const uchar* pprev = buf[(i - 5 + 3) % 3];
            cornerpos = cpbuf[(i - 4 + 3) % 3];
            ncorners = cornerpos[-1];

            for (k = 0; k < ncorners; k++)
            {
                j = cornerpos[k];
                int score = prev[j];
                if (!nonmax_suppression ||
                    (score > prev[j + 1] && score > prev[j - 1] &&
                        score > pprev[j - 1] && score > pprev[j] && score > pprev[j + 1] &&
                        score > curr[j - 1] && score > curr[j] && score > curr[j + 1]))
                {
                    keypoints.emplace_back((float)j, (float)(i - 1), 7.f, -1.0f, (float)score);
                }
            }
        }
    }

#pragma warning (pop)
}

void OrbDetector::FAST(const cv::Mat& img, mage::temp::vector<KeyPoint>& keypoints, int threshold, bool nonmax_suppression, uchar* threshold_tab, mage::thread_memory& memory, FeatureType type)
{
    switch (type)
    {
    case FeatureType::TYPE_5_8:
        FAST_t<8>(img, keypoints, threshold, nonmax_suppression, threshold_tab, memory);
        break;
    case FeatureType::TYPE_7_12:
        FAST_t<12>(img, keypoints, threshold, nonmax_suppression, threshold_tab, memory);
        break;
    case FeatureType::TYPE_9_16:
        FAST_t<16>(img, keypoints, threshold, nonmax_suppression, threshold_tab, memory);
        break;
    }
}
